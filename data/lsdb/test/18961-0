
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">

<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en   ">

  <head>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
	
		
	<title>SOLiD Software Development Community > Projects > SOCS > Home</title>
	<link rel="alternate" type="application/rss+xml" title="SOLiD Software Development Community - SOCS - Activity" href="http://solidsoftwaretools.com/gf/?action=Rss&amp;section=activity&amp;project_id=39" />
<style type="text/css">
<!-- 
 /* ## globals ## */

* {
	margin:0px;
	padding:0px;
}

img { 
	margin:0px; 
	padding:0px; 
	border:0px;
	outline:none; 
}

body {
	min-width: 955px;

	color:#333333;
	font-family:verdana,arial,helvetica,sans-serif;
	font-size:11px;

}



pre {
	font-size: 1.0em;
	/* font-family: Tahoma, Verdana, Arial, sans-serif; */
	font-family: Courier, monospace;
}

.noleftbody {
	font-size: 11px;
	line-height: 1.2em;
	min-width: 955px;
	color: #666;
	background-color: #ffffff;
}

a:link,a:visited {
	color: #1279c6;
	text-decoration:none;
}
a:hover { text-decoration: underline; color:#e16f00}

.clear { clear: both; }

input {
	margin-right: 2px;
	margin-left: 2px;
}

/* ## header ## */


#header {
	height:87px;
	margin:0;
	padding:0;
	border-bottom:4px solid #d9d9d9;
	background: white url(http://www3.appliedbiosystems.com/cms/fragments/ab_header/images/navigation/background.png) repeat-x;
	background-position:0 50px;
	overflow:hidden;
}
#header,#header a { color: #fff; }
#header #logo { 
	width: 192px;
	margin:0;
	padding:0;
	position:relative;
	top:0px;
	left:0px;
	overflow: hidden;
	float: left;
	text-indent: -9999px;
	background: url('http://www3.appliedbiosystems.com/cms/fragments/ab_header/images/ab_Logo.jpg') top left no-repeat;
}
#header #logo.selected{
	width: 192px;
	overflow: hidden;
	float: left;
	text-indent: -9999px;
	/* background: url('http://www3.appliedbiosystems.com/cms/fragments/ab_header/images/ab_Logo.jpg') top left no-repeat; */
}
#header #logo a { 
	width: 175px; 
	display:block; 
	height: 50px; 
}
ul#mainNav.selected {
	float: left;
	padding-right: 16px;
	min-width: 16px;
	background: url('/themes/gforge5/images/purple_nav_end_selected.gif') right top no-repeat;
}

/* ## main nav ## */

ul#mainNav {
	float: left;
	margin-top:50px;
	padding-right: 16px;
	min-width: 16px;
	height:44px;
}
/* html ul#mainNav { width: 500px; }*/
ul#mainNav li {
	display: inline;
	float: left;
	/*background: url('/themes/gforge5/images/purple_nav_br.gif') right top no-repeat;*/
}
ul#mainNav li a { 
	display: block; 
	float: left; 
	line-height: 37px;
	padding: 0 15px;
	text-decoration: none;
	margin: 0px;
}
ul#mainNav li a:hover
{ 

background: #d9d9d9 url('http://www3.appliedbiosystems.com/cms/fragments/css_links/images/backH3.gif') repeat-x;
color:#004799;

}
ul#mainNav li.start a { padding-left: 8px; }
ul#mainNav li.end a {padding-right: 8px; }
ul#mainNav li a.selected { 
font-weight:bold;
background: #d9d9d9 url('http://www3.appliedbiosystems.com/cms/fragments/css_links/images/backH3.gif') repeat-x;
color:#004799;
border:1px solid #004799;
}


/* ## login ## */

div#login {
	max-height: 32px; 
	overflow: hidden;
	display: block;
	float: right; 
	padding-left: 8px;
	padding-right: 5px;
	padding-top:10px;
	line-height: 32px;
	white-space: nowrap;
	color:#333;
}

div#login a { color:#333; font-family:Verdana, Arial, Helvetica, sans-serif; font-size:11px;text-decoration:none ;margin: 0 5px; }


/* ## sidebar ## */

#left { 
	width: 155px;
	padding-left: 0px; 
	overflow: hidden;
	position: absolute;
	left: 0px;
}

h1.navLabel {
	background-color:#004799;
	background-image:url(http://www.appliedbiosystems.com/images/gradient.jpg);
	background-repeat:repeat-x;
	border-bottom:1px solid #004799;
	border-top:1px solid #004799;
	color:#FFFFFF;
	font-size:11px;
	font-weight:bold;
	line-height:15px;
	padding:4px 8px;
	width:155px;
	margin:0px;
}

h1.navLabel_bottom {
/*	display: block;
	text-align: center;	
	width: 147px;	
	line-height: 21px;
	color: #B6BDD7;
	background: url('/themes/gforge5/images/purple_side_ul.gif') bottom left no-repeat;
	padding: 0px; */
}

h1#logo {
	padding: 0px;
}

h1 {
	font-size: 22px;	
	padding: 3px;
}

h2 {
	font-size: 18px;
	padding: 3px;
}

h3 {
	font-size: 14px;
	padding: 2px;
}

h4 {
	font-size: 12px;
	padding: 2px;
}

h5 {
	font-size: 10px;
	padding: 2px;
}

h6 {
	font-size: 8px;
	padding: 2px;
}

/* ## sidebar navigation ## */
ul#sideNav { float: left; padding-bottom: 21px; background: url('/themes/gforge5/images/purple_side_ul.gif') bottom left no-repeat; }
ul#sideNav li { 
	padding: 0px; 
	list-style: none; 
	display: block; 
	float: left; 
}
ul#sideNav li a {
	display: block;
	width: 85px;
	line-height: 26px;
	padding: 0 30px;
	border-top:1px solid #f3f9ff;
	border-right:1px solid #b4b9d7;
	border-bottom:1px solid #8c92b3;
	border-left:1px solid #d0d5f5;
	background:#dedede url('/themes/gforge5/images/purple_sub_nav.gif') 0 1px no-repeat;
	text-decoration: none;
	white-space: nowrap;
}

ul#sideNav li a.selected { 
	background-color:#f8f8f8; 
	font-weight: bold; 
	color: #7D7F99; 
	margin: 5px 0;
	width: 92px;
	border-right: 0px;
	background-position:0 -26px; 
	text-decoration: none;
	white-space: nowrap;
}
ul#sideNav li a.group { 
	background-color:#8F94AC; 
	color: #fff; 
	background-position:0 -52px; 
	border-top:1px solid #bfc4dc;
	border-left:1px solid #9fa4bb;
	border-bottom:1px solid #585d75;
	border-right:1px solid #7b8098;
	white-space: nowrap;
}

ul#sideNav li ul li a { background-color:#C3C9EA; background-position:0 -78px; }
ul#sideNav li ul { clear: left; float: left; margin-bottom: 5px; }

/* ## main content area ## */

#rightnoleft { margin-left: 0px; background: #ffffff; }
#rightnoleft .contentNav {
	height: 24px; 
	display: block;
	font-size: 11px;
	overflow: hidden;
	background-color:#fff;
	border-bottom:1px solid #ccc;
}
#rightnoleft .main { padding: 10px 10px 10px 10px;}
#rightnoleft .main p { padding-bottom: 10px; }

#right { margin-left: 155px; background: #ffffff; border-left:1px solid #B8C6D9;}

#right .contentNav {
	height: 24px; 
	display: block;
	font-size: 11px;
	overflow: hidden;
	background-color:#fff;
	border-bottom:1px solid #ccc;
}
.contentNav #crumbs { 
	float: left; 
	padding-left: 15px;
	line-height: 25px; 

	min-width:400px;
}
.contentNav #crumbs a { margin: 0 4px; }

.contentNav #crumbsSelected { float: right; padding-right: 15px; }
.contentNav #crumbsSelected a { 
	display: block; 
	line-height: 24px; 
	margin-top: 9px;
	height: 24px;
	float: left;
	padding-right: 15px;
	font-weight: bold;
	background: #f8f8f8 url('/themes/gforge5/images/purple_crumb_selected_r.gif') top right no-repeat; 
}
.contentNav #crumbsSelected a span {
	padding-left: 15px;
	float: left;
	background: url('/themes/gforge5/images/purple_crumb_selected.gif') top left  no-repeat; 
} 

/* ## main block text/table styles ## */

#right .main { padding: 10px 10px 10px 10px; }
#right .main p { padding-bottom: 10px; }

table.sForm { margin-bottom: 20px; }
table.sForm label { display: block;  font-weight: bold; padding-bottom: 5px; }
table.sForm .txt, table.sForm select { border: 1px solid #666; width: 100%; padding: 1px; }

table strong { font-size: 0.95em; }

.tabular { /*float: left;*/ font-size: 11px; color: #666666;border-spacing:0px;}
.tabular td { padding: 3px; border-right:1px solid #a4a4a4; border-left:1px solid #a4a4a4;}
.tabular td table td {border-right:0px; border-left:0px;}
.tabular th a { color: #ffffff; font-size: 1.0em; text-decoration: none;}
tr.th th {  border:1px solid #a4a4a4; text-align: left; padding: 0 9px; line-height:22px; color: #5b5b5b; background: #d0d0d0 url('http://www3.appliedbiosystems.com/cms/fragments/css_links/images/backH3.gif') repeat-x; }
tr.th th table tr th {border:0px;}
.noLeft { padding-left: 0px!important; }
.noRight { padding-right: 0px!important; }
.th_l { padding-left: 9px; background: url('/themes/gforge5/images/purple_th_l.gif') top left no-repeat;  }
.th_r { padding-right: 9px; background: url('/themes/gforge5/images/purple_th_r.gif') top right no-repeat;  }
tr.l { background: #fff; }
tr.d { background: #fff; } /* was #F5F5F5 */
td.tFooter { padding: 0px; border-top:1px solid #a4a4a4; border-left:0px; border-right:0px; background: #ffffff; line-height:0px;}

.tabular2, .tabular2 a {
	padding:0px;
	border:0px;
	margin:0px;
	height:15px;
	min-height:15px;
	max-height:15px;
	color: #ffffff; 
	font-size: 11px; 
	font-weight: bold;
	text-decoration: none;
	white-space: nowrap;
}

.infobox {
	border:1px solid #666666;
	background-color:#ffffcc;
	padding: 8px;
	margin-top: 0px;
	margin-bottom: 10px;
	margin-right: 10px;
	margin-left: 10px;
}

#toolRight { float: right;  width: 20%; padding: 10px; margin-left: 15px; border: 1px solid #666; }

/*************
   Buttons
**************/

.button {
    color:#FFFFFF;
    background-color:#e16f00;
    font-family: Verdana, Arial, Helvetica, sans-serif;
    font-size: 11px;
    text-decoration:none;
    white-space:nowrap;
    border-top:1px solid #9999CC !important;
    border-right:1px solid #333366 !important;
    border-bottom:1px solid #333366 !important;
    border-left:1px solid #9999CC !important;
    padding: 1px 3px 1px 3px !important;
    margin: 4px 4px 4px 4px;
    cursor:pointer;
    cursor:hand;
}


.button a, .button a:hover, .button a:visited {
	text-decoration: none;
	color: #FFFFFF;
    font-family: Verdana, Arial, Helvetica, sans-serif;
    font-size: xx-small;
}


DIV.buttonLink {
	font-weight: normal;
	white-space: nowrap;
	float: right;
	text-align: right;
	height: 26px;
	padding: 0px;
	line-height: 26px;
	border: 0px none;
}

/*--------------------------------------------------
  REQUIRED to hide the non-active tab content.
  But do not hide them in the print stylesheet!
  --------------------------------------------------*/
.tabberlive .tabbertabhide {
 display:none;
}

/*--------------------------------------------------
  .tabber = before the tabber interface is set up
  .tabberlive = after the tabber interface is set up
  --------------------------------------------------*/
.tabber {
}
.tabberlive {
 margin-top:1em;
}

/*--------------------------------------------------
  ul.tabbernav = the tab navigation list
  li.tabberactive = the active tab
  --------------------------------------------------*/
ul.tabbernav
{
 margin:0;
 padding: 3px 0;
 border-bottom: 1px solid #778;
 font: bold 9px Verdana, sans-serif;
}

ul.tabbernav li 
{
 list-style: none;
 margin: 0;
 display: inline;
}

ul.tabbernav li a
{
 padding: 3px 0.5em;
 margin-left: 3px;
 border: 1px solid #778;
 border-bottom: none;
 background: #f5f7f9;
 text-decoration: none;
}

ul.tabbernav li a:link { color: #555a61; }
ul.tabbernav li a:visited { color: #555a61; }

ul.tabbernav li a:hover
{
 background: #eceff2;
 border-color: #227;
}

ul.tabbernav li.tabberactive a
{
 background-color: #fff;
 border-bottom: 1px solid #fff;
}

ul.tabbernav li.tabberactive a:hover
{
 background: white;
 border-bottom: 1px solid white;
}


/*--------------------------------------------------
  .tabbertab = the tab content
  Add style only after the tabber interface is set up (.tabberlive)
  --------------------------------------------------*/
.tabberlive .tabbertab {
 padding:5px;
 border:1px solid #aaa;
 border-top:0;

 /* If you don't want the tab size changing whenever a tab is changed
    you can set a fixed height */

 /* height:200px; */

 /* If you set a fix height set overflow to auto and you will get a
    scrollbar when necessary */

 /* overflow:auto; */
}

/* If desired, hide the heading since a heading is provided by the tab */
.tabberlive .tabbertab h2 {
 display:none;
}
.tabberlive .tabbertab h3 {
 display:none;
}

/* Example of using an ID to set different styles for the tabs on the page */
.tabberlive#tab1 {
}
.tabberlive#tab2 {
}
.tabberlive#tab2 .tabbertab {
 height:200px;
 overflow:auto;
}

.docmanFolders ul {
	padding: 3px 0px 3px 2px;
	margin: 0px;
}
.docmanFolders li {
	list-style: none;
	padding: 6px 2px 0px 19px;
	margin: 0px;
	background: url(/images/docman_folder.gif) top left no-repeat;
}

/*******************
 * Tooltips
 *******************/
#tooltip {
    padding: 3px;
    background: #edffd9;
    border: 1px solid #ccc;
}

span.tip {
    border-bottom: 1px solid #eee;
}

/*******************
 * Drag & Drop
 *******************/
.jsSortTBL tr {
	background-color: #a1a7af;
}
.jsSortTBL tr.contenta td {
	background-color: #f2f4f6;
}
.jsSortTBL tr.contentb td {
	background-color: #eceff2;
}
.jsSortTBL tr.contenta td[rowspan], .jsSortTBL tr.contentb td[rowspan] {
	background-color: #ffffff;
}
.jsSortTBL tr.over td {
	background-color: #edffd9;
}

.jsTrackerQueue {
	padding: 0px;
	width: 590px;
	height: auto !important;
	height: 120px;
	min-height: 120px;
	border: 1px solid #a1a7af;
	background-color: #f2f4f6;
	display: table-cell;
}
.jsTrackerQueueActive {
	background-color: #edffd9;
}
.jsTrackerQueueSave {
	margin-top: 5px;
	width: 350px;
}
.jsTrackerQueueTable {
	border-collapse:collapse;
}
.jsTrackerQueueTable td {
	padding-left: 2px;
	height: 18px;
}
.jsTrackerQueueColId {
	width:40px;
}
.jsTrackerQueueColName {
	width:450px;
}
.jsTrackerQueueColPriority {
	width:45px;
}
.jsTrackerQueueColRemove {
	width:45px;
}
#jsTrackerItemList {
	padding: 0px;
}
.jsTrackerQueueTitle {
	border-bottom: 1px solid #a1a7af;
}
.jsItemA {
	background-color: #f2f4f6;
	border-bottom: 1px solid #a1a7af;
}
.jsItemB {
	background-color: #eceff2;
	border-bottom: 1px solid #a1a7af;
}
.jsRBorder {
	border-right: 1px solid #a1a7af;
}
.moveHandle {
	cursor: move;
}
.feedback { color: red; font-weight: bold; }
.warning { color: red; font-weight: bold; }
.over { background-color: #edffd9; }

.main li {
margin-left: 20px;
}

.main td {
padding: 3px 3px 3px 3px;
margin-right: 3px;
}

.main input, select {
    /*margin: 2px;*/
    font-size: 0.9em;
}

DIV.quickJumpMenu {
	border: 1px solid #4D4D74;
	background-color: #FFFFFF;
	overflow: scroll;
	height: 400px;
	width: 150px;
}

IMG.quickJumpMenu {
	margin-top:50px;
}

TABLE.quickJumpMenu {
	border: 0px;
}

TD.quickJumpMenu {
}

a:link.quickJumpMenu, a:visited.quickJumpMenu {
	text-decoration: none;
	color: #666;
	font-weight: normal;
	padding:0px;
	margin:0px;
}

A:hover.quickJumpMenu {
	background-color: #AAAAAA;
	text-decoration: underline;
	
}

DIV.SearchByIDMenu {
	border: 1px solid #4D4D74;
	background-color: #FFFFFF;
}

IMG.SearchByIDMenu {
	margin-top:50px;
}

TABLE.SearchByIDMenu {
	border: 0px;
}

TD.SearchByIDMenu {
	text-align: center;
}

SELECT.SearchByIDMenu {
}

IMG.HelpMenu {
	margin-left: 5px;
	margin-top:50px;
}


.troveForm {

}



/* Expandable Menus Stuff*/

.expandableMenu{
margin: 0px;
padding: 0;
width: 170px; /*width of menu*/
/*border: 1px solid #9A9A9A;*/
border-bottom-width: 0;
}

.expandableMenu a.menuitem{
	/*display: block;
	width: 92px;
	line-height: 26px;
	padding: 0 30px;
	border-top:1px solid #f3f9ff;
	border-right:1px solid #b4b9d7;
	border-bottom:0px;
	border-left:1px solid #d0d5f5;
	background-position:0 -282px;
	background-color:#e9e9e9;
	text-decoration: none;
	white-space: nowrap;*/
}

.expandableMenu a.openheader{
	/*background:#dedede url('/themes/gforge5/images/purple_sub_nav.gif') 0 1px no-repeat;
	background-position:0 -197px;
	background-color:#e9e9e9;*/
}

/*.expandableMenu a.menuitem:visited, .expandableMenu .menuitem:active{
color: white;
}*/

.expandableMenu a.menuitem .statusicon{ /*CSS for icon image that gets dynamically added to headers*/
position: absolute;
top: 5px;
right: 5px;
border: none;
}

.expandableMenu a.selected { 
background-color:#FFFFFF;
border-bottom:1px solid #FFFFFF;
color:#004799;
display:block;
font-size:11px;
font-weight:bold;
line-height:14px;
padding:3px 8px 2px;
text-decoration:none;
width:139px;
}

.expandableMenu a.regular { 
background-color:#F0F0F0;
border-bottom:1px solid #B0B0B0;
border-top:1px solid #FFFFFF;
color:#003366;
display:block;
font-size:10px;
line-height:14px;
padding:2px 8px 3px;
text-decoration:none;
width:139px;
}


.expandableMenu a.menuitem:hover{
/*color:white;*/
}

.expandableMenu ul{ 
margin-bottom: 5px;
margin-top: 0px;
/*list-style-type: none;
margin: 0;
padding: 0;*/
}


.expandableMenu ul li.first_li {
	
	/*margin-top: 5px;*/
}

.expandableMenu ul li {
background-color:#FFFFFF;
background-image:url(http://www3.appliedbiosystems.com/cms/fragments/appsleftnavigation/images/bullet.jpg);
background-position:9px 7px;
background-repeat:no-repeat;
border-bottom:1px solid #FFFFFF;
border-top:1px solid #FFFFFF;
color:#1279C6;
display:block;
font-family:Verdana,Arial,Helvetica,sans-serif;
font-size:10px;
line-height:14px;
padding:1px 0 4px 20px;
text-decoration:none;
}


.expandableMenu .submenu ul li{
background-color:#fff;
background:none;
border-bottom:0px;
border-top:0px;
color:#1279C6;
display:block;
font-family:Verdana,Arial,Helvetica,sans-serif;
font-size:10px;
padding-top:0px;
padding-bottom:0px;

text-decoration:none;
}

.expandableMenu ul li a{


}

.expandableMenu div.submenu{ /*DIV that contains each sub menu*/
	/*background: white;
	margin-bottom:0px;*/
	margin-bottom:0px;
}

.expandableMenu div.submenu ul {
margin-bottom:0px;
}

.expandableMenu div.submenu ul li{
/*border-bottom: 1px solid blue;
clear: left; 
float: left; 
margin-bottom: 5px;*/
}

.expandableMenu div.submenu ul li a{
	display: block;
	width: 92px;
	padding: 0 30px;
	background:#ffffff url('/themes/gforge5/images/purple_sub_nav.gif') 0 1px no-repeat;
	text-decoration: none;
	white-space: nowrap;
	text-overflow:ellipsis;
	overflow:hidden;
	background-color: #fff; 
	background-position:0 -126px;

} 

.expandableMenu div.submenu ul li a.finalitem{
	display: block;
	width: 92px;
	/*margin-bottom:5px;*/
	margin-bottom: 0px;
	padding: 0 30px;

	background:#dedede url('/themes/gforge5/images/purple_sub_nav.gif') 0 1px no-repeat;
	text-decoration: none;
	white-space: nowrap;
	text-overflow:ellipsis;
	overflow:hidden;
	background-color:#fff; 
	background-position:0 -166px;
}


.expandableMenu div.submenu ul li a:hover{
	/*color: white;*/
}

.expandableMenu .openheader{ /*CSS class to apply to expandable header when it's expanded*/
}


/* Expandable treeview stuff */
/* Put this inside a @media qualifier so Netscape 4 ignores it */
@media screen, print { 
	/* Turn off list bullets */
	ul.mktree  li { list-style: none; } 
	/* Control how "spaced out" the tree is */
	ul.mktree, ul.mktree ul , ul.mktree li { margin-left:10px; padding:0px; line-height:18px; }
	/* Provide space for our own "bullet" inside the LI */
	ul.mktree  li           .bullet { padding-left: 15px; }
	/* Show "bullets" in the links, depending on the class of the LI that the link's in */
	ul.mktree  li.liOpen    .bullet { cursor: pointer; background: url('/images/docman_folder.gif')  center left no-repeat; }
	ul.mktree  li.liClosed  .bullet { cursor: pointer; background: url('/images/docman_folder_closed.gif')   center left no-repeat; }
	ul.mktree  li.liBullet  .bullet { cursor: default; background: url('/images/docman_folder_closed.gif') center left no-repeat; }
	/* Sublists are visible or not based on class of parent LI */
	ul.mktree  li.liOpen    ul { display: block; }
	ul.mktree  li.liClosed  ul { display: none; }
	/* Format menu items differently depending on what level of the tree they are in */
	ul.mktree  li { font-size: 11pt; }
	ul.mktree  li ul li { font-size: 9pt; }
	/*ul.mktree  li ul li ul li { font-size: 6pt; }
	ul.mktree  li ul li ul li ul li { font-size: 6pt; }*/
	ul.mktree a { text-decoration: none}
	ul.mktree a:hover { color:black; }
}


.liOpen a, .liClosed a, #docmanMainTree li a {
	font-size: 12px;
}

tt {
	font-size: 12px;
}

strong {
	font-size: 9px;	
}


.row_hidden {	
	visibility:hidden;
	display:none;
}

.row_visible {
	visibility: visible;
	display: display;
}

.enable_link, .enable_link:visited {
	text-decoration: none;
	font-size: 9px;
}

.enable_link:hover {
	color: black;
}

#container {
	border-bottom:1px solid #cccccc;

}
/*******************************/
/***  ViewCVS CSS Stylesheet ***/
/*******************************/

/*** Standard Tags ***/
.viewvc img {
	border: none;
}

.viewvc table {
  width: 100%;
  margin: 0px; 
  border: none;
  /*color: #5a5a89; 
  background: #dddddd;*/
  padding:0px;
}
.viewvc table.border {
  width: 100%;
  margin: 0px; 
  border: none;
  color: #5a5a89; 
  background: #dddddd;
  padding:0px;
}

.viewvc table.auto {
	width: auto;
}

/** Navigation Headers ***/
.vc_navheader {
   background-color: #ededed;
}


/*** Table Headers ***/
.vc_header {
	background: #4D4D74 url('/themes/gforge5/images/blue/th.gif') repeat-x;
	font-weight: bold; color:#ffffff; font-size: x-small;
	height: 21px;
/*	padding-left: 2px;
	padding-right: 2px;*/
}
.vc_header a { color:#ffffff; }
.vc_header_sort {
	/*text-align: left; padding: 0 9px; line-height:22px; color: #fff; */
	background: #4D4D74 url('/themes/gforge5/images/blue/th.gif') repeat-x;
	font-weight: bold; color:#555a61; font-size: x-small;
	height: 21px;
	/*padding-left: 2px;
	padding-right: 2px;*/
}
.vc_header_sort a { color:#ffffff; }


/*** Table Rows ***/
.vc_row_even {
   background-color: #fff;
}
.vc_row_odd {
   background-color: #EDEDED;
}


/*** Log messages ***/
.vc_log {
   /* unfortunately, white-space: pre-wrap isn't widely supported ... */
   white-space: -moz-pre-wrap; /* Mozilla based browsers */
   white-space: -pre-wrap;     /* Opera 4 - 6 */
   white-space: -o-pre-wrap;   /* Opera >= 7 */
   white-space: pre-wrap;      /* CSS3 */
   word-wrap: break-word;      /* IE 5.5+ */
}


/*** Markup Summary Header ***/
.vc_summary {
   background-color: #eeeeee;
}


/*** Diff Styles ***/
.vc_diff_header {
   background-color: #ffffff;
}
.vc_diff_chunk_header {
   background-color: #99cccc;
}
.vc_diff_chunk_extra {
   font-size: 8pt;
}
.vc_diff_empty {
   background-color: #cccccc;
   font-family: monospace;
   font-size: 8pt;
}
.vc_diff_add {
   background-color: #aaffaa;
   font-family: monospace;
   font-size: 8pt;
}
.vc_diff_remove {
   background-color: #ffaaaa;
   font-family: monospace;
   font-size: 8pt;
}
.vc_diff_change {
   background-color: #ffff77;
   font-family: monospace;
   font-size: 8pt;
}
.vc_diff_change_empty {
   background-color: #eeee77;
   font-family: monospace;
   font-size: 8pt;
}
.vc_diff_nochange {
   font-family: monospace;
   font-size: 8pt;
}
.vc_raw_diff {
   background-color: #cccccc;
   font-size: 8pt;
}

/*** Annotate Styles ***/
.vc_blame_line, .vc_blame_author, .vc_blame_rev {
   font-family: monospace;
   font-size: 8pt;
   text-align: right;
   white-space: nowrap;
   padding-right: 0.5em;
}
.vc_blame_text {
   font-family: monospace;
   font-size: 8pt;
   text-align: left;
   white-space: pre;
   width: 100%;
}

/*** Query Form ***/
.vc_query_form {
   background-color: #e6e6e6;
}
a.interwiki {
background:url("/lib/images/interwiki.png") no-repeat scroll 0 1px transparent;
padding-left:16px;
}
a.iw_wp {
background-image:url("/lib/images/interwiki/wp.gif");
}
a.iw_wpfr {
background-image:url("/lib/images/interwiki/wpfr.gif");
}
a.iw_wpde {
background-image:url("/lib/images/interwiki/wpde.gif");
}
a.iw_wpes {
background-image:url("/lib/images/interwiki/wpes.gif");
}
a.iw_wppl {
background-image:url("/lib/images/interwiki/wppl.gif");
}
a.iw_wpjp {
background-image:url("/lib/images/interwiki/wpjp.gif");
}
a.iw_wpmeta {
background-image:url("/lib/images/interwiki/wpmeta.gif");
}
a.iw_doku {
background-image:url("/lib/images/interwiki/doku.gif");
}
a.iw_dokubug {
background-image:url("/lib/images/interwiki/dokubug.gif");
}
a.iw_amazon {
background-image:url("/lib/images/interwiki/amazon.gif");
}
a.iw_amazon_de {
background-image:url("/lib/images/interwiki/amazon.de.gif");
}
a.iw_amazon_uk {
background-image:url("/lib/images/interwiki/amazon.uk.gif");
}
a.iw_phpfn {
background-image:url("/lib/images/interwiki/phpfn.gif");
}
a.iw_coral {
background-image:url("/lib/images/interwiki/coral.gif");
}
a.iw_sb {
background-image:url("/lib/images/interwiki/sb.gif");
}
a.iw_google {
background-image:url("/lib/images/interwiki/google.gif");
}
a.iw_meatball {
background-image:url("/lib/images/interwiki/meatball.gif");
}
a.iw_wiki {
background-image:url("/lib/images/interwiki/wiki.gif");
}
a.iw_bug {
background-image:url("/lib/images/interwiki/bug.gif");
}
a.iw_plugintag {
background-image:url("/lib/images/interwiki/plugintag.png");
}
a.mediafile {
background:url("/lib/images/fileicons/file.png") no-repeat scroll 0 1px transparent;
padding-bottom:1px;
padding-left:18px;
}
a.mf_sxw {
background-image:url("/lib/images/fileicons/sxw.png");
}
a.mf_ppt {
background-image:url("/lib/images/fileicons/ppt.png");
}
a.mf_bz2 {
background-image:url("/lib/images/fileicons/bz2.png");
}
a.mf_gif {
background-image:url("/lib/images/fileicons/gif.png");
}
a.mf_css {
background-image:url("/lib/images/fileicons/css.png");
}
a.mf_gz {
background-image:url("/lib/images/fileicons/gz.png");
}
a.mf_sxc {
background-image:url("/lib/images/fileicons/sxc.png");
}
a.mf_htm {
background-image:url("/lib/images/fileicons/htm.png");
}
a.mf_jpg {
background-image:url("/lib/images/fileicons/jpg.png");
}
a.mf_rpm {
background-image:url("/lib/images/fileicons/rpm.png");
}
a.mf_java {
background-image:url("/lib/images/fileicons/java.png");
}
a.mf_doc {
background-image:url("/lib/images/fileicons/doc.png");
}
a.mf_rar {
background-image:url("/lib/images/fileicons/rar.png");
}
a.mf_txt {
background-image:url("/lib/images/fileicons/txt.png");
}
a.mf_cpp {
background-image:url("/lib/images/fileicons/cpp.png");
}
a.mf_deb {
background-image:url("/lib/images/fileicons/deb.png");
}
a.mf_tar {
background-image:url("/lib/images/fileicons/tar.png");
}
a.mf_js {
background-image:url("/lib/images/fileicons/js.png");
}
a.mf_sxd {
background-image:url("/lib/images/fileicons/sxd.png");
}
a.mf_odt {
background-image:url("/lib/images/fileicons/odt.png");
}
a.mf_sxi {
background-image:url("/lib/images/fileicons/sxi.png");
}
a.mf_odf {
background-image:url("/lib/images/fileicons/odf.png");
}
a.mf_ps {
background-image:url("/lib/images/fileicons/ps.png");
}
a.mf_conf {
background-image:url("/lib/images/fileicons/conf.png");
}
a.mf_c {
background-image:url("/lib/images/fileicons/c.png");
}
a.mf_lua {
background-image:url("/lib/images/fileicons/lua.png");
}
a.mf_xml {
background-image:url("/lib/images/fileicons/xml.png");
}
a.mf_ods {
background-image:url("/lib/images/fileicons/ods.png");
}
a.mf_rtf {
background-image:url("/lib/images/fileicons/rtf.png");
}
a.mf_png {
background-image:url("/lib/images/fileicons/png.png");
}
a.mf_tgz {
background-image:url("/lib/images/fileicons/tgz.png");
}
a.mf_xls {
background-image:url("/lib/images/fileicons/xls.png");
}
a.mf_jar {
background-image:url("/lib/images/fileicons/jar.png");
}
a.mf_odg {
background-image:url("/lib/images/fileicons/odg.png");
}
a.mf_py {
background-image:url("/lib/images/fileicons/py.png");
}
a.mf_odc {
background-image:url("/lib/images/fileicons/odc.png");
}
a.mf_cs {
background-image:url("/lib/images/fileicons/cs.png");
}
a.mf_jpeg {
background-image:url("/lib/images/fileicons/jpeg.png");
}
a.mf_pl {
background-image:url("/lib/images/fileicons/pl.png");
}
a.mf_rb {
background-image:url("/lib/images/fileicons/rb.png");
}
a.mf_odi {
background-image:url("/lib/images/fileicons/odi.png");
}
a.mf_pdf {
background-image:url("/lib/images/fileicons/pdf.png");
}
a.mf_zip {
background-image:url("/lib/images/fileicons/zip.png");
}
a.mf_odp {
background-image:url("/lib/images/fileicons/odp.png");
}
a.mf_php {
background-image:url("/lib/images/fileicons/php.png");
}
a.mf_swf {
background-image:url("/lib/images/fileicons/swf.png");
}
a.mf_html {
background-image:url("/lib/images/fileicons/html.png");
}
div.clearer {
clear:both;
height:0;
line-height:0;
overflow:hidden;
}
div.no {
display:inline;
margin:0;
padding:0;
}
.hidden {
display:none;
}
div.error {
background:url("/lib/styles/../images/error.png") no-repeat scroll 0.5em 0 #FFCCCC;
border-bottom:1px solid #FFAAAA;
color:#000000;
font-size:90%;
margin:0;
overflow:hidden;
padding-left:3em;
}
div.info {
background:url("/lib/styles/../images/info.png") no-repeat scroll 0.5em 0 #CCCCFF;
border-bottom:1px solid #AAAAFF;
color:#000000;
font-size:90%;
margin:0;
overflow:hidden;
padding-left:3em;
}
div.success {
background:url("/lib/styles/../images/success.png") no-repeat scroll 0.5em 0 #CCFFCC;
border-bottom:1px solid #AAFFAA;
color:#000000;
font-size:90%;
margin:0;
overflow:hidden;
padding-left:3em;
}
div.notify {
background:url("/lib/styles/../images/notify.png") no-repeat scroll 0.5em 0 #FFFFCC;
border-bottom:1px solid #FFFFAA;
color:#000000;
font-size:90%;
margin:0;
overflow:hidden;
padding-left:3em;
}
.medialeft {
float:left;
}
.mediaright {
float:right;
}
.mediacenter {
display:block;
margin-left:auto;
margin-right:auto;
}
.leftalign {
text-align:left;
}
.centeralign {
text-align:center;
}
.rightalign {
text-align:right;
}
em.u {
font-style:normal;
text-decoration:underline;
}
em em.u {
font-style:italic;
}
.code .br0 {
color:#66CC66;
}
.code .co0 {
color:#808080;
font-style:italic;
}
.code .co1 {
color:#808080;
font-style:italic;
}
.code .co2 {
color:#808080;
font-style:italic;
}
.code .co3 {
color:#808080;
}
.code .coMULTI {
color:#808080;
font-style:italic;
}
.code .es0 {
color:#000099;
font-weight:bold;
}
.code .kw1 {
color:#B1B100;
}
.code .kw2 {
color:#000000;
font-weight:bold;
}
.code .kw3 {
color:#000066;
}
.code .kw4 {
color:#993333;
}
.code .kw5 {
color:#0000FF;
}
.code .me1 {
color:#006600;
}
.code .me2 {
color:#006600;
}
.code .nu0 {
color:#CC66CC;
}
.code .re0 {
color:#0000FF;
}
.code .re1 {
color:#0000FF;
}
.code .re2 {
color:#0000FF;
}
.code .re3 {
color:#FF3333;
font-weight:bold;
}
.code .re4 {
color:#009999;
}
.code .st0 {
color:#FF0000;
}
.code .sy0 {
color:#66CC66;
}
div#acl_manager div#acl__tree {
border:1px solid #8CACBB;
float:left;
font-size:90%;
height:300px;
overflow:auto;
text-align:left;
width:25%;
}
div#acl_manager div#acl__tree a.cur {
background-color:#FFFF99;
font-weight:bold;
}
div#acl_manager div#acl__tree ul {
list-style-type:none;
margin:0;
padding:0;
}
div#acl_manager div#acl__tree li {
padding-left:1em;
}
div#acl_manager div#acl__tree ul img {
cursor:pointer;
margin-right:0.25em;
}
div#acl_manager div#acl__detail {
float:right;
height:300px;
overflow:auto;
width:73%;
}
div#acl_manager div#acl__detail fieldset {
width:90%;
}
div#acl_manager div#acl__detail div#acl__user {
border:1px solid #8CACBB;
margin-bottom:0.6em;
padding:0.5em;
}
div#acl_manager table.inline {
margin:0;
width:100%;
}
div#acl_manager .aclgroup {
background:url("/lib/plugins/acl/pix/group.png") no-repeat scroll 0 1px transparent;
padding:1px 0 1px 18px;
}
div#acl_manager .acluser {
background:url("/lib/plugins/acl/pix/user.png") no-repeat scroll 0 1px transparent;
padding:1px 0 1px 18px;
}
div#acl_manager .aclpage {
background:url("/lib/plugins/acl/pix/page.png") no-repeat scroll 0 1px transparent;
padding:1px 0 1px 18px;
}
div#acl_manager .aclns {
background:url("/lib/plugins/acl/pix/ns.png") no-repeat scroll 0 1px transparent;
padding:1px 0 1px 18px;
}
div#acl_manager label.disabled {
color:#666666 !important;
}
#acl_manager label {
display:inline;
font-weight:normal;
text-align:left;
}
#acl_manager table {
margin-left:10%;
width:80%;
}
#acl_manager table tr {
background-color:inherit;
}
#acl_manager table tr:hover {
background-color:#DEE7EC;
}
#plugin__manager {
}
#plugin__manager h2 {
margin-left:0;
}
#plugin__manager form {
display:block;
margin:0;
padding:0;
}
#plugin__manager legend {
display:none;
}
#plugin__manager fieldset {
width:auto;
}
#plugin__manager .button {
margin:0;
}
#plugin__manager p, #plugin__manager label {
text-align:left;
}
#plugin__manager .hidden {
display:none;
}
#plugin__manager .new {
background:none repeat scroll 0 0 #DEE7EC;
}
#plugin__manager input[disabled] {
border-color:#CCCCCC;
color:#CCCCCC;
}
#plugin__manager .pm_menu, #plugin__manager .pm_info {
margin-left:0;
text-align:left;
}
#plugin__manager .pm_menu {
float:left;
width:48%;
}
#plugin__manager .pm_info {
float:right;
width:50%;
}
#plugin__manager .common {
}
#plugin__manager .common form {
}
#plugin__manager .common fieldset {
border:medium none;
margin:0;
padding:0 0 1em;
text-align:left;
}
#plugin__manager .common label {
padding:0 0 0.5em;
}
#plugin__manager .common input {
}
#plugin__manager .common input.edit {
margin:0.5em;
width:24em;
}
#plugin__manager .common .button {
}
#plugin__manager form.plugins {
}
#plugin__manager .plugins fieldset {
background:none repeat scroll 0 0 #FFFFFF;
border-left:medium none;
border-right:medium none;
border-top:medium none;
color:#000000;
text-align:right;
}
#plugin__manager .plugins fieldset.protected {
background:none repeat scroll 0 0 #FFDDDD;
color:#000000;
}
#plugin__manager .plugins fieldset.disabled {
background:none repeat scroll 0 0 #E0E0E0;
color:#A8A8A8;
}
#plugin__manager .plugins .legend {
background:inherit;
clear:none;
color:#000000;
display:block;
float:left;
font-size:1em;
font-weight:normal;
line-height:1.4em;
margin:0;
padding:0;
text-align:left;
}
#plugin__manager .plugins .button {
font-size:95%;
}
#plugin__manager .plugins fieldset.buttons {
border:medium none;
}
#plugin__manager .plugins fieldset.buttons .button {
float:left;
}
#plugin__manager .pm_info h3 {
margin-left:0;
}
#plugin__manager .pm_info dl {
margin:1em 0;
padding:0;
}
#plugin__manager .pm_info dt {
clear:left;
float:left;
margin:0;
padding:0;
width:6em;
}
#plugin__manager .pm_info dd {
background:none repeat scroll 0 0 transparent;
margin:0 0 0 7em;
padding:0;
}
#plugin__manager .plugins .enable {
float:left;
margin-right:0.5em;
width:auto;
}
div.dataplugin_entry dl {
border:1px solid #8CACBB;
font-size:90%;
margin:1em;
overflow:auto;
padding:1em;
width:50%;
}
div.dataplugin_entry dl dt {
clear:left;
float:left;
font-weight:bold;
text-align:right;
width:10em;
}
div.dataplugin_entry dl dd {
float:left;
margin-left:0.5em;
}
div.dataplugin_entry.hidden {
display:none;
}
ul.dataplugin_cloud {
overflow:auto;
}
ul.dataplugin_cloud li {
float:left;
list-style-image:none;
list-style-type:none;
margin:0 1em 0 0;
padding:0;
}
ul.dataplugin_cloud li.cl0 {
font-size:70%;
}
ul.dataplugin_cloud li.cl1 {
font-size:90%;
}
ul.dataplugin_cloud li.cl2 {
font-size:110%;
}
ul.dataplugin_cloud li.cl3 {
font-size:130%;
}
ul.dataplugin_cloud li.cl4 {
font-size:150%;
}
dl.datarelated {
margin-left:1em;
}
dl.datarelated dd {
margin-left:1em;
}
dl.datarelated dt {
font-weight:bold;
}
a.xref_plugin {
background:url("/lib/plugins/xref/xref.png") no-repeat scroll left top transparent;
padding-left:18px;
}
a.xref_plugin_err {
border-bottom:1px dashed #FF3300 !important;
color:#FF3300 !important;
text-decoration:none !important;
}
#pl_si_throbber {
visibility:hidden;
}
.pl_si_out {
margin:1em auto;
text-align:left;
vertical-align:middle;
width:80%;
}
.dokuwiki form.whyspam {
display:block;
margin-bottom:2em;
}
.dokuwiki form.whyspam fieldset {
width:50%;
}
.dokuwiki form.whyspam textarea {
height:25em;
}
#config__manager div.success, #config__manager div.error, #config__manager div.info {
background-position:0.5em 50%;
padding:0.5em;
text-align:center;
}
#config__manager fieldset {
background-color:#DEE7EC;
color:#000000;
margin:1em 1em 2em;
padding:0 1em;
width:auto;
}
#config__manager legend {
font-size:1.25em;
}
#config__manager form {
}
#config__manager table {
margin:1em 0;
width:100%;
}
#config__manager fieldset td {
text-align:left;
}
#config__manager fieldset td.value {
width:31em;
}
#config__manager td.label {
padding:0.8em 0 0.6em 1em;
vertical-align:top;
}
#config__manager td.label label {
clear:left;
display:block;
}
#config__manager td.label img {
float:right;
padding:0 10px;
vertical-align:middle;
}
#config__manager td.label span.outkey {
background-color:#FFFFFF;
color:#666666;
display:block;
float:left;
font-size:70%;
margin-left:-1em;
margin-top:-1.7em;
padding:0 0.1em;
position:relative;
z-index:1;
}
#config__manager td input.edit {
width:30em;
}
#config__manager td .input {
width:30.8em;
}
#config__manager td select.edit {
}
#config__manager td textarea.edit {
height:4em;
width:27.5em;
}
#config__manager tr .input, #config__manager tr input, #config__manager tr textarea, #config__manager tr select {
background-color:#FFFFFF;
color:#000000;
}
#config__manager tr.default .input, #config__manager tr.default input, #config__manager tr.default textarea, #config__manager tr.default select, #config__manager .selectiondefault {
background-color:#CCDDFF;
color:#000000;
}
#config__manager tr.protected .input, #config__manager tr.protected input, #config__manager tr.protected textarea, #config__manager tr.protected select, #config__manager tr.protected .selection {
background-color:#FFCCCC !important;
color:#000000 !important;
}
#config__manager td.error {
background-color:red;
color:#000000;
}
#config__manager .selection {
float:left;
margin:0 0.3em 2px 0;
width:14.8em;
}
#config__manager .selection label {
float:right;
font-size:90%;
width:14em;
}
* html #config__manager .selection label {
padding-top:2px;
}
#config__manager .selection input.checkbox {
padding-left:0.7em;
}
#config__manager .other {
clear:both;
padding-top:0.5em;
}
#config__manager .other label {
font-size:90%;
padding-left:2px;
}
div.dokuwiki div.gallery table td {
padding:1em;
text-align:center;
vertical-align:middle;
}
div.dokuwiki div.gallery table img.tn {
border:1px solid #000000;
padding:0.4em;
}
div.dokuwiki div.gallery {
clear:left;
margin-bottom:1em;
}
div.dokuwiki div.gallery img.tn {
border:1px solid #000000;
margin:9px;
padding:0.4em;
vertical-align:middle;
}
div.dokuwiki div.gallery_left {
float:left;
}
div.dokuwiki div.gallery div {
float:left;
}
div.dokuwiki div.gallery_right {
float:right;
}
div.dokuwiki div.gallery_center {
margin-left:auto;
margin-right:auto;
}
div.dokuwiki div.gallery_center {
text-align:center;
width:80%;
}
div.dokuwiki div.gallery div.gallery_pages {
float:none;
text-align:left;
}
#gallery__lightbox {
background-color:#EEEEEE;
border-bottom:1px solid #666666;
border-right:1px solid #666666;
padding:10px;
}
#gallery__overlay {
background-image:url("/lib/plugins/gallery/images/overlay.png");
}
#gallery__lightboxCaption {
background-color:#EEEEEE;
border-bottom:1px solid #666666;
border-right:1px solid #666666;
color:#333333;
font-size:10px;
line-height:10px;
text-align:center;
}
* html #gallery__overlay {
background-image:url("/lib/plugins/gallery/images/overlayie.png");
}
div#pluginrepo__plugin {
background-color:#FFFFFF;
border:1px solid #8CACBB;
font-size:90%;
padding:0.7em 1em 0.2em;
width:500px;
}
div#pluginrepo__plugin div {
background:url("/lib/plugins/pluginrepo/dwplugin.png") no-repeat scroll 5px 5px #FFFFFF;
font-size:105%;
height:auto !important;
margin-bottom:1em;
min-height:80px;
padding-left:80px;
}
div#pluginrepo__plugin p.security {
background-color:#FFCCCC;
border:1px solid #FFAAAA;
color:#000000;
padding:0.3em;
}
div#pluginrepo__repo table {
margin-top:2em;
width:100%;
}
div#pluginrepo__repo table th a:link, div#pluginrepo__repo table th a:active, div#pluginrepo__repo table th a:hover, div#pluginrepo__repo table th a:visited {
color:#000000;
}
div#pluginrepo__repo div.prog-border {
background:none repeat scroll 0 50% #FFFFFF;
border:1px solid silver;
height:5px;
margin:0;
padding:1px;
width:65px;
}
div#pluginrepo__repo .prog-bar {
background:none repeat scroll 0 50% #8CACBB;
height:100%;
margin:0;
padding:0;
}
div#pluginrepo__repo div.repo_info {
float:left;
width:20%;
}
div#pluginrepo__repo div.repo_cloud {
float:right;
height:inherit;
margin:0 auto;
overflow:auto;
padding-right:0.5em;
width:75%;
}
div#pluginrepo__repo div.repo_cloud a.cl0 {
font-size:0.7em;
}
div#pluginrepo__repo div.repo_cloud a.cl1 {
font-size:0.9em;
}
div#pluginrepo__repo div.repo_cloud a.cl2 {
font-size:1em;
}
div#pluginrepo__repo div.repo_cloud a.cl3 {
font-size:1.3em;
}
div#pluginrepo__repo div.repo_cloud a.cl4 {
font-size:1.6em;
}
div#pluginrepo__repo div.repo_cloud a.cl5 {
font-size:1.9em;
}
ul#pluginrepo__foldout {
list-style-type:none;
margin:0 0 4em;
}
ul#pluginrepo__foldout li {
float:left;
}
ul#pluginrepo__foldout a.bugs {
background:url("/lib/plugins/pluginrepo/bugs.png") no-repeat scroll left top transparent;
}
ul#pluginrepo__foldout a.repo {
background:url("/lib/plugins/pluginrepo/repo.png") no-repeat scroll left top transparent;
}
ul#pluginrepo__foldout a.donate {
background:url("/lib/plugins/pluginrepo/donate.png") no-repeat scroll left top transparent;
}
ul#pluginrepo__foldout a.download {
background:url("/lib/plugins/pluginrepo/download.png") no-repeat scroll left top transparent;
}
ul#pluginrepo__foldout a {
-moz-border-radius-bottomleft:3px;
-moz-border-radius-bottomright:3px;
border-bottom:1px solid #8CACBB;
border-left:1px solid #8CACBB;
border-right:1px solid #8CACBB;
display:block;
font-size:17px;
height:30px;
line-height:32px;
margin:0 3px 0;
overflow:hidden;
padding-left:30px;
text-decoration:none;
text-indent:-9000px;
white-space:nowrap;
width:0;
}
ul#pluginrepo__foldout a:hover, ul#pluginrepo__foldout a:active {
text-indent:0;
width:200px;
}
.dokuwiki #plugin__captcha_wrapper img {
border:1px solid #8CACBB;
margin:1px;
vertical-align:bottom;
}
#user__manager tr.disabled {
background:none repeat scroll 0 0 #E4E4E4;
color:#6F6F6F;
}
#user__manager tr.user_info {
vertical-align:top;
}
#user__manager div.edit_user {
float:left;
width:46%;
}
#user__manager table {
margin-bottom:1em;
}
#user__manager input.button[disabled] {
border-color:#CCCCCC !important;
color:#CCCCCC !important;
}
.dokuwiki div.plugin_translation {
float:right;
font-size:95%;
padding-right:2em;
}
.dokuwiki div.plugin_translation ul {
margin:0;
padding:0;
}
.dokuwiki div.plugin_translation ul li {
float:left;
list-style-type:none;
margin:0;
padding:0;
}
.dokuwiki div.plugin_translation ul li a.wikilink1:link, .dokuwiki div.plugin_translation ul li a.wikilink1:hover, .dokuwiki div.plugin_translation ul li a.wikilink1:active, .dokuwiki div.plugin_translation ul li a.wikilink1:visited {
background-color:#000080;
border:medium none !important;
color:#FFFFFF !important;
margin:0.1em 0.2em;
padding:0 0.2em;
text-decoration:none;
}
.dokuwiki div.plugin_translation ul li a.wikilink2:link, .dokuwiki div.plugin_translation ul li a.wikilink2:hover, .dokuwiki div.plugin_translation ul li a.wikilink2:active, .dokuwiki div.plugin_translation ul li a.wikilink2:visited {
background-color:#808080;
border:medium none !important;
color:#FFFFFF !important;
margin:0.1em 0.2em;
padding:0 0.2em;
text-decoration:none;
}
.dokuwiki div.plugin_translation select, .dokuwiki div.plugin_translation input {
background-color:#CCCCCC;
border:medium none;
}
.dokuwiki div.plugin_translation select.wikilink1, .dokuwiki div.plugin_translation option.wikilink1 {
background-color:#000080;
color:#FFFFFF;
text-align:center;
}
.dokuwiki div.plugin_translation select.wikilink2, .dokuwiki div.plugin_translation option.wikilink2 {
background-color:#CCCCCC;
color:#333333;
text-align:center;
}
div.dokuwiki .header {
padding:3px 0 0 2px;
}
div.dokuwiki .pagename {
color:#DEE7EC;
float:left;
font-size:200%;
font-weight:bolder;
text-align:left;
vertical-align:middle;
}
div.dokuwiki .pagename a {
color:#436976 !important;
text-decoration:none !important;
}
div.dokuwiki .logo {
float:right;
font-size:220%;
font-weight:bolder;
text-align:right;
vertical-align:middle;
}
div.dokuwiki .logo a {
color:#DEE7EC !important;
font-variant:small-caps;
letter-spacing:2pt;
text-decoration:none !important;
}
div.dokuwiki .bar {
background:none repeat scroll 0 0 #DEE7EC;
border-bottom:1px solid #8CACBB;
border-top:1px solid #8CACBB;
clear:both;
padding:0.1em 0.15em;
}
div.dokuwiki .bar-left {
float:left;
}
div.dokuwiki .bar-right {
float:right;
text-align:right;
}
div.dokuwiki #bar__bottom {
margin-bottom:3px;
}
div.dokuwiki div.meta {
clear:both;
color:#638C9C;
font-size:70%;
margin-top:1em;
}
div.dokuwiki div.meta div.user {
float:left;
}
div.dokuwiki div.meta div.doc {
text-align:right;
}
* {
margin:0;
padding:0;
}

div.dokuwiki div.page {
margin:4px 2em 0 1em;
text-align:justify;
}
div.dokuwiki table {
font-size:100%;
background-color:#FFFFFF;
border-collapse:collapse;
border-spacing:0;
}
div.dokuwiki tr, div.dokuwiki td, div.dokuwiki th {
border:1px solid #8CACBB;
padding:3px;
}
div.dokuwiki img {
border:0 none;
}
div.dokuwiki p, div.dokuwiki blockquote, div.dokuwiki table, div.dokuwiki pre {
margin:0 0 1em;
}
div.dokuwiki hr {
border-color:#8CACBB -moz-use-text-color -moz-use-text-color;
border-right:0 none;
border-style:solid none none;
border-width:1px 0 0;
height:0;
text-align:center;
}
div.dokuwiki div.nothing {
margin:2em;
text-align:center;
}
div.dokuwiki form {
border:medium none;
display:inline;
}
div.dokuwiki label.block {
display:block;
font-weight:bold;
text-align:right;
}
div.dokuwiki label.simple {
display:block;
font-weight:normal;
text-align:left;
}
div.dokuwiki label.block input.edit {
width:50%;
}
div.dokuwiki fieldset {
border:1px solid #8CACBB;
margin:auto;
padding:0.5em;
text-align:center;
width:300px;
}
div.dokuwiki textarea.edit {
background-color:#FFFFFF;
border:1px solid #8CACBB;
color:#000000;
font-family:monospace;
font-size:14px;
padding:0.3em 0 0 0.3em;
width:100%;
}
html > body div.dokuwiki textarea.edit {
background:url("/lib/tpl/default/images/inputshadow.png") repeat-x scroll center top #FFFFFF;
}
div.dokuwiki input.edit, div.dokuwiki select.edit {
background-color:#FFFFFF;
border:1px solid #8CACBB;
color:#000000;
display:inline;
font-size:100%;
margin:1px;
padding:0.2em 0.3em;
vertical-align:middle;
}
html > body div.dokuwiki input.edit, html > body div.dokuwiki select.edit {
background:url("/lib/tpl/default/images/inputshadow.png") repeat-x scroll center top #FFFFFF;
}
div.dokuwiki select.edit {
padding:0.1em 0;
}
div.dokuwiki input.missing {
background-color:#FFCCCC;
border:1px solid #8CACBB;
color:#000000;
display:inline;
font-size:100%;
margin:1px;
padding:0.2em 0.3em;
vertical-align:middle;
}
div.dokuwiki textarea.edit[disabled], div.dokuwiki textarea.edit[readonly], div.dokuwiki input.edit[disabled], div.dokuwiki input.edit[readonly], div.dokuwiki input.button[disabled], div.dokuwiki select.edit[disabled] {
background-color:#F5F5F5 !important;
color:#666666 !important;
}
div.dokuwiki div.toolbar, div.dokuwiki div#wiki__editbar {
margin:2px 0;
text-align:left;
}
div.dokuwiki div#size__ctl {
float:right;
height:2.7em;
width:60px;
}
div.dokuwiki #size__ctl img {
cursor:pointer;
}
div.dokuwiki div#wiki__editbar div.editButtons {
float:left;
padding:0 1em 0.7em 0;
}
div.dokuwiki div#wiki__editbar div.summary {
float:left;
}
div.dokuwiki .nowrap {
white-space:nowrap;
}
div.dokuwiki div#draft__status {
color:#638C9C;
float:right;
}
div.dokuwiki div.license {
font-size:90%;
padding:0.5em;
text-align:center;
}
div.dokuwiki form#dw__editform div.license {
clear:left;
font-size:90%;
}
div.dokuwiki input.button, div.dokuwiki button.button {
background-color:#FFFFFF;
border:1px solid #8CACBB;
color:#000000;
cursor:pointer;
font-size:100%;
margin:1px;
padding:0.125em 0.4em;
text-decoration:none;
vertical-align:middle;
}
html > body div.dokuwiki input.button, html > body div.dokuwiki button.button {
background:url("/lib/tpl/default/images/buttonshadow.png") repeat-x scroll center bottom #FFFFFF;
}
* html div.dokuwiki input.button, * html div.dokuwiki button.button {
height:1.8em;
}
div.dokuwiki div.secedit input.button {
background-color:#FFFFFF;
border:1px solid #8CACBB;
color:#000000;
cursor:pointer;
display:inline;
float:right;
font-size:10px;
margin:0;
padding:0;
text-decoration:none;
vertical-align:middle;
}
div.dokuwiki div.pagenav {
margin:1em 0 0;
}
div.dokuwiki div.pagenav-prev {
float:left;
text-align:right;
width:49%;
}
div.dokuwiki div.pagenav-next {
float:right;
text-align:left;
width:49%;
}
div.dokuwiki a:link, div.dokuwiki a:visited {
color:#436976;
text-decoration:none;
}
div.dokuwiki a:hover, div.dokuwiki a:active {
color:#000000;
text-decoration:underline;
}
div.dokuwiki h1 a, div.dokuwiki h2 a, div.dokuwiki h3 a, div.dokuwiki h4 a, div.dokuwiki h5 a, div.dokuwiki a.nolink {
color:#000000 !important;
text-decoration:none !important;
padding-bottom: 10px;
}
div.dokuwiki a.urlextern {
background:url("/lib/tpl/default/images/link_icon.gif") no-repeat scroll 0 1px transparent;
padding:1px 0 1px 16px;
}
div.dokuwiki a.windows {
background:url("/lib/tpl/default/images/windows.gif") no-repeat scroll 0 1px transparent;
padding:1px 0 1px 16px;
}
div.dokuwiki a.interwiki {
}
div.dokuwiki a.media {
}
div.dokuwiki a.urlextern:link, div.dokuwiki a.windows:link, div.dokuwiki a.interwiki:link {
color:#436976;
}
div.dokuwiki a.urlextern:visited, div.dokuwiki a.windows:visited, div.dokuwiki a.interwiki:visited {
color:purple;
}
div.dokuwiki a.urlextern:hover, div.dokuwiki a.urlextern:active, div.dokuwiki a.windows:hover, div.dokuwiki a.windows:active, div.dokuwiki a.interwiki:hover, div.dokuwiki a.interwiki:active {
color:#000000;
}
div.dokuwiki a.mail {
background:url("/lib/tpl/default/images/mail_icon.gif") no-repeat scroll 0 1px transparent;
padding:1px 0 1px 16px;
}
div.dokuwiki a.wikilink1 {
color:#009900 !important;
}
div.dokuwiki a.wikilink2 {
border-bottom:1px dashed #FF3300 !important;
color:#FF3300 !important;
text-decoration:none !important;
}
div.dokuwiki div.preview {
background-color:#F5F5F5;
border:1px dashed #000000;
margin:0 0 0 2em;
padding:4px;
}
div.dokuwiki div.breadcrumbs {
background-color:#F5F5F5;
color:#666666;
font-size:80%;
padding:0 0 0 4px;
}
div.dokuwiki span.user {
color:#CCCCCC;
font-size:90%;
}
div.dokuwiki li.minor {
color:#666666;
font-style:italic;
}
div.dokuwiki img.media {
margin:3px;
}
div.dokuwiki img.medialeft {
border:0 none;
float:left;
margin:0 1.5em 0 0;
}
div.dokuwiki img.mediaright {
border:0 none;
float:right;
margin:0 0 0 1.5em;
}
div.dokuwiki img.mediacenter {
border:0 none;
display:block;
margin:0 auto;
}
div.dokuwiki img.middle {
vertical-align:middle;
}
div.dokuwiki acronym {
border-bottom:1px dotted #000000;
cursor:help;
}
div.dokuwiki h1, div.dokuwiki h2, div.dokuwiki h3, div.dokuwiki h4, div.dokuwiki h5 {
background-color:inherit;
border-bottom:1px solid #8CACBB;
clear:left;
color:#000000;
font-size:100%;
font-weight:normal;
margin:0 0 1em;
padding:0.5em 0 0;
padding-bottom:10px;
}
div.dokuwiki h1 {
font-size:160%;
font-weight:bold;
margin-left:0;
}
div.dokuwiki h2 {
font-size:150%;
margin-left:20px;
}
div.dokuwiki h3 {
border-bottom:medium none;
font-size:140%;
font-weight:bold;
margin-left:40px;
}
div.dokuwiki h4 {
border-bottom:medium none;
font-size:120%;
font-weight:bold;
margin-left:60px;
}
div.dokuwiki h5 {
border-bottom:medium none;
font-size:100%;
font-weight:bold;
margin-left:80px;
}
div.dokuwiki div.level1 {
margin-left:3px;
}
div.dokuwiki div.level2 {
margin-left:23px;
}
div.dokuwiki div.level3 {
margin-left:43px;
}
div.dokuwiki div.level4 {
margin-left:63px;
}
div.dokuwiki div.level5 {
margin-left:83px;
}
div.dokuwiki ul {
color:#638C9C;
line-height:1.5em;
list-style-image:none;
list-style-type:square;
margin:0 0 1em 3.5em;
}
div.dokuwiki ol {
color:#638C9C;
font-weight:bold;
line-height:1.5em;
list-style-image:none;
margin:0 0 1em 3.5em;
}
div.dokuwiki li ul, div.dokuwiki li ol {
margin:0 0 0 1.5em;
}
div.dokuwiki .li {
color:#000000;
font-weight:normal;
}
div.dokuwiki ol {
list-style-type:decimal;
}
div.dokuwiki ol ol {
list-style-type:upper-roman;
}
div.dokuwiki ol ol ol {
list-style-type:lower-alpha;
}
div.dokuwiki ol ol ol ol {
list-style-type:lower-greek;
}
div.dokuwiki li.open {
list-style-image:url("/lib/tpl/default/images/open.gif");
}
div.dokuwiki li.closed {
list-style-image:url("/lib/tpl/default/images/closed.gif");
}
div.dokuwiki blockquote {
border-left:2px solid #8CACBB;
padding-left:3px;
}
div.dokuwiki pre {
border:1px dashed #8CACBB;
color:#000000;
font-size:120%;
overflow:auto;
padding:0.5em;
}
div.dokuwiki pre.pre {
background-color:#F7F9FA;
}
div.dokuwiki pre.code {
background-color:#F7F9FA;
}
div.dokuwiki pre.file {
background-color:#DEE7EC;
}
div.dokuwiki dl.file, div.dokuwiki dl.code {
margin-bottom:2.5em;
margin-top:2em;
}
div.dokuwiki dl.file dt, div.dokuwiki dl.code dt {
border:1px dashed #8CACBB;
display:inline;
margin-left:2em;
padding:0.1em 1em;
}
div.dokuwiki dl.code dt a, div.dokuwiki dl.file dt a {
color:#000000;
}
div.dokuwiki dl.code dt {
background-color:#F7F9FA;
border-bottom:1px solid #F7F9FA;
}
div.dokuwiki dl.file dt {
background-color:#DEE7EC;
border-bottom:1px solid #DEE7EC;
}
div.dokuwiki code {
font-size:120%;
}
div.dokuwiki table.inline {
background-color:#FFFFFF;
border-collapse:collapse;
border-spacing:0;
}
div.dokuwiki table.inline th {
background-color:#DEE7EC;
border:1px solid #8CACBB;
padding:3px;
}
div.dokuwiki table.inline td {
border:1px solid #8CACBB;
padding:3px;
}
div.dokuwiki div.toc {
clear:both;
float:right;
font-size:80%;
margin:1.2em 0 0 2em;
width:200px;
}
div.dokuwiki div.tocheader {
background-color:#DEE7EC;
border:1px solid #8CACBB;
font-weight:bold;
margin-bottom:2px;
padding:3px;
text-align:left;
}
div.dokuwiki span.toc_open, div.dokuwiki span.toc_close {
border:0.4em solid #DEE7EC;
display:block;
float:right;
margin:0.4em 3px 0 0;
}
div.dokuwiki span.toc_open span, div.dokuwiki span.toc_close span {
display:none;
}
div.dokuwiki span.toc_open {
border-top:0.4em solid #000000;
margin-top:0.4em;
}
div.dokuwiki span.toc_close {
border-bottom:0.4em solid #000000;
margin-top:0;
}
div.dokuwiki #toc__inside {
background-color:#FFFFFF;
border:1px solid #8CACBB;
padding:0.5em 0 0.7em;
text-align:left;
}
div.dokuwiki ul.toc {
line-height:1.2em;
list-style-image:none;
list-style-type:none;
margin:0;
padding-left:1em;
}
div.dokuwiki ul.toc li {
background:url("/lib/tpl/default/images/tocdot2.gif") no-repeat scroll 0 0.6em transparent;
padding-left:0.4em;
}
div.dokuwiki ul.toc li.clear {
background-image:none;
padding-left:0.4em;
}
div.dokuwiki a.toc:link, div.dokuwiki a.toc:visited {
color:#436976;
}
div.dokuwiki a.toc:hover, div.dokuwiki a.toc:active {
color:#000000;
}
div.dokuwiki table.diff {
background-color:#FFFFFF;
width:100%;
}
div.dokuwiki td.diff-blockheader {
font-weight:bold;
}
div.dokuwiki table.diff th {
border-bottom:1px solid #8CACBB;
font-size:110%;
font-weight:normal;
text-align:left;
width:50%;
}
div.dokuwiki table.diff th a {
font-weight:bold;
}
div.dokuwiki table.diff th span.user {
color:#000000;
font-size:80%;
}
div.dokuwiki table.diff th span.sum {
font-size:80%;
font-weight:bold;
}
div.dokuwiki table.diff th.minor {
font-style:italic;
}
div.dokuwiki table.diff td {
font-family:monospace;
font-size:100%;
}
div.dokuwiki td.diff-addedline {
background-color:#DDFFDD;
}
div.dokuwiki td.diff-deletedline {
background-color:#FFFFBB;
}
div.dokuwiki td.diff-context {
background-color:#F5F5F5;
}
div.dokuwiki table.diff td.diff-addedline strong, div.dokuwiki table.diff td.diff-deletedline strong {
color:red;
}
div.dokuwiki div.footnotes {
border-top:1px solid #8CACBB;
clear:both;
margin-top:1em;
padding-left:1em;
}
div.dokuwiki div.fn {
font-size:90%;
}
div.dokuwiki a.fn_bot {
font-weight:bold;
}
div.insitu-footnote {
background-color:#F7F9FA;
border:1px solid #8CACBB;
font-size:80%;
line-height:1.2em;
max-width:40%;
padding:4px;
text-align:left;
}
* html .insitu-footnote pre.code, * html .insitu-footnote pre.file {
padding-bottom:18px;
}
div.dokuwiki .search_result {
margin-bottom:6px;
padding:0 10px 0 30px;
}
div.dokuwiki .search_snippet {
color:#CCCCCC;
font-size:12px;
margin-left:20px;
}
div.dokuwiki .search_sep {
color:#000000;
}
div.dokuwiki .search_hit {
background-color:#FFFF99;
color:#000000;
}
div.dokuwiki strong.search_hit {
font-weight:normal;
}
div.dokuwiki div.search_quickresult {
border-bottom:1px dashed #8CACBB;
margin:0 0 15px 30px;
padding:0 10px 10px 0;
}
div.dokuwiki div.search_quickresult h3 {
font-size:1em;
font-weight:bold;
margin:0 0 1em;
}
div.dokuwiki ul.search_quickhits {
margin:0 0 0.5em 1em;
}
div.dokuwiki ul.search_quickhits li {
float:left;
margin:0 1em;
width:30%;
}
div.dokuwiki .section_highlight {
background-color:#DEE7EC !important;
}
div.footerinc {
text-align:center;
}
.footerinc a img {
border:0 none;
opacity:0.5;
}
.footerinc a:hover img {
opacity:1;
}
div.dokuwiki div.ajax_qsearch {
background-color:#F7F9FA;
border:1px solid #8CACBB;
display:none;
font-size:80%;
line-height:1.2em;
opacity:0.9;
padding:4px;
position:absolute;
right:237px;
text-align:left;
width:200px;
}
button.toolbutton {
background-color:#FFFFFF;
border:1px solid #8CACBB;
cursor:pointer;
margin:0 1px 0 0;
padding:0;
}
html > body button.toolbutton {
background:url("/lib/tpl/default/images/buttonshadow.png") repeat-x scroll center bottom #FFFFFF;
}
div.picker {
background-color:#DEE7EC;
border:1px solid #8CACBB;
width:250px;
}
div.pk_hl {
width:125px;
}
button.pickerbutton {
background-color:transparent;
border:0 none;
cursor:pointer;
font-size:80%;
margin:0 1px 1px 0;
padding:0;
}
div.dokuwiki div.img_big {
float:left;
margin-right:0.5em;
}
div.dokuwiki dl.img_tags dt {
background-color:#DEE7EC;
font-weight:bold;
}
div.dokuwiki dl.img_tags dd {
background-color:#F5F5F5;
}
div.dokuwiki div.imagemeta {
color:#666666;
font-size:70%;
line-height:95%;
}
div.dokuwiki div.imagemeta img.thumb {
float:left;
margin-right:0.1em;
}
#media__manager {
height:100%;
overflow:hidden;
}
#media__left {
border-right:1px solid #8CACBB;
height:100%;
left:0;
overflow:auto;
position:absolute;
width:30%;
}
#media__right {
height:100%;
overflow:auto;
position:absolute;
right:0;
width:69.7%;
}
#media__manager h1 {
margin:0 0 0.5em;
padding:0;
}
#media__tree img {
float:left;
padding:0.5em 0.3em 0 0;
}
#media__tree ul {
list-style-image:none;
list-style-type:none;
margin-left:1.5em;
}
#media__tree li {
clear:left;
list-style-image:none;
list-style-type:none;
}
* + html #media__tree li, * html #media__tree li {
border:1px solid #FFFFFF;
}
#media__opts {
margin-bottom:0.5em;
padding-left:1em;
}
#media__opts input {
display:block;
float:left;
margin-top:4px;
position:absolute;
}
* + html #media__opts input, * html #media__opts input {
position:static;
}
#media__opts label {
display:block;
float:left;
margin-bottom:4px;
margin-left:20px;
}
* + html #media__opts label, * html #media__opts label {
margin-left:10px;
}
#media__opts br {
clear:left;
}
#media__content img.load {
margin:1em auto;
}
#media__content #scroll__here {
border:1px dashed #8CACBB;
}
#media__content .odd {
background-color:#F7F9FA;
padding:0.4em;
}
#media__content .even {
padding:0.4em;
}
#media__content a.mediafile {
font-weight:bold;
margin-right:1.5em;
}
#media__content div.detail {
padding:0.3em 0 0.3em 2em;
}
#media__content div.detail div.thumb {
float:left;
margin-right:0.4em;
text-align:center;
width:130px;
}
#media__content img.btn {
vertical-align:text-bottom;
}
#media__content div.example {
color:#666666;
margin-left:1em;
}
#media__content div.upload {
font-size:90%;
padding:0 0.5em 0.5em;
}
#media__content form#dw__upload, #media__content div#dw__flashupload {
border-bottom:1px solid #8CACBB;
display:block;
padding:0 0.5em 1em;
}
#media__content form#dw__upload fieldset {
border:medium none;
margin:0;
padding:0;
width:auto;
}
#media__content form#dw__upload p {
line-height:1em;
margin:0;
padding:0.25em 0;
text-align:left;
}
#media__content form#dw__upload label.check {
float:none;
margin-left:11.5em;
width:auto;
}
#media__content form.meta {
display:block;
padding:0 0 1em;
}
#media__content form.meta label {
clear:left;
display:block;
float:left;
font-weight:bold;
margin-left:1em;
width:25%;
}
#media__content form.meta .edit {
float:left;
font:100% "Lucida Grande",Verdana,Lucida,Helvetica,Arial,sans-serif;
margin:2px;
padding-left:0.2em;
padding-right:0;
width:70%;
}
#media__content form.meta textarea.edit {
height:8em;
}
#media__content form.meta div.metafield {
clear:left;
}
#media__content form.meta div.buttons {
clear:left;
margin-left:20%;
padding-left:1em;
}
.dokuwiki ul.admin_tasks {
float:left;
font-size:115%;
list-style-type:none;
width:40%;
}
.dokuwiki ul.admin_tasks li {
background:none no-repeat scroll 0 0 transparent;
line-height:22px;
margin:1em 0;
padding-left:35px;
text-align:left;
}
.dokuwiki ul.admin_tasks li div.li {
font-weight:bold;
}
.dokuwiki ul.admin_tasks li.admin_acl {
background-image:url("/lib/tpl/default/../../images/admin/acl.png");
}
.dokuwiki ul.admin_tasks li.admin_usermanager {
background-image:url("/lib/tpl/default/../../images/admin/usermanager.png");
}
.dokuwiki ul.admin_tasks li.admin_plugin {
background-image:url("/lib/tpl/default/../../images/admin/plugin.png");
}
.dokuwiki ul.admin_tasks li.admin_config {
background-image:url("/lib/tpl/default/../../images/admin/config.png");
}
.dokuwiki ul.admin_tasks li.admin_revert {
background-image:url("/lib/tpl/default/../../images/admin/revert.png");
}
.dokuwiki ul.admin_tasks li.admin_popularity {
background-image:url("/lib/tpl/default/../../images/admin/popularity.png");
}
#link__wiz {
background-color:#F5F5F5;
border:1px solid #8CACBB;
display:block;
height:250px;
margin:0;
overflow:hidden;
padding:0;
position:absolute;
text-align:center;
width:300px;
z-index:99;
}
#link__wiz_header {
background-color:#DEE7EC;
height:16px;
margin-bottom:5px;
}
#link__wiz_close {
cursor:pointer;
margin:0;
}
#link__wiz_result {
background-color:#FFFFFF;
border:1px solid #8CACBB;
height:193px;
margin:3px auto;
overflow:auto;
text-align:left;
width:293px;
}
#link__wiz_result div.type_u {
background:url("/lib/tpl/default/../../images/up.png") no-repeat scroll 3px 3px transparent;
padding:3px 3px 3px 22px;
}
#link__wiz_result div.type_f {
background:url("/lib/tpl/default/../../images/page.png") no-repeat scroll 3px 3px transparent;
padding:3px 3px 3px 22px;
}
#link__wiz_result div.type_d {
background:url("/lib/tpl/default/../../images/ns.png") no-repeat scroll 3px 3px transparent;
padding:3px 3px 3px 22px;
}
#link__wiz_result div.even {
background-color:#F5F5F5;
}
#link__wiz_result div.selected {
background-color:#DEE7EC;
}
#link__wiz_result span {
color:#666666;
display:block;
}
.ondrag {
cursor:move;
opacity:0.8;
}
form#subscribe__form {
display:block;
text-align:center;
width:300px;
}
form#subscribe__form fieldset {
margin:0.5em 0;
text-align:left;
}
form#subscribe__form label {
display:block;
margin:0 0.5em 0.5em;
}-->
</style>
<script type="text/javascript">
<!--
function popup(url, width, height) {
	/* open popup window */
	popupwindow = window.open(url, 'popup', 'scrollbars=yes,resizable=yes,height='+height+',width='+width+'');
	/* set focus on it */
	if (window.focus) {popupwindow.focus()}
	return false;
}

function fixedPopup(url, width, height) {
	/* open popup window */
	popupwindow = window.open(url, 'popup', 'toolbar=no,directories=no,status=no,scrollbars=no,menubar=no,height='+height+',width='+width+'');
	/* set focus on it */
	if (window.focus) {popupwindow.focus()}
	return false;
}

function FindObject(n, d)
{ //v4.01
    var p, i, x;
    if (!d) d = document;
    if ((p=n.indexOf("?"))> 0 && parent.frames.length)
    {
        d = parent.frames[n.substring(p+1)].document;
        n = n.substring(0,p);
    }
    if(!(x=d[n])&&d.all) x=d.all[n];
    for (i=0;!x&&i<d.forms.length;i++) x = d.forms[i][n];
    for (i=0;!x&&d.layers&&i<d.layers.length;i++) x = FindObject(n,d.layers[i].document);
    if (!x && d.getElementById) x = d.getElementById(n);
    return x;
}

var btn = {
	    init : function() {
		var ieVer=/*@cc_on function(){ switch(@_jscript_version){ case 1.0:return 3; case 3.0:return 4; case 5.0:return 5; case 5.1:return 5; case 5.5:return 5.5; case 5.6:return 6; case 5.7:return 7; }}()||@*/0;
	        var i;
	        if (!document.getElementById || !document.createElement || !document.appendChild) return false;
	        as = btn.getElementsByClassName('button(.*)');
	        for (i=0; i< as.length; i++) {
	        	//check if node is an input tag
	            if ( as[i].tagName == "INPUT" && ( as[i].type.toLowerCase() == "submit" || as[i].type.toLowerCase() == "button" ) ) {           	        	
	            	//get input type
	            	var type = as[i].type.toLowerCase();
	            	
	            	if(ieVer != 6){	                     		
		                var a1 = document.createElement("a");

		                //set text to link
		                as[i].style.display = "none";
		                a1.appendChild(document.createTextNode(as[i].value));
		                a1.className = as[i].className;          	                
		                a1.id = as[i].id;		             
		                a1.onclick = as[i].onclick;
		                
		                if(type == "submit"){
		                	as[i].parentNode.insertBefore(a1, as[i]);
		                }
		                else{
		                	as[i].parentNode.replaceChild(a1, as[i]);		                	
		                }

		                as[i] = a1;	
               
		                if(type == "submit"){
		                	btn.addEvent(as[i],'click',function() {
		        	        	var form = btn.findForm(this);
		        	    		var submit = btn.findSubmitButton(form);  	    			
		        	    		submit.click();
		        	        });
		                	if(ieVer == 7){
		                		document.onkeypress = function formSubmit() {
		                			// IE7
		                			if(window.event.keyCode == 13){
		                			  var target = window.event.srcElement;
		                			  var form = btn.findForm(target);
		                			  var submit = btn.findSubmitButton(form);  	    			
		                			  submit.click();
		                			}
		                			return true;
		                		 }
		                	}
		                }	                
		                else if(type == "reset"){
			            		btn.addEvent(document.getElementById('reset_btn'),'click',function() {
			            		var form = btn.findForm(this);
			            		form.reset();
		            			});
		                }
	            	}
		            else{	
		            	var s1 = document.createElement('span');
		                var a1 =  as[i].cloneNode(false);		               
		                //set text to link
		            	s1.appendChild(a1)
		                s1.className = as[i].className;          	
		                as[i].parentNode.replaceChild(s1, as[i]);
		                as[i] = a1;   
		             }           	
	                
	            }//if is not an input tag ask for a link
	            else if (as[i].tagName == "A") {
	            	var tt = as[i].childNodes;
	            }
	            
	            if (as[i].tagName != "DEL" && ieVer != 6) {
		            var s1 = document.createElement('span');
		            while (as[i].firstChild) {
		              s1.appendChild(as[i].firstChild);
		            }
		            as[i].appendChild(s1);
	          	}

	        }

	       
	        as = btn.getElementsByClassName('disabled_button(.*)');
	        
	        for (i=0; i<as.length; i++) {
	        	
	            if ( as[i].tagName == "INPUT" && ( as[i].type.toLowerCase() == "submit" || as[i].type.toLowerCase() == "button" ) ) {	            	
	            		var type = as[i].type.toLowerCase();
	                var a1 = document.createElement("a");
	                a1.appendChild(document.createTextNode(as[i].value));
	                a1.className = as[i].className;
	                as[i].className = "";
	                //a1.id = as[i].id;
	                //a1.onclick = as[i].onclick;
	                as[i] = as[i].parentNode.replaceChild(a1, as[i]);
	                as[i] = a1;
	                               	                
	            }
	            else if (as[i].tagName == "A") {
	            	var tt = as[i].childNodes;
	            }
	       		else if (as[i].tagName == "SPAN") {
	       	
	                var del1 = document.createElement("del");
	               	var span1 = document.createElement("span");
									span1.appendChild(document.createTextNode(as[i].firstChild.data));
									del1.className = 'button';
	                del1.appendChild(span1);
	                //a1.id = as[i].id;
	                //a1.onclick = as[i].onclick;
	                as[i] = as[i].parentNode.replaceChild(del1, as[i]);
	                as[i] = del1;
	       		}	       
	        }
	        
	        if (document.getElementById('reset_btn')) {
        		btn.addEvent(document.getElementById('reset_btn'),'click',function() {
        		var form = btn.findForm(this);
        		form.reset();
        		});
        		}
	    },
	    findForm : function(f) {
	        while(f.tagName != "FORM") {
	            f = f.parentNode;
	        }
	        return f;
	    },
	    findSubmitButton: function(f) {
	        var kids = f.childNodes;
	        var button = null;
	        
	        for(var i = 0; i < kids.length; i++){
	        	button = btn.findSubmitButton(kids[i]);
	        	if(kids[i].type == "submit")
	        		button = kids[i];
	        	if(button != null){
	        		break;
	        	}
	        }
	        
	        return button;
	    }
	    ,
	    addEvent : function(obj, type, fn) {
	        if (obj.addEventListener) {
	            obj.addEventListener(type, fn, false);
	        }
	        else if (obj.attachEvent) {
	            obj["e"+type+fn] = fn;
	            obj[type+fn] = function() { obj["e"+type+fn]( window.event ); }
	            obj.attachEvent("on"+type, obj[type+fn]);
	        }
	    },
	    getElementsByClassName : function(className, tag, elm) {
	        var testClass = new RegExp("(^|\s)" + className + "(\s|$)");
	        var tag = tag || "*";
	        var elm = elm || document;
	        var elements = (tag == "*" && elm.all)? elm.all : elm.getElementsByTagName(tag);
	        var returnElements = [];
	        var current;
	        var length = elements.length;
	        for(var i=0; i<length; i++){
	            current = elements[i];
	            if(testClass.test(current.className)){
	                returnElements.push(current);
	            }
	        }
	        return returnElements;
	    }
	}

//	btn.addEvent(window,'load', function() { btn.init();} );/** Script downloaded from http://lixlpixel.org/javascript-tooltips/, customised for GForge */

// position of the tooltip relative to the mouse in pixel //
var offsetx = 12;
var offsety =  8;
var tttimeout;

function newelement(newid)
{ 
    if(document.createElement)
    { 
        var el = document.createElement('div'); 
        el.id = newid;     
        with(el.style)
        { 
            display = 'none';
            position = 'absolute';
        } 
        el.innerHTML = '&nbsp;'; 
        document.body.appendChild(el); 
    } 
} 

var ie5 = (document.getElementById && document.all); 
var ns6 = (document.getElementById && !document.all); 
var ua = navigator.userAgent.toLowerCase();
var isapple = (ua.indexOf('applewebkit') != -1 ? 1 : 0);

function getmouseposition(e)
{
    if(document.getElementById)
    {
        var iebody=(document.compatMode && 
        	document.compatMode != 'BackCompat') ? 
        		document.documentElement : document.body;
        pagex = (isapple == 1 ? 0:(ie5)?iebody.scrollLeft:window.pageXOffset);
        pagey = (isapple == 1 ? 0:(ie5)?iebody.scrollTop:window.pageYOffset);
        mousex = (ie5)?event.x:(ns6)?clientX = e.clientX:false;
        mousey = (ie5)?event.y:(ns6)?clientY = e.clientY:false;

        var lixlpixel_tooltip = document.getElementById('tooltip');
        lixlpixel_tooltip.style.left = (mousex+pagex+offsetx) + 'px';
        lixlpixel_tooltip.style.top = (mousey+pagey+offsety) + 'px';
    }
}

function tooltip(tip)
{
    if(!document.getElementById('tooltip')) newelement('tooltip');
    var lixlpixel_tooltip = document.getElementById('tooltip');
    lixlpixel_tooltip.innerHTML = tip;
    document.onmousemove = getmouseposition;
    // Small delay before showing the tooltip
    tttimeout = setTimeout("document.getElementById('tooltip').style.display = 'block';", 500);
}

function tooltipexit()
{
    document.getElementById('tooltip').style.display = 'none';
    clearTimeout(tttimeout);
}/*==================================================
  $Id: tabber.js,v 1.9 2006/04/27 20:51:51 pat Exp $
  tabber.js by Patrick Fitzgerald pat@barelyfitz.com

  Documentation can be found at the following URL:
  http://www.barelyfitz.com/projects/tabber/

  License (http://www.opensource.org/licenses/mit-license.php)

  Copyright (c) 2006 Patrick Fitzgerald

  Permission is hereby granted, free of charge, to any person
  obtaining a copy of this software and associated documentation files
  (the "Software"), to deal in the Software without restriction,
  including without limitation the rights to use, copy, modify, merge,
  publish, distribute, sublicense, and/or sell copies of the Software,
  and to permit persons to whom the Software is furnished to do so,
  subject to the following conditions:

  The above copyright notice and this permission notice shall be
  included in all copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
  BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
  ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
  ==================================================*/

function tabberObj(argsObj)
{
  var arg; /* name of an argument to override */

  /* Element for the main tabber div. If you supply this in argsObj,
     then the init() method will be called.
  */
  this.div = null;

  /* Class of the main tabber div */
  this.classMain = "tabber";

  /* Rename classMain to classMainLive after tabifying
     (so a different style can be applied)
  */
  this.classMainLive = "tabberlive";

  /* Class of each DIV that contains a tab */
  this.classTab = "tabbertab";

  /* Class to indicate which tab should be active on startup */
  this.classTabDefault = "tabbertabdefault";

  /* Class for the navigation UL */
  this.classNav = "tabbernav";

  /* When a tab is to be hidden, instead of setting display='none', we
     set the class of the div to classTabHide. In your screen
     stylesheet you should set classTabHide to display:none.  In your
     print stylesheet you should set display:block to ensure that all
     the information is printed.
  */
  this.classTabHide = "tabbertabhide";

  /* Class to set the navigation LI when the tab is active, so you can
     use a different style on the active tab.
  */
  this.classNavActive = "tabberactive";

  /* Elements that might contain the title for the tab, only used if a
     title is not specified in the TITLE attribute of DIV classTab.
  */
  this.titleElements = ['h2','h3','h4','h5','h6'];

  /* Should we strip out the HTML from the innerHTML of the title elements?
     This should usually be true.
  */
  this.titleElementsStripHTML = true;

  /* If the user specified the tab names using a TITLE attribute on
     the DIV, then the browser will display a tooltip whenever the
     mouse is over the DIV. To prevent this tooltip, we can remove the
     TITLE attribute after getting the tab name.
  */
  this.removeTitle = true;

  /* If you want to add an id to each link set this to true */
  this.addLinkId = false;

  /* If addIds==true, then you can set a format for the ids.
     <tabberid> will be replaced with the id of the main tabber div.
     <tabnumberzero> will be replaced with the tab number
       (tab numbers starting at zero)
     <tabnumberone> will be replaced with the tab number
       (tab numbers starting at one)
     <tabtitle> will be replaced by the tab title
       (with all non-alphanumeric characters removed)
   */
  this.linkIdFormat = '<tabberid>nav<tabnumberone>';

  /* You can override the defaults listed above by passing in an object:
     var mytab = new tabber({property:value,property:value});
  */
  for (arg in argsObj) { this[arg] = argsObj[arg]; }

  /* Create regular expressions for the class names; Note: if you
     change the class names after a new object is created you must
     also change these regular expressions.
  */
  this.REclassMain = new RegExp('\\b' + this.classMain + '\\b', 'gi');
  this.REclassMainLive = new RegExp('\\b' + this.classMainLive + '\\b', 'gi');
  this.REclassTab = new RegExp('\\b' + this.classTab + '\\b', 'gi');
  this.REclassTabDefault = new RegExp('\\b' + this.classTabDefault + '\\b', 'gi');
  this.REclassTabHide = new RegExp('\\b' + this.classTabHide + '\\b', 'gi');

  /* Array of objects holding info about each tab */
  this.tabs = new Array();

  /* If the main tabber div was specified, call init() now */
  if (this.div) {

    this.init(this.div);

    /* We don't need the main div anymore, and to prevent a memory leak
       in IE, we must remove the circular reference between the div
       and the tabber object. */
    this.div = null;
  }
}


/*--------------------------------------------------
  Methods for tabberObj
  --------------------------------------------------*/


tabberObj.prototype.init = function(e)
{
  /* Set up the tabber interface.

     e = element (the main containing div)

     Example:
     init(document.getElementById('mytabberdiv'))
   */

  var
  childNodes, /* child nodes of the tabber div */
  i, i2, /* loop indices */
  t, /* object to store info about a single tab */
  defaultTab=0, /* which tab to select by default */
  DOM_ul, /* tabbernav list */
  DOM_li, /* tabbernav list item */
  DOM_a, /* tabbernav link */
  aId, /* A unique id for DOM_a */
  headingElement; /* searching for text to use in the tab */

  /* Verify that the browser supports DOM scripting */
  if (!document.getElementsByTagName) { return false; }

  /* If the main DIV has an ID then save it. */
  if (e.id) {
    this.id = e.id;
  }

  /* Clear the tabs array (but it should normally be empty) */
  this.tabs.length = 0;

  /* Loop through an array of all the child nodes within our tabber element. */
  childNodes = e.childNodes;
  for(i=0; i < childNodes.length; i++) {

    /* Find the nodes where class="tabbertab" */
    if(childNodes[i].className &&
       childNodes[i].className.match(this.REclassTab)) {
      
      /* Create a new object to save info about this tab */
      t = new Object();
      
      /* Save a pointer to the div for this tab */
      t.div = childNodes[i];
      
      /* Add the new object to the array of tabs */
      this.tabs[this.tabs.length] = t;

      /* If the class name contains classTabDefault,
	 then select this tab by default.
      */
      if (childNodes[i].className.match(this.REclassTabDefault)) {
	defaultTab = this.tabs.length-1;
      }
    }
  }

  /* Create a new UL list to hold the tab headings */
  DOM_ul = document.createElement("ul");
  DOM_ul.className = this.classNav;
  
  /* Loop through each tab we found */
  for (i=0; i < this.tabs.length; i++) {

    t = this.tabs[i];

    /* Get the label to use for this tab:
       From the title attribute on the DIV,
       Or from one of the this.titleElements[] elements,
       Or use an automatically generated number.
     */
    t.headingText = t.div.title;

    /* Remove the title attribute to prevent a tooltip from appearing */
    if (this.removeTitle) { t.div.title = ''; }

    if (!t.headingText) {

      /* Title was not defined in the title of the DIV,
	 So try to get the title from an element within the DIV.
	 Go through the list of elements in this.titleElements
	 (typically heading elements ['h2','h3','h4'])
      */
      for (i2=0; i2<this.titleElements.length; i2++) {
	headingElement = t.div.getElementsByTagName(this.titleElements[i2])[0];
	if (headingElement) {
	  t.headingText = headingElement.innerHTML;
	  if (this.titleElementsStripHTML) {
	    t.headingText.replace(/<br>/gi," ");
	    t.headingText = t.headingText.replace(/<[^>]+>/g,"");
	  }
	  break;
	}
      }
    }

    if (!t.headingText) {
      /* Title was not found (or is blank) so automatically generate a
         number for the tab.
      */
      t.headingText = i + 1;
    }

    /* Create a list element for the tab */
    DOM_li = document.createElement("li");

    /* Save a reference to this list item so we can later change it to
       the "active" class */
    t.li = DOM_li;

    /* Create a link to activate the tab */
    DOM_a = document.createElement("a");
    DOM_a.appendChild(document.createTextNode(t.headingText));
    DOM_a.href = "javascript:void(null);";
    DOM_a.title = t.headingText;
    DOM_a.onclick = this.navClick;

    /* Add some properties to the link so we can identify which tab
       was clicked. Later the navClick method will need this.
    */
    DOM_a.tabber = this;
    DOM_a.tabberIndex = i;

    /* Do we need to add an id to DOM_a? */
    if (this.addLinkId && this.linkIdFormat) {

      /* Determine the id name */
      aId = this.linkIdFormat;
      aId = aId.replace(/<tabberid>/gi, this.id);
      aId = aId.replace(/<tabnumberzero>/gi, i);
      aId = aId.replace(/<tabnumberone>/gi, i+1);
      aId = aId.replace(/<tabtitle>/gi, t.headingText.replace(/[^a-zA-Z0-9\-]/gi, ''));

      DOM_a.id = aId;
    }

    /* Add the link to the list element */
    DOM_li.appendChild(DOM_a);

    /* Add the list element to the list */
    DOM_ul.appendChild(DOM_li);
  }

  /* Add the UL list to the beginning of the tabber div */
  e.insertBefore(DOM_ul, e.firstChild);

  /* Make the tabber div "live" so different CSS can be applied */
  e.className = e.className.replace(this.REclassMain, this.classMainLive);

  /* Activate the default tab, and do not call the onclick handler */
  this.tabShow(defaultTab);

  /* If the user specified an onLoad function, call it now. */
  if (typeof this.onLoad == 'function') {
    this.onLoad({tabber:this});
  }

  return this;
};


tabberObj.prototype.navClick = function(event)
{
  /* This method should only be called by the onClick event of an <A>
     element, in which case we will determine which tab was clicked by
     examining a property that we previously attached to the <A>
     element.

     Since this was triggered from an onClick event, the variable
     "this" refers to the <A> element that triggered the onClick
     event (and not to the tabberObj).

     When tabberObj was initialized, we added some extra properties
     to the <A> element, for the purpose of retrieving them now. Get
     the tabberObj object, plus the tab number that was clicked.
  */

  var
  rVal, /* Return value from the user onclick function */
  a, /* element that triggered the onclick event */
  self, /* the tabber object */
  tabberIndex, /* index of the tab that triggered the event */
  onClickArgs; /* args to send the onclick function */

  a = this;
  if (!a.tabber) { return false; }

  self = a.tabber;
  tabberIndex = a.tabberIndex;

  /* Remove focus from the link because it looks ugly.
     I don't know if this is a good idea...
  */
  a.blur();

  /* If the user specified an onClick function, call it now.
     If the function returns false then do not continue.
  */
  if (typeof self.onClick == 'function') {

    onClickArgs = {'tabber':self, 'index':tabberIndex, 'event':event};

    /* IE uses a different way to access the event object */
    if (!event) { onClickArgs.event = window.event; }

    rVal = self.onClick(onClickArgs);
    if (rVal === false) { return false; }
  }

  self.tabShow(tabberIndex);

  return false;
};


tabberObj.prototype.tabHideAll = function()
{
  var i; /* counter */

  /* Hide all tabs and make all navigation links inactive */
  for (i = 0; i < this.tabs.length; i++) {
    this.tabHide(i);
  }
};


tabberObj.prototype.tabHide = function(tabberIndex)
{
  var div;

  if (!this.tabs[tabberIndex]) { return false; }

  /* Hide a single tab and make its navigation link inactive */
  div = this.tabs[tabberIndex].div;

  /* Hide the tab contents by adding classTabHide to the div */
  if (!div.className.match(this.REclassTabHide)) {
    div.className += ' ' + this.classTabHide;
  }
  this.navClearActive(tabberIndex);

  return this;
};


tabberObj.prototype.tabShow = function(tabberIndex)
{
  /* Show the tabberIndex tab and hide all the other tabs */

  var div;

  if (!this.tabs[tabberIndex]) { return false; }

  /* Hide all the tabs first */
  this.tabHideAll();

  /* Get the div that holds this tab */
  div = this.tabs[tabberIndex].div;

  /* Remove classTabHide from the div */
  div.className = div.className.replace(this.REclassTabHide, '');

  /* Mark this tab navigation link as "active" */
  this.navSetActive(tabberIndex);

  /* If the user specified an onTabDisplay function, call it now. */
  if (typeof this.onTabDisplay == 'function') {
    this.onTabDisplay({'tabber':this, 'index':tabberIndex});
  }

  return this;
};

tabberObj.prototype.navSetActive = function(tabberIndex)
{
  /* Note: this method does *not* enforce the rule
     that only one nav item can be active at a time.
  */

  /* Set classNavActive for the navigation list item */
  this.tabs[tabberIndex].li.className = this.classNavActive;

  return this;
};


tabberObj.prototype.navClearActive = function(tabberIndex)
{
  /* Note: this method does *not* enforce the rule
     that one nav should always be active.
  */

  /* Remove classNavActive from the navigation list item */
  this.tabs[tabberIndex].li.className = '';

  return this;
};


/*==================================================*/


function tabberAutomatic(tabberArgs)
{
  /* This function finds all DIV elements in the document where
     class=tabber.classMain, then converts them to use the tabber
     interface.

     tabberArgs = an object to send to "new tabber()"
  */
  var
    tempObj, /* Temporary tabber object */
    divs, /* Array of all divs on the page */
    i; /* Loop index */

  if (!tabberArgs) { tabberArgs = {}; }

  /* Create a tabber object so we can get the value of classMain */
  tempObj = new tabberObj(tabberArgs);

  /* Find all DIV elements in the document that have class=tabber */

  /* First get an array of all DIV elements and loop through them */
  divs = document.getElementsByTagName("div");
  for (i=0; i < divs.length; i++) {
    
    /* Is this DIV the correct class? */
    if (divs[i].className &&
	divs[i].className.match(tempObj.REclassMain)) {
      
      /* Now tabify the DIV */
      tabberArgs.div = divs[i];
      divs[i].tabber = new tabberObj(tabberArgs);
    }
  }
  
  return this;
}


/*==================================================*/


function tabberAutomaticOnLoad(tabberArgs)
{
  /* This function adds tabberAutomatic to the window.onload event,
     so it will run after the document has finished loading.
  */
  var oldOnLoad;

  if (!tabberArgs) { tabberArgs = {}; }

  /* Taken from: http://simon.incutio.com/archive/2004/05/26/addLoadEvent */

  oldOnLoad = window.onload;
  if (typeof window.onload != 'function') {
    window.onload = function() {
      tabberAutomatic(tabberArgs);
    };
  } else {
    window.onload = function() {
      oldOnLoad();
      tabberAutomatic(tabberArgs);
    };
  }
}


/*==================================================*/


/* Run tabberAutomaticOnload() unless the "manualStartup" option was specified */

if (typeof tabberOptions == 'undefined') {

    tabberAutomaticOnLoad();

} else {

  if (!tabberOptions['manualStartup']) {
    tabberAutomaticOnLoad(tabberOptions);
  }

}
/*
 * jQuery 1.2.3 - New Wave Javascript
 *
 * Copyright (c) 2008 John Resig (jquery.com)
 * Dual licensed under the MIT (MIT-LICENSE.txt)
 * and GPL (GPL-LICENSE.txt) licenses.
 *
 * $Date: 2008-02-06 00:21:25 -0500 (Wed, 06 Feb 2008) $
 * $Rev: 4663 $
 */
(function(){if(window.jQuery)var _jQuery=window.jQuery;var jQuery=window.jQuery=function(selector,context){return new jQuery.prototype.init(selector,context);};if(window.$)var _$=window.$;window.$=jQuery;var quickExpr=/^[^<]*(<(.|\s)+>)[^>]*$|^#(\w+)$/;var isSimple=/^.[^:#\[\.]*$/;jQuery.fn=jQuery.prototype={init:function(selector,context){selector=selector||document;if(selector.nodeType){this[0]=selector;this.length=1;return this;}else if(typeof selector=="string"){var match=quickExpr.exec(selector);if(match&&(match[1]||!context)){if(match[1])selector=jQuery.clean([match[1]],context);else{var elem=document.getElementById(match[3]);if(elem)if(elem.id!=match[3])return jQuery().find(selector);else{this[0]=elem;this.length=1;return this;}else
selector=[];}}else
return new jQuery(context).find(selector);}else if(jQuery.isFunction(selector))return new jQuery(document)[jQuery.fn.ready?"ready":"load"](selector);return this.setArray(selector.constructor==Array&&selector||(selector.jquery||selector.length&&selector!=window&&!selector.nodeType&&selector[0]!=undefined&&selector[0].nodeType)&&jQuery.makeArray(selector)||[selector]);},jquery:"1.2.3",size:function(){return this.length;},length:0,get:function(num){return num==undefined?jQuery.makeArray(this):this[num];},pushStack:function(elems){var ret=jQuery(elems);ret.prevObject=this;return ret;},setArray:function(elems){this.length=0;Array.prototype.push.apply(this,elems);return this;},each:function(callback,args){return jQuery.each(this,callback,args);},index:function(elem){var ret=-1;this.each(function(i){if(this==elem)ret=i;});return ret;},attr:function(name,value,type){var options=name;if(name.constructor==String)if(value==undefined)return this.length&&jQuery[type||"attr"](this[0],name)||undefined;else{options={};options[name]=value;}return this.each(function(i){for(name in options)jQuery.attr(type?this.style:this,name,jQuery.prop(this,options[name],type,i,name));});},css:function(key,value){if((key=='width'||key=='height')&&parseFloat(value)<0)value=undefined;return this.attr(key,value,"curCSS");},text:function(text){if(typeof text!="object"&&text!=null)return this.empty().append((this[0]&&this[0].ownerDocument||document).createTextNode(text));var ret="";jQuery.each(text||this,function(){jQuery.each(this.childNodes,function(){if(this.nodeType!=8)ret+=this.nodeType!=1?this.nodeValue:jQuery.fn.text([this]);});});return ret;},wrapAll:function(html){if(this[0])jQuery(html,this[0].ownerDocument).clone().insertBefore(this[0]).map(function(){var elem=this;while(elem.firstChild)elem=elem.firstChild;return elem;}).append(this);return this;},wrapInner:function(html){return this.each(function(){jQuery(this).contents().wrapAll(html);});},wrap:function(html){return this.each(function(){jQuery(this).wrapAll(html);});},append:function(){return this.domManip(arguments,true,false,function(elem){if(this.nodeType==1)this.appendChild(elem);});},prepend:function(){return this.domManip(arguments,true,true,function(elem){if(this.nodeType==1)this.insertBefore(elem,this.firstChild);});},before:function(){return this.domManip(arguments,false,false,function(elem){this.parentNode.insertBefore(elem,this);});},after:function(){return this.domManip(arguments,false,true,function(elem){this.parentNode.insertBefore(elem,this.nextSibling);});},end:function(){return this.prevObject||jQuery([]);},find:function(selector){var elems=jQuery.map(this,function(elem){return jQuery.find(selector,elem);});return this.pushStack(/[^+>] [^+>]/.test(selector)||selector.indexOf("..")>-1?jQuery.unique(elems):elems);},clone:function(events){var ret=this.map(function(){if(jQuery.browser.msie&&!jQuery.isXMLDoc(this)){var clone=this.cloneNode(true),container=document.createElement("div");container.appendChild(clone);return jQuery.clean([container.innerHTML])[0];}else
return this.cloneNode(true);});var clone=ret.find("*").andSelf().each(function(){if(this[expando]!=undefined)this[expando]=null;});if(events===true)this.find("*").andSelf().each(function(i){if(this.nodeType==3)return;var events=jQuery.data(this,"events");for(var type in events)for(var handler in events[type])jQuery.event.add(clone[i],type,events[type][handler],events[type][handler].data);});return ret;},filter:function(selector){return this.pushStack(jQuery.isFunction(selector)&&jQuery.grep(this,function(elem,i){return selector.call(elem,i);})||jQuery.multiFilter(selector,this));},not:function(selector){if(selector.constructor==String)if(isSimple.test(selector))return this.pushStack(jQuery.multiFilter(selector,this,true));else
selector=jQuery.multiFilter(selector,this);var isArrayLike=selector.length&&selector[selector.length-1]!==undefined&&!selector.nodeType;return this.filter(function(){return isArrayLike?jQuery.inArray(this,selector)<0:this!=selector;});},add:function(selector){return!selector?this:this.pushStack(jQuery.merge(this.get(),selector.constructor==String?jQuery(selector).get():selector.length!=undefined&&(!selector.nodeName||jQuery.nodeName(selector,"form"))?selector:[selector]));},is:function(selector){return selector?jQuery.multiFilter(selector,this).length>0:false;},hasClass:function(selector){return this.is("."+selector);},val:function(value){if(value==undefined){if(this.length){var elem=this[0];if(jQuery.nodeName(elem,"select")){var index=elem.selectedIndex,values=[],options=elem.options,one=elem.type=="select-one";if(index<0)return null;for(var i=one?index:0,max=one?index+1:options.length;i<max;i++){var option=options[i];if(option.selected){value=jQuery.browser.msie&&!option.attributes.value.specified?option.text:option.value;if(one)return value;values.push(value);}}return values;}else
return(this[0].value||"").replace(/\r/g,"");}return undefined;}return this.each(function(){if(this.nodeType!=1)return;if(value.constructor==Array&&/radio|checkbox/.test(this.type))this.checked=(jQuery.inArray(this.value,value)>=0||jQuery.inArray(this.name,value)>=0);else if(jQuery.nodeName(this,"select")){var values=value.constructor==Array?value:[value];jQuery("option",this).each(function(){this.selected=(jQuery.inArray(this.value,values)>=0||jQuery.inArray(this.text,values)>=0);});if(!values.length)this.selectedIndex=-1;}else
this.value=value;});},html:function(value){return value==undefined?(this.length?this[0].innerHTML:null):this.empty().append(value);},replaceWith:function(value){return this.after(value).remove();},eq:function(i){return this.slice(i,i+1);},slice:function(){return this.pushStack(Array.prototype.slice.apply(this,arguments));},map:function(callback){return this.pushStack(jQuery.map(this,function(elem,i){return callback.call(elem,i,elem);}));},andSelf:function(){return this.add(this.prevObject);},data:function(key,value){var parts=key.split(".");parts[1]=parts[1]?"."+parts[1]:"";if(value==null){var data=this.triggerHandler("getData"+parts[1]+"!",[parts[0]]);if(data==undefined&&this.length)data=jQuery.data(this[0],key);return data==null&&parts[1]?this.data(parts[0]):data;}else
return this.trigger("setData"+parts[1]+"!",[parts[0],value]).each(function(){jQuery.data(this,key,value);});},removeData:function(key){return this.each(function(){jQuery.removeData(this,key);});},domManip:function(args,table,reverse,callback){var clone=this.length>1,elems;return this.each(function(){if(!elems){elems=jQuery.clean(args,this.ownerDocument);if(reverse)elems.reverse();}var obj=this;if(table&&jQuery.nodeName(this,"table")&&jQuery.nodeName(elems[0],"tr"))obj=this.getElementsByTagName("tbody")[0]||this.appendChild(this.ownerDocument.createElement("tbody"));var scripts=jQuery([]);jQuery.each(elems,function(){var elem=clone?jQuery(this).clone(true)[0]:this;if(jQuery.nodeName(elem,"script")){scripts=scripts.add(elem);}else{if(elem.nodeType==1)scripts=scripts.add(jQuery("script",elem).remove());callback.call(obj,elem);}});scripts.each(evalScript);});}};jQuery.prototype.init.prototype=jQuery.prototype;function evalScript(i,elem){if(elem.src)jQuery.ajax({url:elem.src,async:false,dataType:"script"});else
jQuery.globalEval(elem.text||elem.textContent||elem.innerHTML||"");if(elem.parentNode)elem.parentNode.removeChild(elem);}jQuery.extend=jQuery.fn.extend=function(){var target=arguments[0]||{},i=1,length=arguments.length,deep=false,options;if(target.constructor==Boolean){deep=target;target=arguments[1]||{};i=2;}if(typeof target!="object"&&typeof target!="function")target={};if(length==1){target=this;i=0;}for(;i<length;i++)if((options=arguments[i])!=null)for(var name in options){if(target===options[name])continue;if(deep&&options[name]&&typeof options[name]=="object"&&target[name]&&!options[name].nodeType)target[name]=jQuery.extend(target[name],options[name]);else if(options[name]!=undefined)target[name]=options[name];}return target;};var expando="jQuery"+(new Date()).getTime(),uuid=0,windowData={};var exclude=/z-?index|font-?weight|opacity|zoom|line-?height/i;jQuery.extend({noConflict:function(deep){window.$=_$;if(deep)window.jQuery=_jQuery;return jQuery;},isFunction:function(fn){return!!fn&&typeof fn!="string"&&!fn.nodeName&&fn.constructor!=Array&&/function/i.test(fn+"");},isXMLDoc:function(elem){return elem.documentElement&&!elem.body||elem.tagName&&elem.ownerDocument&&!elem.ownerDocument.body;},globalEval:function(data){data=jQuery.trim(data);if(data){var head=document.getElementsByTagName("head")[0]||document.documentElement,script=document.createElement("script");script.type="text/javascript";if(jQuery.browser.msie)script.text=data;else
script.appendChild(document.createTextNode(data));head.appendChild(script);head.removeChild(script);}},nodeName:function(elem,name){return elem.nodeName&&elem.nodeName.toUpperCase()==name.toUpperCase();},cache:{},data:function(elem,name,data){elem=elem==window?windowData:elem;var id=elem[expando];if(!id)id=elem[expando]=++uuid;if(name&&!jQuery.cache[id])jQuery.cache[id]={};if(data!=undefined)jQuery.cache[id][name]=data;return name?jQuery.cache[id][name]:id;},removeData:function(elem,name){elem=elem==window?windowData:elem;var id=elem[expando];if(name){if(jQuery.cache[id]){delete jQuery.cache[id][name];name="";for(name in jQuery.cache[id])break;if(!name)jQuery.removeData(elem);}}else{try{delete elem[expando];}catch(e){if(elem.removeAttribute)elem.removeAttribute(expando);}delete jQuery.cache[id];}},each:function(object,callback,args){if(args){if(object.length==undefined){for(var name in object)if(callback.apply(object[name],args)===false)break;}else
for(var i=0,length=object.length;i<length;i++)if(callback.apply(object[i],args)===false)break;}else{if(object.length==undefined){for(var name in object)if(callback.call(object[name],name,object[name])===false)break;}else
for(var i=0,length=object.length,value=object[0];i<length&&callback.call(value,i,value)!==false;value=object[++i]){}}return object;},prop:function(elem,value,type,i,name){if(jQuery.isFunction(value))value=value.call(elem,i);return value&&value.constructor==Number&&type=="curCSS"&&!exclude.test(name)?value+"px":value;},className:{add:function(elem,classNames){jQuery.each((classNames||"").split(/\s+/),function(i,className){if(elem.nodeType==1&&!jQuery.className.has(elem.className,className))elem.className+=(elem.className?" ":"")+className;});},remove:function(elem,classNames){if(elem.nodeType==1)elem.className=classNames!=undefined?jQuery.grep(elem.className.split(/\s+/),function(className){return!jQuery.className.has(classNames,className);}).join(" "):"";},has:function(elem,className){return jQuery.inArray(className,(elem.className||elem).toString().split(/\s+/))>-1;}},swap:function(elem,options,callback){var old={};for(var name in options){old[name]=elem.style[name];elem.style[name]=options[name];}callback.call(elem);for(var name in options)elem.style[name]=old[name];},css:function(elem,name,force){if(name=="width"||name=="height"){var val,props={position:"absolute",visibility:"hidden",display:"block"},which=name=="width"?["Left","Right"]:["Top","Bottom"];function getWH(){val=name=="width"?elem.offsetWidth:elem.offsetHeight;var padding=0,border=0;jQuery.each(which,function(){padding+=parseFloat(jQuery.curCSS(elem,"padding"+this,true))||0;border+=parseFloat(jQuery.curCSS(elem,"border"+this+"Width",true))||0;});val-=Math.round(padding+border);}if(jQuery(elem).is(":visible"))getWH();else
jQuery.swap(elem,props,getWH);return Math.max(0,val);}return jQuery.curCSS(elem,name,force);},curCSS:function(elem,name,force){var ret;function color(elem){if(!jQuery.browser.safari)return false;var ret=document.defaultView.getComputedStyle(elem,null);return!ret||ret.getPropertyValue("color")=="";}if(name=="opacity"&&jQuery.browser.msie){ret=jQuery.attr(elem.style,"opacity");return ret==""?"1":ret;}if(jQuery.browser.opera&&name=="display"){var save=elem.style.outline;elem.style.outline="0 solid black";elem.style.outline=save;}if(name.match(/float/i))name=styleFloat;if(!force&&elem.style&&elem.style[name])ret=elem.style[name];else if(document.defaultView&&document.defaultView.getComputedStyle){if(name.match(/float/i))name="float";name=name.replace(/([A-Z])/g,"-$1").toLowerCase();var getComputedStyle=document.defaultView.getComputedStyle(elem,null);if(getComputedStyle&&!color(elem))ret=getComputedStyle.getPropertyValue(name);else{var swap=[],stack=[];for(var a=elem;a&&color(a);a=a.parentNode)stack.unshift(a);for(var i=0;i<stack.length;i++)if(color(stack[i])){swap[i]=stack[i].style.display;stack[i].style.display="block";}ret=name=="display"&&swap[stack.length-1]!=null?"none":(getComputedStyle&&getComputedStyle.getPropertyValue(name))||"";for(var i=0;i<swap.length;i++)if(swap[i]!=null)stack[i].style.display=swap[i];}if(name=="opacity"&&ret=="")ret="1";}else if(elem.currentStyle){var camelCase=name.replace(/\-(\w)/g,function(all,letter){return letter.toUpperCase();});ret=elem.currentStyle[name]||elem.currentStyle[camelCase];if(!/^\d+(px)?$/i.test(ret)&&/^\d/.test(ret)){var style=elem.style.left,runtimeStyle=elem.runtimeStyle.left;elem.runtimeStyle.left=elem.currentStyle.left;elem.style.left=ret||0;ret=elem.style.pixelLeft+"px";elem.style.left=style;elem.runtimeStyle.left=runtimeStyle;}}return ret;},clean:function(elems,context){var ret=[];context=context||document;if(typeof context.createElement=='undefined')context=context.ownerDocument||context[0]&&context[0].ownerDocument||document;jQuery.each(elems,function(i,elem){if(!elem)return;if(elem.constructor==Number)elem=elem.toString();if(typeof elem=="string"){elem=elem.replace(/(<(\w+)[^>]*?)\/>/g,function(all,front,tag){return tag.match(/^(abbr|br|col|img|input|link|meta|param|hr|area|embed)$/i)?all:front+"></"+tag+">";});var tags=jQuery.trim(elem).toLowerCase(),div=context.createElement("div");var wrap=!tags.indexOf("<opt")&&[1,"<select multiple='multiple'>","</select>"]||!tags.indexOf("<leg")&&[1,"<fieldset>","</fieldset>"]||tags.match(/^<(thead|tbody|tfoot|colg|cap)/)&&[1,"<table>","</table>"]||!tags.indexOf("<tr")&&[2,"<table><tbody>","</tbody></table>"]||(!tags.indexOf("<td")||!tags.indexOf("<th"))&&[3,"<table><tbody><tr>","</tr></tbody></table>"]||!tags.indexOf("<col")&&[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"]||jQuery.browser.msie&&[1,"div<div>","</div>"]||[0,"",""];div.innerHTML=wrap[1]+elem+wrap[2];while(wrap[0]--)div=div.lastChild;if(jQuery.browser.msie){var tbody=!tags.indexOf("<table")&&tags.indexOf("<tbody")<0?div.firstChild&&div.firstChild.childNodes:wrap[1]=="<table>"&&tags.indexOf("<tbody")<0?div.childNodes:[];for(var j=tbody.length-1;j>=0;--j)if(jQuery.nodeName(tbody[j],"tbody")&&!tbody[j].childNodes.length)tbody[j].parentNode.removeChild(tbody[j]);if(/^\s/.test(elem))div.insertBefore(context.createTextNode(elem.match(/^\s*/)[0]),div.firstChild);}elem=jQuery.makeArray(div.childNodes);}if(elem.length===0&&(!jQuery.nodeName(elem,"form")&&!jQuery.nodeName(elem,"select")))return;if(elem[0]==undefined||jQuery.nodeName(elem,"form")||elem.options)ret.push(elem);else
ret=jQuery.merge(ret,elem);});return ret;},attr:function(elem,name,value){if(!elem||elem.nodeType==3||elem.nodeType==8)return undefined;var fix=jQuery.isXMLDoc(elem)?{}:jQuery.props;if(name=="selected"&&jQuery.browser.safari)elem.parentNode.selectedIndex;if(fix[name]){if(value!=undefined)elem[fix[name]]=value;return elem[fix[name]];}else if(jQuery.browser.msie&&name=="style")return jQuery.attr(elem.style,"cssText",value);else if(value==undefined&&jQuery.browser.msie&&jQuery.nodeName(elem,"form")&&(name=="action"||name=="method"))return elem.getAttributeNode(name).nodeValue;else if(elem.tagName){if(value!=undefined){if(name=="type"&&jQuery.nodeName(elem,"input")&&elem.parentNode)throw"type property can't be changed";elem.setAttribute(name,""+value);}if(jQuery.browser.msie&&/href|src/.test(name)&&!jQuery.isXMLDoc(elem))return elem.getAttribute(name,2);return elem.getAttribute(name);}else{if(name=="opacity"&&jQuery.browser.msie){if(value!=undefined){elem.zoom=1;elem.filter=(elem.filter||"").replace(/alpha\([^)]*\)/,"")+(parseFloat(value).toString()=="NaN"?"":"alpha(opacity="+value*100+")");}return elem.filter&&elem.filter.indexOf("opacity=")>=0?(parseFloat(elem.filter.match(/opacity=([^)]*)/)[1])/100).toString():"";}name=name.replace(/-([a-z])/ig,function(all,letter){return letter.toUpperCase();});if(value!=undefined)elem[name]=value;return elem[name];}},trim:function(text){return(text||"").replace(/^\s+|\s+$/g,"");},makeArray:function(array){var ret=[];if(typeof array!="array")for(var i=0,length=array.length;i<length;i++)ret.push(array[i]);else
ret=array.slice(0);return ret;},inArray:function(elem,array){for(var i=0,length=array.length;i<length;i++)if(array[i]==elem)return i;return-1;},merge:function(first,second){if(jQuery.browser.msie){for(var i=0;second[i];i++)if(second[i].nodeType!=8)first.push(second[i]);}else
for(var i=0;second[i];i++)first.push(second[i]);return first;},unique:function(array){var ret=[],done={};try{for(var i=0,length=array.length;i<length;i++){var id=jQuery.data(array[i]);if(!done[id]){done[id]=true;ret.push(array[i]);}}}catch(e){ret=array;}return ret;},grep:function(elems,callback,inv){var ret=[];for(var i=0,length=elems.length;i<length;i++)if(!inv&&callback(elems[i],i)||inv&&!callback(elems[i],i))ret.push(elems[i]);return ret;},map:function(elems,callback){var ret=[];for(var i=0,length=elems.length;i<length;i++){var value=callback(elems[i],i);if(value!==null&&value!=undefined){if(value.constructor!=Array)value=[value];ret=ret.concat(value);}}return ret;}});var userAgent=navigator.userAgent.toLowerCase();jQuery.browser={version:(userAgent.match(/.+(?:rv|it|ra|ie)[\/: ]([\d.]+)/)||[])[1],safari:/webkit/.test(userAgent),opera:/opera/.test(userAgent),msie:/msie/.test(userAgent)&&!/opera/.test(userAgent),mozilla:/mozilla/.test(userAgent)&&!/(compatible|webkit)/.test(userAgent)};var styleFloat=jQuery.browser.msie?"styleFloat":"cssFloat";jQuery.extend({boxModel:!jQuery.browser.msie||document.compatMode=="CSS1Compat",props:{"for":"htmlFor","class":"className","float":styleFloat,cssFloat:styleFloat,styleFloat:styleFloat,innerHTML:"innerHTML",className:"className",value:"value",disabled:"disabled",checked:"checked",readonly:"readOnly",selected:"selected",maxlength:"maxLength",selectedIndex:"selectedIndex",defaultValue:"defaultValue",tagName:"tagName",nodeName:"nodeName"}});jQuery.each({parent:function(elem){return elem.parentNode;},parents:function(elem){return jQuery.dir(elem,"parentNode");},next:function(elem){return jQuery.nth(elem,2,"nextSibling");},prev:function(elem){return jQuery.nth(elem,2,"previousSibling");},nextAll:function(elem){return jQuery.dir(elem,"nextSibling");},prevAll:function(elem){return jQuery.dir(elem,"previousSibling");},siblings:function(elem){return jQuery.sibling(elem.parentNode.firstChild,elem);},children:function(elem){return jQuery.sibling(elem.firstChild);},contents:function(elem){return jQuery.nodeName(elem,"iframe")?elem.contentDocument||elem.contentWindow.document:jQuery.makeArray(elem.childNodes);}},function(name,fn){jQuery.fn[name]=function(selector){var ret=jQuery.map(this,fn);if(selector&&typeof selector=="string")ret=jQuery.multiFilter(selector,ret);return this.pushStack(jQuery.unique(ret));};});jQuery.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(name,original){jQuery.fn[name]=function(){var args=arguments;return this.each(function(){for(var i=0,length=args.length;i<length;i++)jQuery(args[i])[original](this);});};});jQuery.each({removeAttr:function(name){jQuery.attr(this,name,"");if(this.nodeType==1)this.removeAttribute(name);},addClass:function(classNames){jQuery.className.add(this,classNames);},removeClass:function(classNames){jQuery.className.remove(this,classNames);},toggleClass:function(classNames){jQuery.className[jQuery.className.has(this,classNames)?"remove":"add"](this,classNames);},remove:function(selector){if(!selector||jQuery.filter(selector,[this]).r.length){jQuery("*",this).add(this).each(function(){jQuery.event.remove(this);jQuery.removeData(this);});if(this.parentNode)this.parentNode.removeChild(this);}},empty:function(){jQuery(">*",this).remove();while(this.firstChild)this.removeChild(this.firstChild);}},function(name,fn){jQuery.fn[name]=function(){return this.each(fn,arguments);};});jQuery.each(["Height","Width"],function(i,name){var type=name.toLowerCase();jQuery.fn[type]=function(size){return this[0]==window?jQuery.browser.opera&&document.body["client"+name]||jQuery.browser.safari&&window["inner"+name]||document.compatMode=="CSS1Compat"&&document.documentElement["client"+name]||document.body["client"+name]:this[0]==document?Math.max(Math.max(document.body["scroll"+name],document.documentElement["scroll"+name]),Math.max(document.body["offset"+name],document.documentElement["offset"+name])):size==undefined?(this.length?jQuery.css(this[0],type):null):this.css(type,size.constructor==String?size:size+"px");};});var chars=jQuery.browser.safari&&parseInt(jQuery.browser.version)<417?"(?:[\\w*_-]|\\\\.)":"(?:[\\w\u0128-\uFFFF*_-]|\\\\.)",quickChild=new RegExp("^>\\s*("+chars+"+)"),quickID=new RegExp("^("+chars+"+)(#)("+chars+"+)"),quickClass=new RegExp("^([#.]?)("+chars+"*)");jQuery.extend({expr:{"":function(a,i,m){return m[2]=="*"||jQuery.nodeName(a,m[2]);},"#":function(a,i,m){return a.getAttribute("id")==m[2];},":":{lt:function(a,i,m){return i<m[3]-0;},gt:function(a,i,m){return i>m[3]-0;},nth:function(a,i,m){return m[3]-0==i;},eq:function(a,i,m){return m[3]-0==i;},first:function(a,i){return i==0;},last:function(a,i,m,r){return i==r.length-1;},even:function(a,i){return i%2==0;},odd:function(a,i){return i%2;},"first-child":function(a){return a.parentNode.getElementsByTagName("*")[0]==a;},"last-child":function(a){return jQuery.nth(a.parentNode.lastChild,1,"previousSibling")==a;},"only-child":function(a){return!jQuery.nth(a.parentNode.lastChild,2,"previousSibling");},parent:function(a){return a.firstChild;},empty:function(a){return!a.firstChild;},contains:function(a,i,m){return(a.textContent||a.innerText||jQuery(a).text()||"").indexOf(m[3])>=0;},visible:function(a){return"hidden"!=a.type&&jQuery.css(a,"display")!="none"&&jQuery.css(a,"visibility")!="hidden";},hidden:function(a){return"hidden"==a.type||jQuery.css(a,"display")=="none"||jQuery.css(a,"visibility")=="hidden";},enabled:function(a){return!a.disabled;},disabled:function(a){return a.disabled;},checked:function(a){return a.checked;},selected:function(a){return a.selected||jQuery.attr(a,"selected");},text:function(a){return"text"==a.type;},radio:function(a){return"radio"==a.type;},checkbox:function(a){return"checkbox"==a.type;},file:function(a){return"file"==a.type;},password:function(a){return"password"==a.type;},submit:function(a){return"submit"==a.type;},image:function(a){return"image"==a.type;},reset:function(a){return"reset"==a.type;},button:function(a){return"button"==a.type||jQuery.nodeName(a,"button");},input:function(a){return/input|select|textarea|button/i.test(a.nodeName);},has:function(a,i,m){return jQuery.find(m[3],a).length;},header:function(a){return/h\d/i.test(a.nodeName);},animated:function(a){return jQuery.grep(jQuery.timers,function(fn){return a==fn.elem;}).length;}}},parse:[/^(\[) *@?([\w-]+) *([!*$^~=]*) *('?"?)(.*?)\4 *\]/,/^(:)([\w-]+)\("?'?(.*?(\(.*?\))?[^(]*?)"?'?\)/,new RegExp("^([:.#]*)("+chars+"+)")],multiFilter:function(expr,elems,not){var old,cur=[];while(expr&&expr!=old){old=expr;var f=jQuery.filter(expr,elems,not);expr=f.t.replace(/^\s*,\s*/,"");cur=not?elems=f.r:jQuery.merge(cur,f.r);}return cur;},find:function(t,context){if(typeof t!="string")return[t];if(context&&context.nodeType!=1&&context.nodeType!=9)return[];context=context||document;var ret=[context],done=[],last,nodeName;while(t&&last!=t){var r=[];last=t;t=jQuery.trim(t);var foundToken=false;var re=quickChild;var m=re.exec(t);if(m){nodeName=m[1].toUpperCase();for(var i=0;ret[i];i++)for(var c=ret[i].firstChild;c;c=c.nextSibling)if(c.nodeType==1&&(nodeName=="*"||c.nodeName.toUpperCase()==nodeName))r.push(c);ret=r;t=t.replace(re,"");if(t.indexOf(" ")==0)continue;foundToken=true;}else{re=/^([>+~])\s*(\w*)/i;if((m=re.exec(t))!=null){r=[];var merge={};nodeName=m[2].toUpperCase();m=m[1];for(var j=0,rl=ret.length;j<rl;j++){var n=m=="~"||m=="+"?ret[j].nextSibling:ret[j].firstChild;for(;n;n=n.nextSibling)if(n.nodeType==1){var id=jQuery.data(n);if(m=="~"&&merge[id])break;if(!nodeName||n.nodeName.toUpperCase()==nodeName){if(m=="~")merge[id]=true;r.push(n);}if(m=="+")break;}}ret=r;t=jQuery.trim(t.replace(re,""));foundToken=true;}}if(t&&!foundToken){if(!t.indexOf(",")){if(context==ret[0])ret.shift();done=jQuery.merge(done,ret);r=ret=[context];t=" "+t.substr(1,t.length);}else{var re2=quickID;var m=re2.exec(t);if(m){m=[0,m[2],m[3],m[1]];}else{re2=quickClass;m=re2.exec(t);}m[2]=m[2].replace(/\\/g,"");var elem=ret[ret.length-1];if(m[1]=="#"&&elem&&elem.getElementById&&!jQuery.isXMLDoc(elem)){var oid=elem.getElementById(m[2]);if((jQuery.browser.msie||jQuery.browser.opera)&&oid&&typeof oid.id=="string"&&oid.id!=m[2])oid=jQuery('[@id="'+m[2]+'"]',elem)[0];ret=r=oid&&(!m[3]||jQuery.nodeName(oid,m[3]))?[oid]:[];}else{for(var i=0;ret[i];i++){var tag=m[1]=="#"&&m[3]?m[3]:m[1]!=""||m[0]==""?"*":m[2];if(tag=="*"&&ret[i].nodeName.toLowerCase()=="object")tag="param";r=jQuery.merge(r,ret[i].getElementsByTagName(tag));}if(m[1]==".")r=jQuery.classFilter(r,m[2]);if(m[1]=="#"){var tmp=[];for(var i=0;r[i];i++)if(r[i].getAttribute("id")==m[2]){tmp=[r[i]];break;}r=tmp;}ret=r;}t=t.replace(re2,"");}}if(t){var val=jQuery.filter(t,r);ret=r=val.r;t=jQuery.trim(val.t);}}if(t)ret=[];if(ret&&context==ret[0])ret.shift();done=jQuery.merge(done,ret);return done;},classFilter:function(r,m,not){m=" "+m+" ";var tmp=[];for(var i=0;r[i];i++){var pass=(" "+r[i].className+" ").indexOf(m)>=0;if(!not&&pass||not&&!pass)tmp.push(r[i]);}return tmp;},filter:function(t,r,not){var last;while(t&&t!=last){last=t;var p=jQuery.parse,m;for(var i=0;p[i];i++){m=p[i].exec(t);if(m){t=t.substring(m[0].length);m[2]=m[2].replace(/\\/g,"");break;}}if(!m)break;if(m[1]==":"&&m[2]=="not")r=isSimple.test(m[3])?jQuery.filter(m[3],r,true).r:jQuery(r).not(m[3]);else if(m[1]==".")r=jQuery.classFilter(r,m[2],not);else if(m[1]=="["){var tmp=[],type=m[3];for(var i=0,rl=r.length;i<rl;i++){var a=r[i],z=a[jQuery.props[m[2]]||m[2]];if(z==null||/href|src|selected/.test(m[2]))z=jQuery.attr(a,m[2])||'';if((type==""&&!!z||type=="="&&z==m[5]||type=="!="&&z!=m[5]||type=="^="&&z&&!z.indexOf(m[5])||type=="$="&&z.substr(z.length-m[5].length)==m[5]||(type=="*="||type=="~=")&&z.indexOf(m[5])>=0)^not)tmp.push(a);}r=tmp;}else if(m[1]==":"&&m[2]=="nth-child"){var merge={},tmp=[],test=/(-?)(\d*)n((?:\+|-)?\d*)/.exec(m[3]=="even"&&"2n"||m[3]=="odd"&&"2n+1"||!/\D/.test(m[3])&&"0n+"+m[3]||m[3]),first=(test[1]+(test[2]||1))-0,last=test[3]-0;for(var i=0,rl=r.length;i<rl;i++){var node=r[i],parentNode=node.parentNode,id=jQuery.data(parentNode);if(!merge[id]){var c=1;for(var n=parentNode.firstChild;n;n=n.nextSibling)if(n.nodeType==1)n.nodeIndex=c++;merge[id]=true;}var add=false;if(first==0){if(node.nodeIndex==last)add=true;}else if((node.nodeIndex-last)%first==0&&(node.nodeIndex-last)/first>=0)add=true;if(add^not)tmp.push(node);}r=tmp;}else{var fn=jQuery.expr[m[1]];if(typeof fn=="object")fn=fn[m[2]];if(typeof fn=="string")fn=eval("false||function(a,i){return "+fn+";}");r=jQuery.grep(r,function(elem,i){return fn(elem,i,m,r);},not);}}return{r:r,t:t};},dir:function(elem,dir){var matched=[];var cur=elem[dir];while(cur&&cur!=document){if(cur.nodeType==1)matched.push(cur);cur=cur[dir];}return matched;},nth:function(cur,result,dir,elem){result=result||1;var num=0;for(;cur;cur=cur[dir])if(cur.nodeType==1&&++num==result)break;return cur;},sibling:function(n,elem){var r=[];for(;n;n=n.nextSibling){if(n.nodeType==1&&(!elem||n!=elem))r.push(n);}return r;}});jQuery.event={add:function(elem,types,handler,data){if(elem.nodeType==3||elem.nodeType==8)return;if(jQuery.browser.msie&&elem.setInterval!=undefined)elem=window;if(!handler.guid)handler.guid=this.guid++;if(data!=undefined){var fn=handler;handler=function(){return fn.apply(this,arguments);};handler.data=data;handler.guid=fn.guid;}var events=jQuery.data(elem,"events")||jQuery.data(elem,"events",{}),handle=jQuery.data(elem,"handle")||jQuery.data(elem,"handle",function(){var val;if(typeof jQuery=="undefined"||jQuery.event.triggered)return val;val=jQuery.event.handle.apply(arguments.callee.elem,arguments);return val;});handle.elem=elem;jQuery.each(types.split(/\s+/),function(index,type){var parts=type.split(".");type=parts[0];handler.type=parts[1];var handlers=events[type];if(!handlers){handlers=events[type]={};if(!jQuery.event.special[type]||jQuery.event.special[type].setup.call(elem)===false){if(elem.addEventListener)elem.addEventListener(type,handle,false);else if(elem.attachEvent)elem.attachEvent("on"+type,handle);}}handlers[handler.guid]=handler;jQuery.event.global[type]=true;});elem=null;},guid:1,global:{},remove:function(elem,types,handler){if(elem.nodeType==3||elem.nodeType==8)return;var events=jQuery.data(elem,"events"),ret,index;if(events){if(types==undefined||(typeof types=="string"&&types.charAt(0)=="."))for(var type in events)this.remove(elem,type+(types||""));else{if(types.type){handler=types.handler;types=types.type;}jQuery.each(types.split(/\s+/),function(index,type){var parts=type.split(".");type=parts[0];if(events[type]){if(handler)delete events[type][handler.guid];else
for(handler in events[type])if(!parts[1]||events[type][handler].type==parts[1])delete events[type][handler];for(ret in events[type])break;if(!ret){if(!jQuery.event.special[type]||jQuery.event.special[type].teardown.call(elem)===false){if(elem.removeEventListener)elem.removeEventListener(type,jQuery.data(elem,"handle"),false);else if(elem.detachEvent)elem.detachEvent("on"+type,jQuery.data(elem,"handle"));}ret=null;delete events[type];}}});}for(ret in events)break;if(!ret){var handle=jQuery.data(elem,"handle");if(handle)handle.elem=null;jQuery.removeData(elem,"events");jQuery.removeData(elem,"handle");}}},trigger:function(type,data,elem,donative,extra){data=jQuery.makeArray(data||[]);if(type.indexOf("!")>=0){type=type.slice(0,-1);var exclusive=true;}if(!elem){if(this.global[type])jQuery("*").add([window,document]).trigger(type,data);}else{if(elem.nodeType==3||elem.nodeType==8)return undefined;var val,ret,fn=jQuery.isFunction(elem[type]||null),event=!data[0]||!data[0].preventDefault;if(event)data.unshift(this.fix({type:type,target:elem}));data[0].type=type;if(exclusive)data[0].exclusive=true;if(jQuery.isFunction(jQuery.data(elem,"handle")))val=jQuery.data(elem,"handle").apply(elem,data);if(!fn&&elem["on"+type]&&elem["on"+type].apply(elem,data)===false)val=false;if(event)data.shift();if(extra&&jQuery.isFunction(extra)){ret=extra.apply(elem,val==null?data:data.concat(val));if(ret!==undefined)val=ret;}if(fn&&donative!==false&&val!==false&&!(jQuery.nodeName(elem,'a')&&type=="click")){this.triggered=true;try{elem[type]();}catch(e){}}this.triggered=false;}return val;},handle:function(event){var val;event=jQuery.event.fix(event||window.event||{});var parts=event.type.split(".");event.type=parts[0];var handlers=jQuery.data(this,"events")&&jQuery.data(this,"events")[event.type],args=Array.prototype.slice.call(arguments,1);args.unshift(event);for(var j in handlers){var handler=handlers[j];args[0].handler=handler;args[0].data=handler.data;if(!parts[1]&&!event.exclusive||handler.type==parts[1]){var ret=handler.apply(this,args);if(val!==false)val=ret;if(ret===false){event.preventDefault();event.stopPropagation();}}}if(jQuery.browser.msie)event.target=event.preventDefault=event.stopPropagation=event.handler=event.data=null;return val;},fix:function(event){var originalEvent=event;event=jQuery.extend({},originalEvent);event.preventDefault=function(){if(originalEvent.preventDefault)originalEvent.preventDefault();originalEvent.returnValue=false;};event.stopPropagation=function(){if(originalEvent.stopPropagation)originalEvent.stopPropagation();originalEvent.cancelBubble=true;};if(!event.target)event.target=event.srcElement||document;if(event.target.nodeType==3)event.target=originalEvent.target.parentNode;if(!event.relatedTarget&&event.fromElement)event.relatedTarget=event.fromElement==event.target?event.toElement:event.fromElement;if(event.pageX==null&&event.clientX!=null){var doc=document.documentElement,body=document.body;event.pageX=event.clientX+(doc&&doc.scrollLeft||body&&body.scrollLeft||0)-(doc.clientLeft||0);event.pageY=event.clientY+(doc&&doc.scrollTop||body&&body.scrollTop||0)-(doc.clientTop||0);}if(!event.which&&((event.charCode||event.charCode===0)?event.charCode:event.keyCode))event.which=event.charCode||event.keyCode;if(!event.metaKey&&event.ctrlKey)event.metaKey=event.ctrlKey;if(!event.which&&event.button)event.which=(event.button&1?1:(event.button&2?3:(event.button&4?2:0)));return event;},special:{ready:{setup:function(){bindReady();return;},teardown:function(){return;}},mouseenter:{setup:function(){if(jQuery.browser.msie)return false;jQuery(this).bind("mouseover",jQuery.event.special.mouseenter.handler);return true;},teardown:function(){if(jQuery.browser.msie)return false;jQuery(this).unbind("mouseover",jQuery.event.special.mouseenter.handler);return true;},handler:function(event){if(withinElement(event,this))return true;arguments[0].type="mouseenter";return jQuery.event.handle.apply(this,arguments);}},mouseleave:{setup:function(){if(jQuery.browser.msie)return false;jQuery(this).bind("mouseout",jQuery.event.special.mouseleave.handler);return true;},teardown:function(){if(jQuery.browser.msie)return false;jQuery(this).unbind("mouseout",jQuery.event.special.mouseleave.handler);return true;},handler:function(event){if(withinElement(event,this))return true;arguments[0].type="mouseleave";return jQuery.event.handle.apply(this,arguments);}}}};jQuery.fn.extend({bind:function(type,data,fn){return type=="unload"?this.one(type,data,fn):this.each(function(){jQuery.event.add(this,type,fn||data,fn&&data);});},one:function(type,data,fn){return this.each(function(){jQuery.event.add(this,type,function(event){jQuery(this).unbind(event);return(fn||data).apply(this,arguments);},fn&&data);});},unbind:function(type,fn){return this.each(function(){jQuery.event.remove(this,type,fn);});},trigger:function(type,data,fn){return this.each(function(){jQuery.event.trigger(type,data,this,true,fn);});},triggerHandler:function(type,data,fn){if(this[0])return jQuery.event.trigger(type,data,this[0],false,fn);return undefined;},toggle:function(){var args=arguments;return this.click(function(event){this.lastToggle=0==this.lastToggle?1:0;event.preventDefault();return args[this.lastToggle].apply(this,arguments)||false;});},hover:function(fnOver,fnOut){return this.bind('mouseenter',fnOver).bind('mouseleave',fnOut);},ready:function(fn){bindReady();if(jQuery.isReady)fn.call(document,jQuery);else
jQuery.readyList.push(function(){return fn.call(this,jQuery);});return this;}});jQuery.extend({isReady:false,readyList:[],ready:function(){if(!jQuery.isReady){jQuery.isReady=true;if(jQuery.readyList){jQuery.each(jQuery.readyList,function(){this.apply(document);});jQuery.readyList=null;}jQuery(document).triggerHandler("ready");}}});var readyBound=false;function bindReady(){if(readyBound)return;readyBound=true;if(document.addEventListener&&!jQuery.browser.opera)document.addEventListener("DOMContentLoaded",jQuery.ready,false);if(jQuery.browser.msie&&window==top)(function(){if(jQuery.isReady)return;try{document.documentElement.doScroll("left");}catch(error){setTimeout(arguments.callee,0);return;}jQuery.ready();})();if(jQuery.browser.opera)document.addEventListener("DOMContentLoaded",function(){if(jQuery.isReady)return;for(var i=0;i<document.styleSheets.length;i++)if(document.styleSheets[i].disabled){setTimeout(arguments.callee,0);return;}jQuery.ready();},false);if(jQuery.browser.safari){var numStyles;(function(){if(jQuery.isReady)return;if(document.readyState!="loaded"&&document.readyState!="complete"){setTimeout(arguments.callee,0);return;}if(numStyles===undefined)numStyles=jQuery("style, link[rel=stylesheet]").length;if(document.styleSheets.length!=numStyles){setTimeout(arguments.callee,0);return;}jQuery.ready();})();}jQuery.event.add(window,"load",jQuery.ready);}jQuery.each(("blur,focus,load,resize,scroll,unload,click,dblclick,"+"mousedown,mouseup,mousemove,mouseover,mouseout,change,select,"+"submit,keydown,keypress,keyup,error").split(","),function(i,name){jQuery.fn[name]=function(fn){return fn?this.bind(name,fn):this.trigger(name);};});var withinElement=function(event,elem){var parent=event.relatedTarget;while(parent&&parent!=elem)try{parent=parent.parentNode;}catch(error){parent=elem;}return parent==elem;};jQuery(window).bind("unload",function(){jQuery("*").add(document).unbind();});jQuery.fn.extend({load:function(url,params,callback){if(jQuery.isFunction(url))return this.bind("load",url);var off=url.indexOf(" ");if(off>=0){var selector=url.slice(off,url.length);url=url.slice(0,off);}callback=callback||function(){};var type="GET";if(params)if(jQuery.isFunction(params)){callback=params;params=null;}else{params=jQuery.param(params);type="POST";}var self=this;jQuery.ajax({url:url,type:type,dataType:"html",data:params,complete:function(res,status){if(status=="success"||status=="notmodified")self.html(selector?jQuery("<div/>").append(res.responseText.replace(/<script(.|\s)*?\/script>/g,"")).find(selector):res.responseText);self.each(callback,[res.responseText,status,res]);}});return this;},serialize:function(){return jQuery.param(this.serializeArray());},serializeArray:function(){return this.map(function(){return jQuery.nodeName(this,"form")?jQuery.makeArray(this.elements):this;}).filter(function(){return this.name&&!this.disabled&&(this.checked||/select|textarea/i.test(this.nodeName)||/text|hidden|password/i.test(this.type));}).map(function(i,elem){var val=jQuery(this).val();return val==null?null:val.constructor==Array?jQuery.map(val,function(val,i){return{name:elem.name,value:val};}):{name:elem.name,value:val};}).get();}});jQuery.each("ajaxStart,ajaxStop,ajaxComplete,ajaxError,ajaxSuccess,ajaxSend".split(","),function(i,o){jQuery.fn[o]=function(f){return this.bind(o,f);};});var jsc=(new Date).getTime();jQuery.extend({get:function(url,data,callback,type){if(jQuery.isFunction(data)){callback=data;data=null;}return jQuery.ajax({type:"GET",url:url,data:data,success:callback,dataType:type});},getScript:function(url,callback){return jQuery.get(url,null,callback,"script");},getJSON:function(url,data,callback){return jQuery.get(url,data,callback,"json");},post:function(url,data,callback,type){if(jQuery.isFunction(data)){callback=data;data={};}return jQuery.ajax({type:"POST",url:url,data:data,success:callback,dataType:type});},ajaxSetup:function(settings){jQuery.extend(jQuery.ajaxSettings,settings);},ajaxSettings:{global:true,type:"GET",timeout:0,contentType:"application/x-www-form-urlencoded",processData:true,async:true,data:null,username:null,password:null,accepts:{xml:"application/xml, text/xml",html:"text/html",script:"text/javascript, application/javascript",json:"application/json, text/javascript",text:"text/plain",_default:"*/*"}},lastModified:{},ajax:function(s){var jsonp,jsre=/=\?(&|$)/g,status,data;s=jQuery.extend(true,s,jQuery.extend(true,{},jQuery.ajaxSettings,s));if(s.data&&s.processData&&typeof s.data!="string")s.data=jQuery.param(s.data);if(s.dataType=="jsonp"){if(s.type.toLowerCase()=="get"){if(!s.url.match(jsre))s.url+=(s.url.match(/\?/)?"&":"?")+(s.jsonp||"callback")+"=?";}else if(!s.data||!s.data.match(jsre))s.data=(s.data?s.data+"&":"")+(s.jsonp||"callback")+"=?";s.dataType="json";}if(s.dataType=="json"&&(s.data&&s.data.match(jsre)||s.url.match(jsre))){jsonp="jsonp"+jsc++;if(s.data)s.data=(s.data+"").replace(jsre,"="+jsonp+"$1");s.url=s.url.replace(jsre,"="+jsonp+"$1");s.dataType="script";window[jsonp]=function(tmp){data=tmp;success();complete();window[jsonp]=undefined;try{delete window[jsonp];}catch(e){}if(head)head.removeChild(script);};}if(s.dataType=="script"&&s.cache==null)s.cache=false;if(s.cache===false&&s.type.toLowerCase()=="get"){var ts=(new Date()).getTime();var ret=s.url.replace(/(\?|&)_=.*?(&|$)/,"$1_="+ts+"$2");s.url=ret+((ret==s.url)?(s.url.match(/\?/)?"&":"?")+"_="+ts:"");}if(s.data&&s.type.toLowerCase()=="get"){s.url+=(s.url.match(/\?/)?"&":"?")+s.data;s.data=null;}if(s.global&&!jQuery.active++)jQuery.event.trigger("ajaxStart");if((!s.url.indexOf("http")||!s.url.indexOf("//"))&&s.dataType=="script"&&s.type.toLowerCase()=="get"){var head=document.getElementsByTagName("head")[0];var script=document.createElement("script");script.src=s.url;if(s.scriptCharset)script.charset=s.scriptCharset;if(!jsonp){var done=false;script.onload=script.onreadystatechange=function(){if(!done&&(!this.readyState||this.readyState=="loaded"||this.readyState=="complete")){done=true;success();complete();head.removeChild(script);}};}head.appendChild(script);return undefined;}var requestDone=false;var xml=window.ActiveXObject?new ActiveXObject("Microsoft.XMLHTTP"):new XMLHttpRequest();xml.open(s.type,s.url,s.async,s.username,s.password);try{if(s.data)xml.setRequestHeader("Content-Type",s.contentType);if(s.ifModified)xml.setRequestHeader("If-Modified-Since",jQuery.lastModified[s.url]||"Thu, 01 Jan 1970 00:00:00 GMT");xml.setRequestHeader("X-Requested-With","XMLHttpRequest");xml.setRequestHeader("Accept",s.dataType&&s.accepts[s.dataType]?s.accepts[s.dataType]+", */*":s.accepts._default);}catch(e){}if(s.beforeSend)s.beforeSend(xml);if(s.global)jQuery.event.trigger("ajaxSend",[xml,s]);var onreadystatechange=function(isTimeout){if(!requestDone&&xml&&(xml.readyState==4||isTimeout=="timeout")){requestDone=true;if(ival){clearInterval(ival);ival=null;}status=isTimeout=="timeout"&&"timeout"||!jQuery.httpSuccess(xml)&&"error"||s.ifModified&&jQuery.httpNotModified(xml,s.url)&&"notmodified"||"success";if(status=="success"){try{data=jQuery.httpData(xml,s.dataType);}catch(e){status="parsererror";}}if(status=="success"){var modRes;try{modRes=xml.getResponseHeader("Last-Modified");}catch(e){}if(s.ifModified&&modRes)jQuery.lastModified[s.url]=modRes;if(!jsonp)success();}else
jQuery.handleError(s,xml,status);complete();if(s.async)xml=null;}};if(s.async){var ival=setInterval(onreadystatechange,13);if(s.timeout>0)setTimeout(function(){if(xml){xml.abort();if(!requestDone)onreadystatechange("timeout");}},s.timeout);}try{xml.send(s.data);}catch(e){jQuery.handleError(s,xml,null,e);}if(!s.async)onreadystatechange();function success(){if(s.success)s.success(data,status);if(s.global)jQuery.event.trigger("ajaxSuccess",[xml,s]);}function complete(){if(s.complete)s.complete(xml,status);if(s.global)jQuery.event.trigger("ajaxComplete",[xml,s]);if(s.global&&!--jQuery.active)jQuery.event.trigger("ajaxStop");}return xml;},handleError:function(s,xml,status,e){if(s.error)s.error(xml,status,e);if(s.global)jQuery.event.trigger("ajaxError",[xml,s,e]);},active:0,httpSuccess:function(r){try{return!r.status&&location.protocol=="file:"||(r.status>=200&&r.status<300)||r.status==304||r.status==1223||jQuery.browser.safari&&r.status==undefined;}catch(e){}return false;},httpNotModified:function(xml,url){try{var xmlRes=xml.getResponseHeader("Last-Modified");return xml.status==304||xmlRes==jQuery.lastModified[url]||jQuery.browser.safari&&xml.status==undefined;}catch(e){}return false;},httpData:function(r,type){var ct=r.getResponseHeader("content-type");var xml=type=="xml"||!type&&ct&&ct.indexOf("xml")>=0;var data=xml?r.responseXML:r.responseText;if(xml&&data.documentElement.tagName=="parsererror")throw"parsererror";if(type=="script")jQuery.globalEval(data);if(type=="json")data=eval("("+data+")");return data;},param:function(a){var s=[];if(a.constructor==Array||a.jquery)jQuery.each(a,function(){s.push(encodeURIComponent(this.name)+"="+encodeURIComponent(this.value));});else
for(var j in a)if(a[j]&&a[j].constructor==Array)jQuery.each(a[j],function(){s.push(encodeURIComponent(j)+"="+encodeURIComponent(this));});else
s.push(encodeURIComponent(j)+"="+encodeURIComponent(a[j]));return s.join("&").replace(/%20/g,"+");}});jQuery.fn.extend({show:function(speed,callback){return speed?this.animate({height:"show",width:"show",opacity:"show"},speed,callback):this.filter(":hidden").each(function(){this.style.display=this.oldblock||"";if(jQuery.css(this,"display")=="none"){var elem=jQuery("<"+this.tagName+" />").appendTo("body");this.style.display=elem.css("display");if(this.style.display=="none")this.style.display="block";elem.remove();}}).end();},hide:function(speed,callback){return speed?this.animate({height:"hide",width:"hide",opacity:"hide"},speed,callback):this.filter(":visible").each(function(){this.oldblock=this.oldblock||jQuery.css(this,"display");this.style.display="none";}).end();},_toggle:jQuery.fn.toggle,toggle:function(fn,fn2){return jQuery.isFunction(fn)&&jQuery.isFunction(fn2)?this._toggle(fn,fn2):fn?this.animate({height:"toggle",width:"toggle",opacity:"toggle"},fn,fn2):this.each(function(){jQuery(this)[jQuery(this).is(":hidden")?"show":"hide"]();});},slideDown:function(speed,callback){return this.animate({height:"show"},speed,callback);},slideUp:function(speed,callback){return this.animate({height:"hide"},speed,callback);},slideToggle:function(speed,callback){return this.animate({height:"toggle"},speed,callback);},fadeIn:function(speed,callback){return this.animate({opacity:"show"},speed,callback);},fadeOut:function(speed,callback){return this.animate({opacity:"hide"},speed,callback);},fadeTo:function(speed,to,callback){return this.animate({opacity:to},speed,callback);},animate:function(prop,speed,easing,callback){var optall=jQuery.speed(speed,easing,callback);return this[optall.queue===false?"each":"queue"](function(){if(this.nodeType!=1)return false;var opt=jQuery.extend({},optall);var hidden=jQuery(this).is(":hidden"),self=this;for(var p in prop){if(prop[p]=="hide"&&hidden||prop[p]=="show"&&!hidden)return jQuery.isFunction(opt.complete)&&opt.complete.apply(this);if(p=="height"||p=="width"){opt.display=jQuery.css(this,"display");opt.overflow=this.style.overflow;}}if(opt.overflow!=null)this.style.overflow="hidden";opt.curAnim=jQuery.extend({},prop);jQuery.each(prop,function(name,val){var e=new jQuery.fx(self,opt,name);if(/toggle|show|hide/.test(val))e[val=="toggle"?hidden?"show":"hide":val](prop);else{var parts=val.toString().match(/^([+-]=)?([\d+-.]+)(.*)$/),start=e.cur(true)||0;if(parts){var end=parseFloat(parts[2]),unit=parts[3]||"px";if(unit!="px"){self.style[name]=(end||1)+unit;start=((end||1)/e.cur(true))*start;self.style[name]=start+unit;}if(parts[1])end=((parts[1]=="-="?-1:1)*end)+start;e.custom(start,end,unit);}else
e.custom(start,val,"");}});return true;});},queue:function(type,fn){if(jQuery.isFunction(type)||(type&&type.constructor==Array)){fn=type;type="fx";}if(!type||(typeof type=="string"&&!fn))return queue(this[0],type);return this.each(function(){if(fn.constructor==Array)queue(this,type,fn);else{queue(this,type).push(fn);if(queue(this,type).length==1)fn.apply(this);}});},stop:function(clearQueue,gotoEnd){var timers=jQuery.timers;if(clearQueue)this.queue([]);this.each(function(){for(var i=timers.length-1;i>=0;i--)if(timers[i].elem==this){if(gotoEnd)timers[i](true);timers.splice(i,1);}});if(!gotoEnd)this.dequeue();return this;}});var queue=function(elem,type,array){if(!elem)return undefined;type=type||"fx";var q=jQuery.data(elem,type+"queue");if(!q||array)q=jQuery.data(elem,type+"queue",array?jQuery.makeArray(array):[]);return q;};jQuery.fn.dequeue=function(type){type=type||"fx";return this.each(function(){var q=queue(this,type);q.shift();if(q.length)q[0].apply(this);});};jQuery.extend({speed:function(speed,easing,fn){var opt=speed&&speed.constructor==Object?speed:{complete:fn||!fn&&easing||jQuery.isFunction(speed)&&speed,duration:speed,easing:fn&&easing||easing&&easing.constructor!=Function&&easing};opt.duration=(opt.duration&&opt.duration.constructor==Number?opt.duration:{slow:600,fast:200}[opt.duration])||400;opt.old=opt.complete;opt.complete=function(){if(opt.queue!==false)jQuery(this).dequeue();if(jQuery.isFunction(opt.old))opt.old.apply(this);};return opt;},easing:{linear:function(p,n,firstNum,diff){return firstNum+diff*p;},swing:function(p,n,firstNum,diff){return((-Math.cos(p*Math.PI)/2)+0.5)*diff+firstNum;}},timers:[],timerId:null,fx:function(elem,options,prop){this.options=options;this.elem=elem;this.prop=prop;if(!options.orig)options.orig={};}});jQuery.fx.prototype={update:function(){if(this.options.step)this.options.step.apply(this.elem,[this.now,this]);(jQuery.fx.step[this.prop]||jQuery.fx.step._default)(this);if(this.prop=="height"||this.prop=="width")this.elem.style.display="block";},cur:function(force){if(this.elem[this.prop]!=null&&this.elem.style[this.prop]==null)return this.elem[this.prop];var r=parseFloat(jQuery.css(this.elem,this.prop,force));return r&&r>-10000?r:parseFloat(jQuery.curCSS(this.elem,this.prop))||0;},custom:function(from,to,unit){this.startTime=(new Date()).getTime();this.start=from;this.end=to;this.unit=unit||this.unit||"px";this.now=this.start;this.pos=this.state=0;this.update();var self=this;function t(gotoEnd){return self.step(gotoEnd);}t.elem=this.elem;jQuery.timers.push(t);if(jQuery.timerId==null){jQuery.timerId=setInterval(function(){var timers=jQuery.timers;for(var i=0;i<timers.length;i++)if(!timers[i]())timers.splice(i--,1);if(!timers.length){clearInterval(jQuery.timerId);jQuery.timerId=null;}},13);}},show:function(){this.options.orig[this.prop]=jQuery.attr(this.elem.style,this.prop);this.options.show=true;this.custom(0,this.cur());if(this.prop=="width"||this.prop=="height")this.elem.style[this.prop]="1px";jQuery(this.elem).show();},hide:function(){this.options.orig[this.prop]=jQuery.attr(this.elem.style,this.prop);this.options.hide=true;this.custom(this.cur(),0);},step:function(gotoEnd){var t=(new Date()).getTime();if(gotoEnd||t>this.options.duration+this.startTime){this.now=this.end;this.pos=this.state=1;this.update();this.options.curAnim[this.prop]=true;var done=true;for(var i in this.options.curAnim)if(this.options.curAnim[i]!==true)done=false;if(done){if(this.options.display!=null){this.elem.style.overflow=this.options.overflow;this.elem.style.display=this.options.display;if(jQuery.css(this.elem,"display")=="none")this.elem.style.display="block";}if(this.options.hide)this.elem.style.display="none";if(this.options.hide||this.options.show)for(var p in this.options.curAnim)jQuery.attr(this.elem.style,p,this.options.orig[p]);}if(done&&jQuery.isFunction(this.options.complete))this.options.complete.apply(this.elem);return false;}else{var n=t-this.startTime;this.state=n/this.options.duration;this.pos=jQuery.easing[this.options.easing||(jQuery.easing.swing?"swing":"linear")](this.state,n,0,1,this.options.duration);this.now=this.start+((this.end-this.start)*this.pos);this.update();}return true;}};jQuery.fx.step={scrollLeft:function(fx){fx.elem.scrollLeft=fx.now;},scrollTop:function(fx){fx.elem.scrollTop=fx.now;},opacity:function(fx){jQuery.attr(fx.elem.style,"opacity",fx.now);},_default:function(fx){fx.elem.style[fx.prop]=fx.now+fx.unit;}};jQuery.fn.offset=function(){var left=0,top=0,elem=this[0],results;if(elem)with(jQuery.browser){var parent=elem.parentNode,offsetChild=elem,offsetParent=elem.offsetParent,doc=elem.ownerDocument,safari2=safari&&parseInt(version)<522&&!/adobeair/i.test(userAgent),fixed=jQuery.css(elem,"position")=="fixed";if(elem.getBoundingClientRect){var box=elem.getBoundingClientRect();add(box.left+Math.max(doc.documentElement.scrollLeft,doc.body.scrollLeft),box.top+Math.max(doc.documentElement.scrollTop,doc.body.scrollTop));add(-doc.documentElement.clientLeft,-doc.documentElement.clientTop);}else{add(elem.offsetLeft,elem.offsetTop);while(offsetParent){add(offsetParent.offsetLeft,offsetParent.offsetTop);if(mozilla&&!/^t(able|d|h)$/i.test(offsetParent.tagName)||safari&&!safari2)border(offsetParent);if(!fixed&&jQuery.css(offsetParent,"position")=="fixed")fixed=true;offsetChild=/^body$/i.test(offsetParent.tagName)?offsetChild:offsetParent;offsetParent=offsetParent.offsetParent;}while(parent&&parent.tagName&&!/^body|html$/i.test(parent.tagName)){if(!/^inline|table.*$/i.test(jQuery.css(parent,"display")))add(-parent.scrollLeft,-parent.scrollTop);if(mozilla&&jQuery.css(parent,"overflow")!="visible")border(parent);parent=parent.parentNode;}if((safari2&&(fixed||jQuery.css(offsetChild,"position")=="absolute"))||(mozilla&&jQuery.css(offsetChild,"position")!="absolute"))add(-doc.body.offsetLeft,-doc.body.offsetTop);if(fixed)add(Math.max(doc.documentElement.scrollLeft,doc.body.scrollLeft),Math.max(doc.documentElement.scrollTop,doc.body.scrollTop));}results={top:top,left:left};}function border(elem){add(jQuery.curCSS(elem,"borderLeftWidth",true),jQuery.curCSS(elem,"borderTopWidth",true));}function add(l,t){left+=parseInt(l)||0;top+=parseInt(t)||0;}return results;};})();//Accordion Content script: By Dynamic Drive, at http://www.dynamicdrive.com
//Created: Jan 7th, 08'
var $j = jQuery.noConflict()

var ddaccordion={
	
	contentclassname:{}, //object to store corresponding contentclass name based on headerclass

	expandone:function(headerclass, selected){ //PUBLIC function to expand a particular header
		this.toggleone(headerclass, selected, "expand")
	},

	collapseone:function(headerclass, selected){ //PUBLIC function to collapse a particular header
		this.toggleone(headerclass, selected, "collapse")
	},

	expandall:function(headerclass){ //PUBLIC function to expand all headers based on their shared CSS classname
		var $jheaders=$j('.'+headerclass)
		$j('.'+this.contentclassname[headerclass]+':hidden').each(function(){
			$jheaders.eq(parseInt($j(this).attr('contentindex'))).click()
		})
	},

	collapseall:function(headerclass){ //PUBLIC function to collapse all headers based on their shared CSS classname
		var $jheaders=$j('.'+headerclass)
		$j('.'+this.contentclassname[headerclass]+':visible').each(function(){
			$jheaders.eq(parseInt($j(this).attr('contentindex'))).click()
		})
	},

	toggleone:function(headerclass, selected, optstate){ //PUBLIC function to expand/ collapse a particular header
		var $jtargetHeader=$j('.'+headerclass).eq(selected)
		var $jsubcontent=$j('.'+this.contentclassname[headerclass]).eq(selected)
		if (typeof optstate=="undefined" || optstate=="expand" && $jsubcontent.is(":hidden") || optstate=="collapse" && $jsubcontent.is(":visible"))
			$jtargetHeader.click()
	},

	expandit:function($jtargetHeader, $jtargetContent, config){
		$jtargetContent.slideDown(config.animatespeed)
		this.transformHeader($jtargetHeader, config, "expand")
	},

	collapseit:function($jtargetHeader, $jtargetContent, config){
		$jtargetContent.slideUp(config.animatespeed)
		this.transformHeader($jtargetHeader, config, "collapse")
	},

	transformHeader:function($jtargetHeader, config, state){
		$jtargetHeader.addClass((state=="expand")? config.cssclass.expand : config.cssclass.collapse) //alternate btw "expand" and "collapse" CSS classes
		.removeClass((state=="expand")? config.cssclass.collapse : config.cssclass.expand)
		if (config.htmlsetting.location=='src'){ //Change header image (assuming header is an image)?
			$jtargetHeader=($jtargetHeader.is("img"))? $jtargetHeader : $jtargetHeader.find('img').eq(0) //Set target to either header itself, or first image within header
			$jtargetHeader.attr('src', (state=="expand")? config.htmlsetting.expand : config.htmlsetting.collapse) //change header image
		}
		else if (config.htmlsetting.location=="prefix") //if change "prefix" HTML, locate dynamically added ".accordprefix" span tag and change it
			$jtargetHeader.find('.accordprefix').html((state=="expand")? config.htmlsetting.expand : config.htmlsetting.collapse)
		else if (config.htmlsetting.location=="suffix")
			$jtargetHeader.find('.accordsuffix').html((state=="expand")? config.htmlsetting.expand : config.htmlsetting.collapse)
	},

	getCookie:function(Name){ 
		var re=new RegExp(Name+"=[^;]+", "i") //construct RE to search for target name/value pair
		if (document.cookie.match(re)) //if cookie found
			return document.cookie.match(re)[0].split("=")[1] //return its value
		return null
	},

	setCookie:function(name, value){
		document.cookie = name + "=" + value
	},

	init:function(config){
	document.write('<style type="text/css">\n')
	document.write('.'+config.contentclass+'{display: none}\n') //generate CSS to hide contents
	document.write('<\/style>')
	$j(document).ready(function(){
		if ($j('.'+config["headerclass"]) == null) return;
		
		ddaccordion.contentclassname[config.headerclass]=config.contentclass //remember contentclass name based on headerclass
		config.cssclass={collapse: config.toggleclass[0], expand: config.toggleclass[1]} //store expand and contract CSS classes as object properties
		config.htmlsetting={location: config.togglehtml[0], collapse: config.togglehtml[1], expand: config.togglehtml[2]} //store HTML settings as object properties
		var lastexpanded={} //object to hold reference to last expanded header and content (jquery objects)
		var expandedindices=(config.persiststate)? ddaccordion.getCookie(config.headerclass) : config.defaultexpanded
		expandedindices=(typeof expandedindices=='string')? expandedindices.replace(/c/ig, '').split(',') : config.defaultexpanded //test for valid cookie ('string'), otherwise (null, or 1st page load), default to defaultexpanded setting
		var $jsubcontents=$j('.'+config["contentclass"])
		if (config["collapseprev"] && expandedindices.length>1)
			expandedindices=[expandedindices.pop()] //return last array element as an array (for sake of jQuery.inArray())
		$j('.'+config["headerclass"]).each(function(index){ //loop through all headers
			if (/(prefix)|(suffix)/i.test(config.htmlsetting.location) && $j(this).html()!=""){ //add a SPAN element to header depending on user setting and if header is a container tag
				$j('<span class="accordprefix"></span>').prependTo(this)
				$j('<span class="accordsuffix"></span>').appendTo(this)
			}
			$j(this).attr('headerindex', index+'h') //store position of this header relative to its peers
			$jsubcontents.eq(index).attr('contentindex', index+'c') //store position of this content relative to its peers
			var $jsubcontent=$jsubcontents.eq(index)
			if (jQuery.inArray(index, expandedindices)!=-1){ //check for headers that should be expanded automatically
				if (config.animatedefault==false)
					$jsubcontent.show()
				ddaccordion.expandit($j(this), $jsubcontent, config)
				lastexpanded={$jheader:$j(this), $jcontent:$jsubcontent}
			}  //end check
			else{
				$jsubcontent.hide()
				ddaccordion.transformHeader($j(this), config, "collapse")
			}
		})
		$j('.'+config["headerclass"]).click(function(){ //assign behavior when headers are clicked on
				var $jsubcontent=$jsubcontents.eq(parseInt($j(this).attr('headerindex'))) //get subcontent that should be expanded/collapsed
				if ($jsubcontent.css('display')=="none"){
					ddaccordion.expandit($j(this), $jsubcontent, config)
					if (config["collapseprev"] && lastexpanded.$jheader && $j(this).get(0)!=lastexpanded.$jheader.get(0)){ //collapse previous content?
						ddaccordion.collapseit(lastexpanded.$jheader, lastexpanded.$jcontent, config)
					}
					lastexpanded={$jheader:$j(this), $jcontent:$jsubcontent}
				}
				else{
					ddaccordion.collapseit($j(this), $jsubcontent, config)
				}
				return false
 	})
		$j(window).bind('unload', function(){ //clean up and persist on page unload
			$j('.'+config["headerclass"]).unbind('click')
			var expandedindices=[]
			$j('.'+config["contentclass"]+":visible").each(function(index){ //get indices of expanded headers
				expandedindices.push($j(this).attr('contentindex'))
			})
			if (config.persiststate==true){ //persist state?
				expandedindices=(expandedindices.length==0)? '-1c' : expandedindices //No contents expanded, indicate that with dummy '-1c' value?
				ddaccordion.setCookie(config.headerclass, expandedindices)
			}
		})
	})
	}
}// ===================================================================
// Author: Matt Kruse <matt@mattkruse.com>
// WWW: http://www.mattkruse.com/
//
// NOTICE: You may use this code for any purpose, commercial or
// private, without any further permission from the author. You may
// remove this notice from your final code if you wish, however it is
// appreciated by the author if at least my web site address is kept.
//
// You may *NOT* re-distribute this code in any way except through its
// use. That means, you can include it in your product, or your web
// site, or any other form where the code is actually being used. You
// may not put the plain javascript up on your site for download or
// include it in your javascript libraries for download. 
// If you wish to share this code with others, please just point them
// to the URL instead.
// Please DO NOT link directly to my .js files from your site. Copy
// the files to your server and use them there. Thank you.
// ===================================================================

// HISTORY
// ------------------------------------------------------------------
// December 9, 2003: Added script to the Javascript Toolbox
// December 10, 2003: Added the preProcessTrees variable to allow user
//      to turn off automatic conversion of UL's onLoad
// March 1, 2004: Changed it so if a <li> has a class already attached
//      to it, that class won't be erased when initialized. This allows
//      you to set the state of the tree when painting the page simply
//      by setting some <li>'s class name as being "liOpen" (see example)
/*
This code is inspired by and extended from Stuart Langridge's aqlist code:
		http://www.kryogenix.org/code/browser/aqlists/
		Stuart Langridge, November 2002
		sil@kryogenix.org
		Inspired by Aaron's labels.js (http://youngpup.net/demos/labels/) 
		and Dave Lindquist's menuDropDown.js (http://www.gazingus.org/dhtml/?id=109)
*/

// Automatically attach a listener to the window onload, to convert the trees
//addEvent(window,"load",convertTrees);

// Utility function to add an event listener
function addEvent(o,e,f){
	if (o.addEventListener){ o.addEventListener(e,f,true); return true; }
	else if (o.attachEvent){ return o.attachEvent("on"+e,f); }
	else { return false; }
}

// utility function to set a global variable if it is not already set
function setDefault(name,val) {
	if (typeof(window[name])=="undefined" || window[name]==null) {
		window[name]=val;
	}
}

// Full expands a tree with a given ID
function expandTree(treeId) {
	var ul = document.getElementById(treeId);
	if (ul == null) { return false; }
	expandCollapseList(ul,nodeOpenClass);
}

// Fully collapses a tree with a given ID
function collapseTree(treeId) {
	var ul = document.getElementById(treeId);
	if (ul == null) { return false; }
	expandCollapseList(ul,nodeClosedClass);
}

// Expands enough nodes to expose an LI with a given ID
function expandToItem(treeId,itemId) {
	var ul = document.getElementById(treeId);
	if (ul == null) { return false; }
	var ret = expandCollapseList(ul,nodeOpenClass,itemId);
	if (ret) {
		var o = document.getElementById(itemId);
		if (o.scrollIntoView) {
			o.scrollIntoView(false);
		}
	}
}

// Performs 3 functions:
// a) Expand all nodes
// b) Collapse all nodes
// c) Expand all nodes to reach a certain ID
function expandCollapseList(ul,cName,itemId) {
	if (!ul.childNodes || ul.childNodes.length==0) { return false; }
	// Iterate LIs
	for (var itemi=0;itemi<ul.childNodes.length;itemi++) {
		var item = ul.childNodes[itemi];
		if (itemId!=null && item.id==itemId) { return true; }
		if (item.nodeName == "LI") {
			// Iterate things in this LI
			var subLists = false;
			for (var sitemi=0;sitemi<item.childNodes.length;sitemi++) {
				var sitem = item.childNodes[sitemi];
				if (sitem.nodeName=="UL") {
					subLists = true;
					var ret = expandCollapseList(sitem,cName,itemId);
					if (itemId!=null && ret) {
						item.className=cName;
						return true;
					}
				}
			}
			if (subLists && itemId==null) {
				item.className = cName;
			}
		}
	}
}

// Search the document for UL elements with the correct CLASS name, then process them
function convertTrees() {
	setDefault("treeClass","mktree");
	setDefault("nodeClosedClass","liClosed");
	setDefault("nodeOpenClass","liOpen");
	setDefault("nodeBulletClass","liBullet");
	setDefault("nodeLinkClass","bullet");
	setDefault("preProcessTrees",true);
	if (preProcessTrees) {
		if (!document.createElement) { return; } // Without createElement, we can't do anything
		uls = document.getElementsByTagName("ul");
		for (var uli=0;uli<uls.length;uli++) {
			var ul=uls[uli];
			if (ul.nodeName=="UL" && ul.className==treeClass) {
				processList(ul);
			}
		}
	}
}

// Process a UL tag and all its children, to convert to a tree
function processList(ul) {
	if (!ul.childNodes || ul.childNodes.length==0) { return; }
	// Iterate LIs
	for (var itemi=0;itemi<ul.childNodes.length;itemi++) {
		var item = ul.childNodes[itemi];
		if (item.nodeName == "LI") {
			// Iterate things in this LI
			var subLists = false;
			for (var sitemi=0;sitemi<item.childNodes.length;sitemi++) {
				var sitem = item.childNodes[sitemi];
				if (sitem.nodeName=="UL") {
					subLists = true;
					processList(sitem);
				}
			}
			var s= document.createElement("SPAN");
			var t= '\u00A0'; // &nbsp;
			s.className = nodeLinkClass;
			if (subLists) {
				// This LI has UL's in it, so it's a +/- node
				if (item.className==null || item.className=="") {
					item.className = nodeClosedClass;
				}
				// If it's just text, make the text work as the link also
				if (item.firstChild.nodeName=="#text") {
					t = t+item.firstChild.nodeValue;
					item.removeChild(item.firstChild);
				}
				s.onclick = function () {
					this.parentNode.className = (this.parentNode.className==nodeOpenClass) ? nodeClosedClass : nodeOpenClass;
					return false;
				}
			}
			else {
				// No sublists, so it's just a bullet node
				item.className = nodeBulletClass;
				s.onclick = function () { return false; }
			}
			s.appendChild(document.createTextNode(t));
			item.insertBefore(s,item.firstChild);
		}
	}
}
/*  Prototype JavaScript framework, version 1.5.0
 *  (c) 2005-2007 Sam Stephenson
 *
 *  Prototype is freely distributable under the terms of an MIT-style license.
 *  For details, see the Prototype web site: http://prototype.conio.net/
 *
/*--------------------------------------------------------------------------*/

var Prototype = {
  Version: '1.5.0',
  BrowserFeatures: {
    XPath: !!document.evaluate
  },

  ScriptFragment: '(?:<script.*?>)((\n|\r|.)*?)(?:<\/script>)',
  emptyFunction: function() {},
  K: function(x) { return x }
}

var Class = {
  create: function() {
    return function() {
      this.initialize.apply(this, arguments);
    }
  }
}

var Abstract = new Object();

Object.extend = function(destination, source) {
  for (var property in source) {
    destination[property] = source[property];
  }
  return destination;
}

Object.extend(Object, {
  inspect: function(object) {
    try {
      if (object === undefined) return 'undefined';
      if (object === null) return 'null';
      return object.inspect ? object.inspect() : object.toString();
    } catch (e) {
      if (e instanceof RangeError) return '...';
      throw e;
    }
  },

  keys: function(object) {
    var keys = [];
    for (var property in object)
      keys.push(property);
    return keys;
  },

  values: function(object) {
    var values = [];
    for (var property in object)
      values.push(object[property]);
    return values;
  },

  clone: function(object) {
    return Object.extend({}, object);
  }
});

Function.prototype.bind = function() {
  var __method = this, args = $A(arguments), object = args.shift();
  return function() {
    return __method.apply(object, args.concat($A(arguments)));
  }
}

Function.prototype.bindAsEventListener = function(object) {
  var __method = this, args = $A(arguments), object = args.shift();
  return function(event) {
    return __method.apply(object, [( event || window.event)].concat(args).concat($A(arguments)));
  }
}

Object.extend(Number.prototype, {
  toColorPart: function() {
    var digits = this.toString(16);
    if (this < 16) return '0' + digits;
    return digits;
  },

  succ: function() {
    return this + 1;
  },

  times: function(iterator) {
    $R(0, this, true).each(iterator);
    return this;
  }
});

var Try = {
  these: function() {
    var returnValue;

    for (var i = 0, length = arguments.length; i < length; i++) {
      var lambda = arguments[i];
      try {
        returnValue = lambda();
        break;
      } catch (e) {}
    }

    return returnValue;
  }
}

/*--------------------------------------------------------------------------*/

var PeriodicalExecuter = Class.create();
PeriodicalExecuter.prototype = {
  initialize: function(callback, frequency) {
    this.callback = callback;
    this.frequency = frequency;
    this.currentlyExecuting = false;

    this.registerCallback();
  },

  registerCallback: function() {
    this.timer = setInterval(this.onTimerEvent.bind(this), this.frequency * 1000);
  },

  stop: function() {
    if (!this.timer) return;
    clearInterval(this.timer);
    this.timer = null;
  },

  onTimerEvent: function() {
    if (!this.currentlyExecuting) {
      try {
        this.currentlyExecuting = true;
        this.callback(this);
      } finally {
        this.currentlyExecuting = false;
      }
    }
  }
}
String.interpret = function(value){
  return value == null ? '' : String(value);
}

Object.extend(String.prototype, {
  gsub: function(pattern, replacement) {
    var result = '', source = this, match;
    replacement = arguments.callee.prepareReplacement(replacement);

    while (source.length > 0) {
      if (match = source.match(pattern)) {
        result += source.slice(0, match.index);
        result += String.interpret(replacement(match));
        source  = source.slice(match.index + match[0].length);
      } else {
        result += source, source = '';
      }
    }
    return result;
  },

  sub: function(pattern, replacement, count) {
    replacement = this.gsub.prepareReplacement(replacement);
    count = count === undefined ? 1 : count;

    return this.gsub(pattern, function(match) {
      if (--count < 0) return match[0];
      return replacement(match);
    });
  },

  scan: function(pattern, iterator) {
    this.gsub(pattern, iterator);
    return this;
  },

  truncate: function(length, truncation) {
    length = length || 30;
    truncation = truncation === undefined ? '...' : truncation;
    return this.length > length ?
      this.slice(0, length - truncation.length) + truncation : this;
  },

  strip: function() {
    return this.replace(/^\s+/, '').replace(/\s+$/, '');
  },

  stripTags: function() {
    return this.replace(/<\/?[^>]+>/gi, '');
  },

  stripScripts: function() {
    return this.replace(new RegExp(Prototype.ScriptFragment, 'img'), '');
  },

  extractScripts: function() {
    var matchAll = new RegExp(Prototype.ScriptFragment, 'img');
    var matchOne = new RegExp(Prototype.ScriptFragment, 'im');
    return (this.match(matchAll) || []).map(function(scriptTag) {
      return (scriptTag.match(matchOne) || ['', ''])[1];
    });
  },

  evalScripts: function() {
    return this.extractScripts().map(function(script) { return eval(script) });
  },

  escapeHTML: function() {
    var div = document.createElement('div');
    var text = document.createTextNode(this);
    div.appendChild(text);
    return div.innerHTML;
  },

  unescapeHTML: function() {
    var div = document.createElement('div');
    div.innerHTML = this.stripTags();
    return div.childNodes[0] ? (div.childNodes.length > 1 ?
      $A(div.childNodes).inject('',function(memo,node){ return memo+node.nodeValue }) :
      div.childNodes[0].nodeValue) : '';
  },

  toQueryParams: function(separator) {
    var match = this.strip().match(/([^?#]*)(#.*)?$/);
    if (!match) return {};

    return match[1].split(separator || '&').inject({}, function(hash, pair) {
      if ((pair = pair.split('='))[0]) {
        var name = decodeURIComponent(pair[0]);
        var value = pair[1] ? decodeURIComponent(pair[1]) : undefined;

        if (hash[name] !== undefined) {
          if (hash[name].constructor != Array)
            hash[name] = [hash[name]];
          if (value) hash[name].push(value);
        }
        else hash[name] = value;
      }
      return hash;
    });
  },

  toArray: function() {
    return this.split('');
  },

  succ: function() {
    return this.slice(0, this.length - 1) +
      String.fromCharCode(this.charCodeAt(this.length - 1) + 1);
  },

  camelize: function() {
    var parts = this.split('-'), len = parts.length;
    if (len == 1) return parts[0];

    var camelized = this.charAt(0) == '-'
      ? parts[0].charAt(0).toUpperCase() + parts[0].substring(1)
      : parts[0];

    for (var i = 1; i < len; i++)
      camelized += parts[i].charAt(0).toUpperCase() + parts[i].substring(1);

    return camelized;
  },

  capitalize: function(){
    return this.charAt(0).toUpperCase() + this.substring(1).toLowerCase();
  },

  underscore: function() {
    return this.gsub(/::/, '/').gsub(/([A-Z]+)([A-Z][a-z])/,'#{1}_#{2}').gsub(/([a-z\d])([A-Z])/,'#{1}_#{2}').gsub(/-/,'_').toLowerCase();
  },

  dasherize: function() {
    return this.gsub(/_/,'-');
  },

  inspect: function(useDoubleQuotes) {
    var escapedString = this.replace(/\\/g, '\\\\');
    if (useDoubleQuotes)
      return '"' + escapedString.replace(/"/g, '\\"') + '"';
    else
      return "'" + escapedString.replace(/'/g, '\\\'') + "'";
  }
});

String.prototype.gsub.prepareReplacement = function(replacement) {
  if (typeof replacement == 'function') return replacement;
  var template = new Template(replacement);
  return function(match) { return template.evaluate(match) };
}

String.prototype.parseQuery = String.prototype.toQueryParams;

var Template = Class.create();
Template.Pattern = /(^|.|\r|\n)(#\{(.*?)\})/;
Template.prototype = {
  initialize: function(template, pattern) {
    this.template = template.toString();
    this.pattern  = pattern || Template.Pattern;
  },

  evaluate: function(object) {
    return this.template.gsub(this.pattern, function(match) {
      var before = match[1];
      if (before == '\\') return match[2];
      return before + String.interpret(object[match[3]]);
    });
  }
}

var $break    = new Object();
var $continue = new Object();

var Enumerable = {
  each: function(iterator) {
    var index = 0;
    try {
      this._each(function(value) {
        try {
          iterator(value, index++);
        } catch (e) {
          if (e != $continue) throw e;
        }
      });
    } catch (e) {
      if (e != $break) throw e;
    }
    return this;
  },

  eachSlice: function(number, iterator) {
    var index = -number, slices = [], array = this.toArray();
    while ((index += number) < array.length)
      slices.push(array.slice(index, index+number));
    return slices.map(iterator);
  },

  all: function(iterator) {
    var result = true;
    this.each(function(value, index) {
      result = result && !!(iterator || Prototype.K)(value, index);
      if (!result) throw $break;
    });
    return result;
  },

  any: function(iterator) {
    var result = false;
    this.each(function(value, index) {
      if (result = !!(iterator || Prototype.K)(value, index))
        throw $break;
    });
    return result;
  },

  collect: function(iterator) {
    var results = [];
    this.each(function(value, index) {
      results.push((iterator || Prototype.K)(value, index));
    });
    return results;
  },

  detect: function(iterator) {
    var result;
    this.each(function(value, index) {
      if (iterator(value, index)) {
        result = value;
        throw $break;
      }
    });
    return result;
  },

  findAll: function(iterator) {
    var results = [];
    this.each(function(value, index) {
      if (iterator(value, index))
        results.push(value);
    });
    return results;
  },

  grep: function(pattern, iterator) {
    var results = [];
    this.each(function(value, index) {
      var stringValue = value.toString();
      if (stringValue.match(pattern))
        results.push((iterator || Prototype.K)(value, index));
    })
    return results;
  },

  include: function(object) {
    var found = false;
    this.each(function(value) {
      if (value == object) {
        found = true;
        throw $break;
      }
    });
    return found;
  },

  inGroupsOf: function(number, fillWith) {
    fillWith = fillWith === undefined ? null : fillWith;
    return this.eachSlice(number, function(slice) {
      while(slice.length < number) slice.push(fillWith);
      return slice;
    });
  },

  inject: function(memo, iterator) {
    this.each(function(value, index) {
      memo = iterator(memo, value, index);
    });
    return memo;
  },

  invoke: function(method) {
    var args = $A(arguments).slice(1);
    return this.map(function(value) {
      return value[method].apply(value, args);
    });
  },

  max: function(iterator) {
    var result;
    this.each(function(value, index) {
      value = (iterator || Prototype.K)(value, index);
      if (result == undefined || value >= result)
        result = value;
    });
    return result;
  },

  min: function(iterator) {
    var result;
    this.each(function(value, index) {
      value = (iterator || Prototype.K)(value, index);
      if (result == undefined || value < result)
        result = value;
    });
    return result;
  },

  partition: function(iterator) {
    var trues = [], falses = [];
    this.each(function(value, index) {
      ((iterator || Prototype.K)(value, index) ?
        trues : falses).push(value);
    });
    return [trues, falses];
  },

  pluck: function(property) {
    var results = [];
    this.each(function(value, index) {
      results.push(value[property]);
    });
    return results;
  },

  reject: function(iterator) {
    var results = [];
    this.each(function(value, index) {
      if (!iterator(value, index))
        results.push(value);
    });
    return results;
  },

  sortBy: function(iterator) {
    return this.map(function(value, index) {
      return {value: value, criteria: iterator(value, index)};
    }).sort(function(left, right) {
      var a = left.criteria, b = right.criteria;
      return a < b ? -1 : a > b ? 1 : 0;
    }).pluck('value');
  },

  toArray: function() {
    return this.map();
  },

  zip: function() {
    var iterator = Prototype.K, args = $A(arguments);
    if (typeof args.last() == 'function')
      iterator = args.pop();

    var collections = [this].concat(args).map($A);
    return this.map(function(value, index) {
      return iterator(collections.pluck(index));
    });
  },

  size: function() {
    return this.toArray().length;
  },

  inspect: function() {
    return '#<Enumerable:' + this.toArray().inspect() + '>';
  }
}

Object.extend(Enumerable, {
  map:     Enumerable.collect,
  find:    Enumerable.detect,
  select:  Enumerable.findAll,
  member:  Enumerable.include,
  entries: Enumerable.toArray
});
var $A = Array.from = function(iterable) {
  if (!iterable) return [];
  if (iterable.toArray) {
    return iterable.toArray();
  } else {
    var results = [];
    for (var i = 0, length = iterable.length; i < length; i++)
      results.push(iterable[i]);
    return results;
  }
}

Object.extend(Array.prototype, Enumerable);

if (!Array.prototype._reverse)
  Array.prototype._reverse = Array.prototype.reverse;

Object.extend(Array.prototype, {
  _each: function(iterator) {
    for (var i = 0, length = this.length; i < length; i++)
      iterator(this[i]);
  },

  clear: function() {
    this.length = 0;
    return this;
  },

  first: function() {
    return this[0];
  },

  last: function() {
    return this[this.length - 1];
  },

  compact: function() {
    return this.select(function(value) {
      return value != null;
    });
  },

  flatten: function() {
    return this.inject([], function(array, value) {
      return array.concat(value && value.constructor == Array ?
        value.flatten() : [value]);
    });
  },

  without: function() {
    var values = $A(arguments);
    return this.select(function(value) {
      return !values.include(value);
    });
  },

  indexOf: function(object) {
    for (var i = 0, length = this.length; i < length; i++)
      if (this[i] == object) return i;
    return -1;
  },

  reverse: function(inline) {
    return (inline !== false ? this : this.toArray())._reverse();
  },

  reduce: function() {
    return this.length > 1 ? this : this[0];
  },

  uniq: function() {
    return this.inject([], function(array, value) {
      return array.include(value) ? array : array.concat([value]);
    });
  },

  clone: function() {
    return [].concat(this);
  },

  size: function() {
    return this.length;
  },

  inspect: function() {
    return '[' + this.map(Object.inspect).join(', ') + ']';
  }
});

Array.prototype.toArray = Array.prototype.clone;

function $w(string){
  string = string.strip();
  return string ? string.split(/\s+/) : [];
}

if(window.opera){
  Array.prototype.concat = function(){
    var array = [];
    for(var i = 0, length = this.length; i < length; i++) array.push(this[i]);
    for(var i = 0, length = arguments.length; i < length; i++) {
      if(arguments[i].constructor == Array) {
        for(var j = 0, arrayLength = arguments[i].length; j < arrayLength; j++)
          array.push(arguments[i][j]);
      } else {
        array.push(arguments[i]);
      }
    }
    return array;
  }
}
var Hash = function(obj) {
  Object.extend(this, obj || {});
};

Object.extend(Hash, {
  toQueryString: function(obj) {
    var parts = [];

	  this.prototype._each.call(obj, function(pair) {
      if (!pair.key) return;

      if (pair.value && pair.value.constructor == Array) {
        var values = pair.value.compact();
        if (values.length < 2) pair.value = values.reduce();
        else {
        	key = encodeURIComponent(pair.key);
          values.each(function(value) {
            value = value != undefined ? encodeURIComponent(value) : '';
            parts.push(key + '=' + encodeURIComponent(value));
          });
          return;
        }
      }
      if (pair.value == undefined) pair[1] = '';
      parts.push(pair.map(encodeURIComponent).join('='));
	  });

    return parts.join('&');
  }
});

Object.extend(Hash.prototype, Enumerable);
Object.extend(Hash.prototype, {
  _each: function(iterator) {
    for (var key in this) {
      var value = this[key];
      if (value && value == Hash.prototype[key]) continue;

      var pair = [key, value];
      pair.key = key;
      pair.value = value;
      iterator(pair);
    }
  },

  keys: function() {
    return this.pluck('key');
  },

  values: function() {
    return this.pluck('value');
  },

  merge: function(hash) {
    return $H(hash).inject(this, function(mergedHash, pair) {
      mergedHash[pair.key] = pair.value;
      return mergedHash;
    });
  },

  remove: function() {
    var result;
    for(var i = 0, length = arguments.length; i < length; i++) {
      var value = this[arguments[i]];
      if (value !== undefined){
        if (result === undefined) result = value;
        else {
          if (result.constructor != Array) result = [result];
          result.push(value)
        }
      }
      delete this[arguments[i]];
    }
    return result;
  },

  toQueryString: function() {
    return Hash.toQueryString(this);
  },

  inspect: function() {
    return '#<Hash:{' + this.map(function(pair) {
      return pair.map(Object.inspect).join(': ');
    }).join(', ') + '}>';
  }
});

function $H(object) {
  if (object && object.constructor == Hash) return object;
  return new Hash(object);
};
ObjectRange = Class.create();
Object.extend(ObjectRange.prototype, Enumerable);
Object.extend(ObjectRange.prototype, {
  initialize: function(start, end, exclusive) {
    this.start = start;
    this.end = end;
    this.exclusive = exclusive;
  },

  _each: function(iterator) {
    var value = this.start;
    while (this.include(value)) {
      iterator(value);
      value = value.succ();
    }
  },

  include: function(value) {
    if (value < this.start)
      return false;
    if (this.exclusive)
      return value < this.end;
    return value <= this.end;
  }
});

var $R = function(start, end, exclusive) {
  return new ObjectRange(start, end, exclusive);
}

var Ajax = {
  getTransport: function() {
    return Try.these(
      function() {return new XMLHttpRequest()},
      function() {return new ActiveXObject('Msxml2.XMLHTTP')},
      function() {return new ActiveXObject('Microsoft.XMLHTTP')}
    ) || false;
  },

  activeRequestCount: 0
}

Ajax.Responders = {
  responders: [],

  _each: function(iterator) {
    this.responders._each(iterator);
  },

  register: function(responder) {
    if (!this.include(responder))
      this.responders.push(responder);
  },

  unregister: function(responder) {
    this.responders = this.responders.without(responder);
  },

  dispatch: function(callback, request, transport, json) {
    this.each(function(responder) {
      if (typeof responder[callback] == 'function') {
        try {
          responder[callback].apply(responder, [request, transport, json]);
        } catch (e) {}
      }
    });
  }
};

Object.extend(Ajax.Responders, Enumerable);

Ajax.Responders.register({
  onCreate: function() {
    Ajax.activeRequestCount++;
  },
  onComplete: function() {
    Ajax.activeRequestCount--;
  }
});

Ajax.Base = function() {};
Ajax.Base.prototype = {
  setOptions: function(options) {
    this.options = {
      method:       'post',
      asynchronous: true,
      contentType:  'application/x-www-form-urlencoded',
      encoding:     'UTF-8',
      parameters:   ''
    }
    Object.extend(this.options, options || {});

    this.options.method = this.options.method.toLowerCase();
    if (typeof this.options.parameters == 'string')
      this.options.parameters = this.options.parameters.toQueryParams();
  }
}

Ajax.Request = Class.create();
Ajax.Request.Events =
  ['Uninitialized', 'Loading', 'Loaded', 'Interactive', 'Complete'];

Ajax.Request.prototype = Object.extend(new Ajax.Base(), {
  _complete: false,

  initialize: function(url, options) {
    this.transport = Ajax.getTransport();
    this.setOptions(options);
    this.request(url);
  },

  request: function(url) {
    this.url = url;
    this.method = this.options.method;
    var params = this.options.parameters;

    if (!['get', 'post'].include(this.method)) {
      // simulate other verbs over post
      params['_method'] = this.method;
      this.method = 'post';
    }

    params = Hash.toQueryString(params);
    if (params && /Konqueror|Safari|KHTML/.test(navigator.userAgent)) params += '&_='

    // when GET, append parameters to URL
    if (this.method == 'get' && params)
      this.url += (this.url.indexOf('?') > -1 ? '&' : '?') + params;

    try {
      Ajax.Responders.dispatch('onCreate', this, this.transport);

      this.transport.open(this.method.toUpperCase(), this.url,
        this.options.asynchronous);

      if (this.options.asynchronous)
        setTimeout(function() { this.respondToReadyState(1) }.bind(this), 10);

      this.transport.onreadystatechange = this.onStateChange.bind(this);
      this.setRequestHeaders();

      var body = this.method == 'post' ? (this.options.postBody || params) : null;

      this.transport.send(body);

      /* Force Firefox to handle ready state 4 for synchronous requests */
      if (!this.options.asynchronous && this.transport.overrideMimeType)
        this.onStateChange();

    }
    catch (e) {
      this.dispatchException(e);
    }
  },

  onStateChange: function() {
    var readyState = this.transport.readyState;
    if (readyState > 1 && !((readyState == 4) && this._complete))
      this.respondToReadyState(this.transport.readyState);
  },

  setRequestHeaders: function() {
    var headers = {
      'X-Requested-With': 'XMLHttpRequest',
      'X-Prototype-Version': Prototype.Version,
      'Accept': 'text/javascript, text/html, application/xml, text/xml, */*'
    };

    if (this.method == 'post') {
      headers['Content-type'] = this.options.contentType +
        (this.options.encoding ? '; charset=' + this.options.encoding : '');

      /* Force "Connection: close" for older Mozilla browsers to work
       * around a bug where XMLHttpRequest sends an incorrect
       * Content-length header. See Mozilla Bugzilla #246651.
       */
      if (this.transport.overrideMimeType &&
          (navigator.userAgent.match(/Gecko\/(\d{4})/) || [0,2005])[1] < 2005)
            headers['Connection'] = 'close';
    }

    // user-defined headers
    if (typeof this.options.requestHeaders == 'object') {
      var extras = this.options.requestHeaders;

      if (typeof extras.push == 'function')
        for (var i = 0, length = extras.length; i < length; i += 2)
          headers[extras[i]] = extras[i+1];
      else
        $H(extras).each(function(pair) { headers[pair.key] = pair.value });
    }

    for (var name in headers)
      this.transport.setRequestHeader(name, headers[name]);
  },

  success: function() {
    return !this.transport.status
        || (this.transport.status >= 200 && this.transport.status < 300);
  },

  respondToReadyState: function(readyState) {
    var state = Ajax.Request.Events[readyState];
    var transport = this.transport, json = this.evalJSON();

    if (state == 'Complete') {
      try {
        this._complete = true;
        (this.options['on' + this.transport.status]
         || this.options['on' + (this.success() ? 'Success' : 'Failure')]
         || Prototype.emptyFunction)(transport, json);
      } catch (e) {
        this.dispatchException(e);
      }

      if ((this.getHeader('Content-type') || 'text/javascript').strip().
        match(/^(text|application)\/(x-)?(java|ecma)script(;.*)?$/i))
          this.evalResponse();
    }

    try {
      (this.options['on' + state] || Prototype.emptyFunction)(transport, json);
      Ajax.Responders.dispatch('on' + state, this, transport, json);
    } catch (e) {
      this.dispatchException(e);
    }

    if (state == 'Complete') {
      // avoid memory leak in MSIE: clean up
      this.transport.onreadystatechange = Prototype.emptyFunction;
    }
  },

  getHeader: function(name) {
    try {
      return this.transport.getResponseHeader(name);
    } catch (e) { return null }
  },

  evalJSON: function() {
    try {
      var json = this.getHeader('X-JSON');
      return json ? eval('(' + json + ')') : null;
    } catch (e) { return null }
  },

  evalResponse: function() {
    try {
      return eval(this.transport.responseText);
    } catch (e) {
      this.dispatchException(e);
    }
  },

  dispatchException: function(exception) {
    (this.options.onException || Prototype.emptyFunction)(this, exception);
    Ajax.Responders.dispatch('onException', this, exception);
  }
});

Ajax.Updater = Class.create();

Object.extend(Object.extend(Ajax.Updater.prototype, Ajax.Request.prototype), {
  initialize: function(container, url, options) {
    this.container = {
      success: (container.success || container),
      failure: (container.failure || (container.success ? null : container))
    }

    this.transport = Ajax.getTransport();
    this.setOptions(options);

    var onComplete = this.options.onComplete || Prototype.emptyFunction;
    this.options.onComplete = (function(transport, param) {
      this.updateContent();
      onComplete(transport, param);
    }).bind(this);

    this.request(url);
  },

  updateContent: function() {
    var receiver = this.container[this.success() ? 'success' : 'failure'];
    var response = this.transport.responseText;

    if (!this.options.evalScripts) response = response.stripScripts();

    if (receiver = $(receiver)) {
      if (this.options.insertion)
        new this.options.insertion(receiver, response);
      else
        receiver.update(response);
    }

    if (this.success()) {
      if (this.onComplete)
        setTimeout(this.onComplete.bind(this), 10);
    }
  }
});

Ajax.PeriodicalUpdater = Class.create();
Ajax.PeriodicalUpdater.prototype = Object.extend(new Ajax.Base(), {
  initialize: function(container, url, options) {
    this.setOptions(options);
    this.onComplete = this.options.onComplete;

    this.frequency = (this.options.frequency || 2);
    this.decay = (this.options.decay || 1);

    this.updater = {};
    this.container = container;
    this.url = url;

    this.start();
  },

  start: function() {
    this.options.onComplete = this.updateComplete.bind(this);
    this.onTimerEvent();
  },

  stop: function() {
    this.updater.options.onComplete = undefined;
    clearTimeout(this.timer);
    (this.onComplete || Prototype.emptyFunction).apply(this, arguments);
  },

  updateComplete: function(request) {
    if (this.options.decay) {
      this.decay = (request.responseText == this.lastText ?
        this.decay * this.options.decay : 1);

      this.lastText = request.responseText;
    }
    this.timer = setTimeout(this.onTimerEvent.bind(this),
      this.decay * this.frequency * 1000);
  },

  onTimerEvent: function() {
    this.updater = new Ajax.Updater(this.container, this.url, this.options);
  }
});
function $(element) {
  if (arguments.length > 1) {
    for (var i = 0, elements = [], length = arguments.length; i < length; i++)
      elements.push($(arguments[i]));
    return elements;
  }
  if (typeof element == 'string')
    element = document.getElementById(element);
  return Element.extend(element);
}

if (Prototype.BrowserFeatures.XPath) {
  document._getElementsByXPath = function(expression, parentElement) {
    var results = [];
    var query = document.evaluate(expression, $(parentElement) || document,
      null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);
    for (var i = 0, length = query.snapshotLength; i < length; i++)
      results.push(query.snapshotItem(i));
    return results;
  };
}

document.getElementsByClassName = function(className, parentElement) {
  if (Prototype.BrowserFeatures.XPath) {
    var q = ".//*[contains(concat(' ', @class, ' '), ' " + className + " ')]";
    return document._getElementsByXPath(q, parentElement);
  } else {
    var children = ($(parentElement) || document.body).getElementsByTagName('*');
    var elements = [], child;
    for (var i = 0, length = children.length; i < length; i++) {
      child = children[i];
      if (Element.hasClassName(child, className))
        elements.push(Element.extend(child));
    }
    return elements;
  }
};

/*--------------------------------------------------------------------------*/

if (!window.Element)
  var Element = new Object();

Element.extend = function(element) {
  if (!element || _nativeExtensions || element.nodeType == 3) return element;

  if (!element._extended && element.tagName && element != window) {
    var methods = Object.clone(Element.Methods), cache = Element.extend.cache;

    if (element.tagName == 'FORM')
      Object.extend(methods, Form.Methods);
    if (['INPUT', 'TEXTAREA', 'SELECT'].include(element.tagName))
      Object.extend(methods, Form.Element.Methods);

    Object.extend(methods, Element.Methods.Simulated);

    for (var property in methods) {
      var value = methods[property];
      if (typeof value == 'function' && !(property in element))
        element[property] = cache.findOrStore(value);
    }
  }

  element._extended = true;
  return element;
};

Element.extend.cache = {
  findOrStore: function(value) {
    return this[value] = this[value] || function() {
      return value.apply(null, [this].concat($A(arguments)));
    }
  }
};

Element.Methods = {
  visible: function(element) {
    return $(element).style.display != 'none';
  },

  toggle: function(element) {
    element = $(element);
    Element[Element.visible(element) ? 'hide' : 'show'](element);
    return element;
  },

  hide: function(element) {
    $(element).style.display = 'none';
    return element;
  },

  show: function(element) {
    $(element).style.display = '';
    return element;
  },

  remove: function(element) {
    element = $(element);
    element.parentNode.removeChild(element);
    return element;
  },

  update: function(element, html) {
    html = typeof html == 'undefined' ? '' : html.toString();
    $(element).innerHTML = html.stripScripts();
    setTimeout(function() {html.evalScripts()}, 10);
    return element;
  },

  replace: function(element, html) {
    element = $(element);
    html = typeof html == 'undefined' ? '' : html.toString();
    if (element.outerHTML) {
      element.outerHTML = html.stripScripts();
    } else {
      var range = element.ownerDocument.createRange();
      range.selectNodeContents(element);
      element.parentNode.replaceChild(
        range.createContextualFragment(html.stripScripts()), element);
    }
    setTimeout(function() {html.evalScripts()}, 10);
    return element;
  },

  inspect: function(element) {
    element = $(element);
    var result = '<' + element.tagName.toLowerCase();
    $H({'id': 'id', 'className': 'class'}).each(function(pair) {
      var property = pair.first(), attribute = pair.last();
      var value = (element[property] || '').toString();
      if (value) result += ' ' + attribute + '=' + value.inspect(true);
    });
    return result + '>';
  },

  recursivelyCollect: function(element, property) {
    element = $(element);
    var elements = [];
    while (element = element[property])
      if (element.nodeType == 1)
        elements.push(Element.extend(element));
    return elements;
  },

  ancestors: function(element) {
    return $(element).recursivelyCollect('parentNode');
  },

  descendants: function(element) {
    return $A($(element).getElementsByTagName('*'));
  },

  immediateDescendants: function(element) {
    if (!(element = $(element).firstChild)) return [];
    while (element && element.nodeType != 1) element = element.nextSibling;
    if (element) return [element].concat($(element).nextSiblings());
    return [];
  },

  previousSiblings: function(element) {
    return $(element).recursivelyCollect('previousSibling');
  },

  nextSiblings: function(element) {
    return $(element).recursivelyCollect('nextSibling');
  },

  siblings: function(element) {
    element = $(element);
    return element.previousSiblings().reverse().concat(element.nextSiblings());
  },

  match: function(element, selector) {
    if (typeof selector == 'string')
      selector = new Selector(selector);
    return selector.match($(element));
  },

  up: function(element, expression, index) {
    return Selector.findElement($(element).ancestors(), expression, index);
  },

  down: function(element, expression, index) {
    return Selector.findElement($(element).descendants(), expression, index);
  },

  previous: function(element, expression, index) {
    return Selector.findElement($(element).previousSiblings(), expression, index);
  },

  next: function(element, expression, index) {
    return Selector.findElement($(element).nextSiblings(), expression, index);
  },

  getElementsBySelector: function() {
    var args = $A(arguments), element = $(args.shift());
    return Selector.findChildElements(element, args);
  },

  getElementsByClassName: function(element, className) {
    return document.getElementsByClassName(className, element);
  },

  readAttribute: function(element, name) {
    element = $(element);
    if (document.all && !window.opera) {
      var t = Element._attributeTranslations;
      if (t.values[name]) return t.values[name](element, name);
      if (t.names[name])  name = t.names[name];
      var attribute = element.attributes[name];
      if(attribute) return attribute.nodeValue;
    }
    return element.getAttribute(name);
  },

  getHeight: function(element) {
    return $(element).getDimensions().height;
  },

  getWidth: function(element) {
    return $(element).getDimensions().width;
  },

  classNames: function(element) {
    return new Element.ClassNames(element);
  },

  hasClassName: function(element, className) {
    if (!(element = $(element))) return;
    var elementClassName = element.className;
    if (elementClassName.length == 0) return false;
    if (elementClassName == className ||
        elementClassName.match(new RegExp("(^|\\s)" + className + "(\\s|$)")))
      return true;
    return false;
  },

  addClassName: function(element, className) {
    if (!(element = $(element))) return;
    Element.classNames(element).add(className);
    return element;
  },

  removeClassName: function(element, className) {
    if (!(element = $(element))) return;
    Element.classNames(element).remove(className);
    return element;
  },

  toggleClassName: function(element, className) {
    if (!(element = $(element))) return;
    Element.classNames(element)[element.hasClassName(className) ? 'remove' : 'add'](className);
    return element;
  },

  observe: function() {
    Event.observe.apply(Event, arguments);
    return $A(arguments).first();
  },

  stopObserving: function() {
    Event.stopObserving.apply(Event, arguments);
    return $A(arguments).first();
  },

  // removes whitespace-only text node children
  cleanWhitespace: function(element) {
    element = $(element);
    var node = element.firstChild;
    while (node) {
      var nextNode = node.nextSibling;
      if (node.nodeType == 3 && !/\S/.test(node.nodeValue))
        element.removeChild(node);
      node = nextNode;
    }
    return element;
  },

  empty: function(element) {
    return $(element).innerHTML.match(/^\s*$/);
  },

  descendantOf: function(element, ancestor) {
    element = $(element), ancestor = $(ancestor);
    while (element = element.parentNode)
      if (element == ancestor) return true;
    return false;
  },

  scrollTo: function(element) {
    element = $(element);
    var pos = Position.cumulativeOffset(element);
    window.scrollTo(pos[0], pos[1]);
    return element;
  },

  getStyle: function(element, style) {
    element = $(element);
    if (['float','cssFloat'].include(style))
      style = (typeof element.style.styleFloat != 'undefined' ? 'styleFloat' : 'cssFloat');
    style = style.camelize();
    var value = element.style[style];
    if (!value) {
      if (document.defaultView && document.defaultView.getComputedStyle) {
        var css = document.defaultView.getComputedStyle(element, null);
        value = css ? css[style] : null;
      } else if (element.currentStyle) {
        value = element.currentStyle[style];
      }
    }

    if((value == 'auto') && ['width','height'].include(style) && (element.getStyle('display') != 'none'))
      value = element['offset'+style.capitalize()] + 'px';

    if (window.opera && ['left', 'top', 'right', 'bottom'].include(style))
      if (Element.getStyle(element, 'position') == 'static') value = 'auto';
    if(style == 'opacity') {
      if(value) return parseFloat(value);
      if(value = (element.getStyle('filter') || '').match(/alpha\(opacity=(.*)\)/))
        if(value[1]) return parseFloat(value[1]) / 100;
      return 1.0;
    }
    return value == 'auto' ? null : value;
  },

  setStyle: function(element, style) {
    element = $(element);
    for (var name in style) {
      var value = style[name];
      if(name == 'opacity') {
        if (value == 1) {
          value = (/Gecko/.test(navigator.userAgent) &&
            !/Konqueror|Safari|KHTML/.test(navigator.userAgent)) ? 0.999999 : 1.0;
          if(/MSIE/.test(navigator.userAgent) && !window.opera)
            element.style.filter = element.getStyle('filter').replace(/alpha\([^\)]*\)/gi,'');
        } else if(value == '') {
          if(/MSIE/.test(navigator.userAgent) && !window.opera)
            element.style.filter = element.getStyle('filter').replace(/alpha\([^\)]*\)/gi,'');
        } else {
          if(value < 0.00001) value = 0;
          if(/MSIE/.test(navigator.userAgent) && !window.opera)
            element.style.filter = element.getStyle('filter').replace(/alpha\([^\)]*\)/gi,'') +
              'alpha(opacity='+value*100+')';
        }
      } else if(['float','cssFloat'].include(name)) name = (typeof element.style.styleFloat != 'undefined') ? 'styleFloat' : 'cssFloat';
      element.style[name.camelize()] = value;
    }
    return element;
  },

  getDimensions: function(element) {
    element = $(element);
    var display = $(element).getStyle('display');
    if (display != 'none' && display != null) // Safari bug
      return {width: element.offsetWidth, height: element.offsetHeight};

    // All *Width and *Height properties give 0 on elements with display none,
    // so enable the element temporarily
    var els = element.style;
    var originalVisibility = els.visibility;
    var originalPosition = els.position;
    var originalDisplay = els.display;
    els.visibility = 'hidden';
    els.position = 'absolute';
    els.display = 'block';
    var originalWidth = element.clientWidth;
    var originalHeight = element.clientHeight;
    els.display = originalDisplay;
    els.position = originalPosition;
    els.visibility = originalVisibility;
    return {width: originalWidth, height: originalHeight};
  },

  makePositioned: function(element) {
    element = $(element);
    var pos = Element.getStyle(element, 'position');
    if (pos == 'static' || !pos) {
      element._madePositioned = true;
      element.style.position = 'relative';
      // Opera returns the offset relative to the positioning context, when an
      // element is position relative but top and left have not been defined
      if (window.opera) {
        element.style.top = 0;
        element.style.left = 0;
      }
    }
    return element;
  },

  undoPositioned: function(element) {
    element = $(element);
    if (element._madePositioned) {
      element._madePositioned = undefined;
      element.style.position =
        element.style.top =
        element.style.left =
        element.style.bottom =
        element.style.right = '';
    }
    return element;
  },

  makeClipping: function(element) {
    element = $(element);
    if (element._overflow) return element;
    element._overflow = element.style.overflow || 'auto';
    if ((Element.getStyle(element, 'overflow') || 'visible') != 'hidden')
      element.style.overflow = 'hidden';
    return element;
  },

  undoClipping: function(element) {
    element = $(element);
    if (!element._overflow) return element;
    element.style.overflow = element._overflow == 'auto' ? '' : element._overflow;
    element._overflow = null;
    return element;
  }
};

Object.extend(Element.Methods, {childOf: Element.Methods.descendantOf});

Element._attributeTranslations = {};

Element._attributeTranslations.names = {
  colspan:   "colSpan",
  rowspan:   "rowSpan",
  valign:    "vAlign",
  datetime:  "dateTime",
  accesskey: "accessKey",
  tabindex:  "tabIndex",
  enctype:   "encType",
  maxlength: "maxLength",
  readonly:  "readOnly",
  longdesc:  "longDesc"
};

Element._attributeTranslations.values = {
  _getAttr: function(element, attribute) {
    return element.getAttribute(attribute, 2);
  },

  _flag: function(element, attribute) {
    return $(element).hasAttribute(attribute) ? attribute : null;
  },

  style: function(element) {
    return element.style.cssText.toLowerCase();
  },

  title: function(element) {
    var node = element.getAttributeNode('title');
    return node.specified ? node.nodeValue : null;
  }
};

Object.extend(Element._attributeTranslations.values, {
  href: Element._attributeTranslations.values._getAttr,
  src:  Element._attributeTranslations.values._getAttr,
  disabled: Element._attributeTranslations.values._flag,
  checked:  Element._attributeTranslations.values._flag,
  readonly: Element._attributeTranslations.values._flag,
  multiple: Element._attributeTranslations.values._flag
});

Element.Methods.Simulated = {
  hasAttribute: function(element, attribute) {
    var t = Element._attributeTranslations;
    attribute = t.names[attribute] || attribute;
    return $(element).getAttributeNode(attribute).specified;
  }
};

// IE is missing .innerHTML support for TABLE-related elements
if (document.all && !window.opera){
  Element.Methods.update = function(element, html) {
    element = $(element);
    html = typeof html == 'undefined' ? '' : html.toString();
    var tagName = element.tagName.toUpperCase();
    if (['THEAD','TBODY','TR','TD'].include(tagName)) {
      var div = document.createElement('div');
      switch (tagName) {
        case 'THEAD':
        case 'TBODY':
          div.innerHTML = '<table><tbody>' +  html.stripScripts() + '</tbody></table>';
          depth = 2;
          break;
        case 'TR':
          div.innerHTML = '<table><tbody><tr>' +  html.stripScripts() + '</tr></tbody></table>';
          depth = 3;
          break;
        case 'TD':
          div.innerHTML = '<table><tbody><tr><td>' +  html.stripScripts() + '</td></tr></tbody></table>';
          depth = 4;
      }
      $A(element.childNodes).each(function(node){
        element.removeChild(node)
      });
      depth.times(function(){ div = div.firstChild });

      $A(div.childNodes).each(
        function(node){ element.appendChild(node) });
    } else {
      element.innerHTML = html.stripScripts();
    }
    setTimeout(function() {html.evalScripts()}, 10);
    return element;
  }
};

Object.extend(Element, Element.Methods);

var _nativeExtensions = false;

if(/Konqueror|Safari|KHTML/.test(navigator.userAgent))
  ['', 'Form', 'Input', 'TextArea', 'Select'].each(function(tag) {
    var className = 'HTML' + tag + 'Element';
    if(window[className]) return;
    var klass = window[className] = {};
    klass.prototype = document.createElement(tag ? tag.toLowerCase() : 'div').__proto__;
  });

Element.addMethods = function(methods) {
  Object.extend(Element.Methods, methods || {});

  function copy(methods, destination, onlyIfAbsent) {
    onlyIfAbsent = onlyIfAbsent || false;
    var cache = Element.extend.cache;
    for (var property in methods) {
      var value = methods[property];
      if (!onlyIfAbsent || !(property in destination))
        destination[property] = cache.findOrStore(value);
    }
  }

  if (typeof HTMLElement != 'undefined') {
    copy(Element.Methods, HTMLElement.prototype);
    copy(Element.Methods.Simulated, HTMLElement.prototype, true);
    copy(Form.Methods, HTMLFormElement.prototype);
    [HTMLInputElement, HTMLTextAreaElement, HTMLSelectElement].each(function(klass) {
      copy(Form.Element.Methods, klass.prototype);
    });
    _nativeExtensions = true;
  }
}

var Toggle = new Object();
Toggle.display = Element.toggle;

/*--------------------------------------------------------------------------*/

Abstract.Insertion = function(adjacency) {
  this.adjacency = adjacency;
}

Abstract.Insertion.prototype = {
  initialize: function(element, content) {
    this.element = $(element);
    this.content = content.stripScripts();

    if (this.adjacency && this.element.insertAdjacentHTML) {
      try {
        this.element.insertAdjacentHTML(this.adjacency, this.content);
      } catch (e) {
        var tagName = this.element.tagName.toUpperCase();
        if (['TBODY', 'TR'].include(tagName)) {
          this.insertContent(this.contentFromAnonymousTable());
        } else {
          throw e;
        }
      }
    } else {
      this.range = this.element.ownerDocument.createRange();
      if (this.initializeRange) this.initializeRange();
      this.insertContent([this.range.createContextualFragment(this.content)]);
    }

    setTimeout(function() {content.evalScripts()}, 10);
  },

  contentFromAnonymousTable: function() {
    var div = document.createElement('div');
    div.innerHTML = '<table><tbody>' + this.content + '</tbody></table>';
    return $A(div.childNodes[0].childNodes[0].childNodes);
  }
}

var Insertion = new Object();

Insertion.Before = Class.create();
Insertion.Before.prototype = Object.extend(new Abstract.Insertion('beforeBegin'), {
  initializeRange: function() {
    this.range.setStartBefore(this.element);
  },

  insertContent: function(fragments) {
    fragments.each((function(fragment) {
      this.element.parentNode.insertBefore(fragment, this.element);
    }).bind(this));
  }
});

Insertion.Top = Class.create();
Insertion.Top.prototype = Object.extend(new Abstract.Insertion('afterBegin'), {
  initializeRange: function() {
    this.range.selectNodeContents(this.element);
    this.range.collapse(true);
  },

  insertContent: function(fragments) {
    fragments.reverse(false).each((function(fragment) {
      this.element.insertBefore(fragment, this.element.firstChild);
    }).bind(this));
  }
});

Insertion.Bottom = Class.create();
Insertion.Bottom.prototype = Object.extend(new Abstract.Insertion('beforeEnd'), {
  initializeRange: function() {
    this.range.selectNodeContents(this.element);
    this.range.collapse(this.element);
  },

  insertContent: function(fragments) {
    fragments.each((function(fragment) {
      this.element.appendChild(fragment);
    }).bind(this));
  }
});

Insertion.After = Class.create();
Insertion.After.prototype = Object.extend(new Abstract.Insertion('afterEnd'), {
  initializeRange: function() {
    this.range.setStartAfter(this.element);
  },

  insertContent: function(fragments) {
    fragments.each((function(fragment) {
      this.element.parentNode.insertBefore(fragment,
        this.element.nextSibling);
    }).bind(this));
  }
});

/*--------------------------------------------------------------------------*/

Element.ClassNames = Class.create();
Element.ClassNames.prototype = {
  initialize: function(element) {
    this.element = $(element);
  },

  _each: function(iterator) {
    this.element.className.split(/\s+/).select(function(name) {
      return name.length > 0;
    })._each(iterator);
  },

  set: function(className) {
    this.element.className = className;
  },

  add: function(classNameToAdd) {
    if (this.include(classNameToAdd)) return;
    this.set($A(this).concat(classNameToAdd).join(' '));
  },

  remove: function(classNameToRemove) {
    if (!this.include(classNameToRemove)) return;
    this.set($A(this).without(classNameToRemove).join(' '));
  },

  toString: function() {
    return $A(this).join(' ');
  }
};

Object.extend(Element.ClassNames.prototype, Enumerable);
var Selector = Class.create();
Selector.prototype = {
  initialize: function(expression) {
    this.params = {classNames: []};
    this.expression = expression.toString().strip();
    this.parseExpression();
    this.compileMatcher();
  },

  parseExpression: function() {
    function abort(message) { throw 'Parse error in selector: ' + message; }

    if (this.expression == '')  abort('empty expression');

    var params = this.params, expr = this.expression, match, modifier, clause, rest;
    while (match = expr.match(/^(.*)\[([a-z0-9_:-]+?)(?:([~\|!]?=)(?:"([^"]*)"|([^\]\s]*)))?\]$/i)) {
      params.attributes = params.attributes || [];
      params.attributes.push({name: match[2], operator: match[3], value: match[4] || match[5] || ''});
      expr = match[1];
    }

    if (expr == '*') return this.params.wildcard = true;

    while (match = expr.match(/^([^a-z0-9_-])?([a-z0-9_-]+)(.*)/i)) {
      modifier = match[1], clause = match[2], rest = match[3];
      switch (modifier) {
        case '#':       params.id = clause; break;
        case '.':       params.classNames.push(clause); break;
        case '':
        case undefined: params.tagName = clause.toUpperCase(); break;
        default:        abort(expr.inspect());
      }
      expr = rest;
    }

    if (expr.length > 0) abort(expr.inspect());
  },

  buildMatchExpression: function() {
    var params = this.params, conditions = [], clause;

    if (params.wildcard)
      conditions.push('true');
    if (clause = params.id)
      conditions.push('element.readAttribute("id") == ' + clause.inspect());
    if (clause = params.tagName)
      conditions.push('element.tagName.toUpperCase() == ' + clause.inspect());
    if ((clause = params.classNames).length > 0)
      for (var i = 0, length = clause.length; i < length; i++)
        conditions.push('element.hasClassName(' + clause[i].inspect() + ')');
    if (clause = params.attributes) {
      clause.each(function(attribute) {
        var value = 'element.readAttribute(' + attribute.name.inspect() + ')';
        var splitValueBy = function(delimiter) {
          return value + ' && ' + value + '.split(' + delimiter.inspect() + ')';
        }

        switch (attribute.operator) {
          case '=':       conditions.push(value + ' == ' + attribute.value.inspect()); break;
          case '~=':      conditions.push(splitValueBy(' ') + '.include(' + attribute.value.inspect() + ')'); break;
          case '|=':      conditions.push(
                            splitValueBy('-') + '.first().toUpperCase() == ' + attribute.value.toUpperCase().inspect()
                          ); break;
          case '!=':      conditions.push(value + ' != ' + attribute.value.inspect()); break;
          case '':
          case undefined: conditions.push('element.hasAttribute(' + attribute.name.inspect() + ')'); break;
          default:        throw 'Unknown operator ' + attribute.operator + ' in selector';
        }
      });
    }

    return conditions.join(' && ');
  },

  compileMatcher: function() {
    this.match = new Function('element', 'if (!element.tagName) return false; \
      element = $(element); \
      return ' + this.buildMatchExpression());
  },

  findElements: function(scope) {
    var element;

    if (element = $(this.params.id))
      if (this.match(element))
        if (!scope || Element.childOf(element, scope))
          return [element];

    scope = (scope || document).getElementsByTagName(this.params.tagName || '*');

    var results = [];
    for (var i = 0, length = scope.length; i < length; i++)
      if (this.match(element = scope[i]))
        results.push(Element.extend(element));

    return results;
  },

  toString: function() {
    return this.expression;
  }
}

Object.extend(Selector, {
  matchElements: function(elements, expression) {
    var selector = new Selector(expression);
    return elements.select(selector.match.bind(selector)).map(Element.extend);
  },

  findElement: function(elements, expression, index) {
    if (typeof expression == 'number') index = expression, expression = false;
    return Selector.matchElements(elements, expression || '*')[index || 0];
  },

  findChildElements: function(element, expressions) {
    return expressions.map(function(expression) {
      return expression.match(/[^\s"]+(?:"[^"]*"[^\s"]+)*/g).inject([null], function(results, expr) {
        var selector = new Selector(expr);
        return results.inject([], function(elements, result) {
          return elements.concat(selector.findElements(result || element));
        });
      });
    }).flatten();
  }
});

function $$() {
  return Selector.findChildElements(document, $A(arguments));
}
var Form = {
  reset: function(form) {
    $(form).reset();
    return form;
  },

  serializeElements: function(elements, getHash) {
    var data = elements.inject({}, function(result, element) {
      if (!element.disabled && element.name) {
        var key = element.name, value = $(element).getValue();
        if (value != undefined) {
          if (result[key]) {
            if (result[key].constructor != Array) result[key] = [result[key]];
            result[key].push(value);
          }
          else result[key] = value;
        }
      }
      return result;
    });

    return getHash ? data : Hash.toQueryString(data);
  }
};

Form.Methods = {
  serialize: function(form, getHash) {
    return Form.serializeElements(Form.getElements(form), getHash);
  },

  getElements: function(form) {
    return $A($(form).getElementsByTagName('*')).inject([],
      function(elements, child) {
        if (Form.Element.Serializers[child.tagName.toLowerCase()])
          elements.push(Element.extend(child));
        return elements;
      }
    );
  },

  getInputs: function(form, typeName, name) {
    form = $(form);
    var inputs = form.getElementsByTagName('input');

    if (!typeName && !name) return $A(inputs).map(Element.extend);

    for (var i = 0, matchingInputs = [], length = inputs.length; i < length; i++) {
      var input = inputs[i];
      if ((typeName && input.type != typeName) || (name && input.name != name))
        continue;
      matchingInputs.push(Element.extend(input));
    }

    return matchingInputs;
  },

  disable: function(form) {
    form = $(form);
    form.getElements().each(function(element) {
      element.blur();
      element.disabled = 'true';
    });
    return form;
  },

  enable: function(form) {
    form = $(form);
    form.getElements().each(function(element) {
      element.disabled = '';
    });
    return form;
  },

  findFirstElement: function(form) {
    return $(form).getElements().find(function(element) {
      return element.type != 'hidden' && !element.disabled &&
        ['input', 'select', 'textarea'].include(element.tagName.toLowerCase());
    });
  },

  focusFirstElement: function(form) {
    form = $(form);
    form.findFirstElement().activate();
    return form;
  }
}

Object.extend(Form, Form.Methods);

/*--------------------------------------------------------------------------*/

Form.Element = {
  focus: function(element) {
    $(element).focus();
    return element;
  },

  select: function(element) {
    $(element).select();
    return element;
  }
}

Form.Element.Methods = {
  serialize: function(element) {
    element = $(element);
    if (!element.disabled && element.name) {
      var value = element.getValue();
      if (value != undefined) {
        var pair = {};
        pair[element.name] = value;
        return Hash.toQueryString(pair);
      }
    }
    return '';
  },

  getValue: function(element) {
    element = $(element);
    var method = element.tagName.toLowerCase();
    return Form.Element.Serializers[method](element);
  },

  clear: function(element) {
    $(element).value = '';
    return element;
  },

  present: function(element) {
    return $(element).value != '';
  },

  activate: function(element) {
    element = $(element);
    element.focus();
    if (element.select && ( element.tagName.toLowerCase() != 'input' ||
      !['button', 'reset', 'submit'].include(element.type) ) )
      element.select();
    return element;
  },

  disable: function(element) {
    element = $(element);
    element.disabled = true;
    return element;
  },

  enable: function(element) {
    element = $(element);
    element.blur();
    element.disabled = false;
    return element;
  }
}

Object.extend(Form.Element, Form.Element.Methods);
var Field = Form.Element;
var $F = Form.Element.getValue;

/*--------------------------------------------------------------------------*/

Form.Element.Serializers = {
  input: function(element) {
    switch (element.type.toLowerCase()) {
      case 'checkbox':
      case 'radio':
        return Form.Element.Serializers.inputSelector(element);
      default:
        return Form.Element.Serializers.textarea(element);
    }
  },

  inputSelector: function(element) {
    return element.checked ? element.value : null;
  },

  textarea: function(element) {
    return element.value;
  },

  select: function(element) {
    return this[element.type == 'select-one' ?
      'selectOne' : 'selectMany'](element);
  },

  selectOne: function(element) {
    var index = element.selectedIndex;
    return index >= 0 ? this.optionValue(element.options[index]) : null;
  },

  selectMany: function(element) {
    var values, length = element.length;
    if (!length) return null;

    for (var i = 0, values = []; i < length; i++) {
      var opt = element.options[i];
      if (opt.selected) values.push(this.optionValue(opt));
    }
    return values;
  },

  optionValue: function(opt) {
    // extend element because hasAttribute may not be native
    return Element.extend(opt).hasAttribute('value') ? opt.value : opt.text;
  }
}

/*--------------------------------------------------------------------------*/

Abstract.TimedObserver = function() {}
Abstract.TimedObserver.prototype = {
  initialize: function(element, frequency, callback) {
    this.frequency = frequency;
    this.element   = $(element);
    this.callback  = callback;

    this.lastValue = this.getValue();
    this.registerCallback();
  },

  registerCallback: function() {
    setInterval(this.onTimerEvent.bind(this), this.frequency * 1000);
  },

  onTimerEvent: function() {
    var value = this.getValue();
    var changed = ('string' == typeof this.lastValue && 'string' == typeof value
      ? this.lastValue != value : String(this.lastValue) != String(value));
    if (changed) {
      this.callback(this.element, value);
      this.lastValue = value;
    }
  }
}

Form.Element.Observer = Class.create();
Form.Element.Observer.prototype = Object.extend(new Abstract.TimedObserver(), {
  getValue: function() {
    return Form.Element.getValue(this.element);
  }
});

Form.Observer = Class.create();
Form.Observer.prototype = Object.extend(new Abstract.TimedObserver(), {
  getValue: function() {
    return Form.serialize(this.element);
  }
});

/*--------------------------------------------------------------------------*/

Abstract.EventObserver = function() {}
Abstract.EventObserver.prototype = {
  initialize: function(element, callback) {
    this.element  = $(element);
    this.callback = callback;

    this.lastValue = this.getValue();
    if (this.element.tagName.toLowerCase() == 'form')
      this.registerFormCallbacks();
    else
      this.registerCallback(this.element);
  },

  onElementEvent: function() {
    var value = this.getValue();
    if (this.lastValue != value) {
      this.callback(this.element, value);
      this.lastValue = value;
    }
  },

  registerFormCallbacks: function() {
    Form.getElements(this.element).each(this.registerCallback.bind(this));
  },

  registerCallback: function(element) {
    if (element.type) {
      switch (element.type.toLowerCase()) {
        case 'checkbox':
        case 'radio':
          Event.observe(element, 'click', this.onElementEvent.bind(this));
          break;
        default:
          Event.observe(element, 'change', this.onElementEvent.bind(this));
          break;
      }
    }
  }
}

Form.Element.EventObserver = Class.create();
Form.Element.EventObserver.prototype = Object.extend(new Abstract.EventObserver(), {
  getValue: function() {
    return Form.Element.getValue(this.element);
  }
});

Form.EventObserver = Class.create();
Form.EventObserver.prototype = Object.extend(new Abstract.EventObserver(), {
  getValue: function() {
    return Form.serialize(this.element);
  }
});
if (!window.Event) {
  var Event = new Object();
}

Object.extend(Event, {
  KEY_BACKSPACE: 8,
  KEY_TAB:       9,
  KEY_RETURN:   13,
  KEY_ESC:      27,
  KEY_LEFT:     37,
  KEY_UP:       38,
  KEY_RIGHT:    39,
  KEY_DOWN:     40,
  KEY_DELETE:   46,
  KEY_HOME:     36,
  KEY_END:      35,
  KEY_PAGEUP:   33,
  KEY_PAGEDOWN: 34,

  element: function(event) {
    return event.target || event.srcElement;
  },

  isLeftClick: function(event) {
    return (((event.which) && (event.which == 1)) ||
            ((event.button) && (event.button == 1)));
  },

  pointerX: function(event) {
    return event.pageX || (event.clientX +
      (document.documentElement.scrollLeft || document.body.scrollLeft));
  },

  pointerY: function(event) {
    return event.pageY || (event.clientY +
      (document.documentElement.scrollTop || document.body.scrollTop));
  },

  stop: function(event) {
    if (event.preventDefault) {
      event.preventDefault();
      event.stopPropagation();
    } else {
      event.returnValue = false;
      event.cancelBubble = true;
    }
  },

  // find the first node with the given tagName, starting from the
  // node the event was triggered on; traverses the DOM upwards
  findElement: function(event, tagName) {
    var element = Event.element(event);
    while (element.parentNode && (!element.tagName ||
        (element.tagName.toUpperCase() != tagName.toUpperCase())))
      element = element.parentNode;
    return element;
  },

  observers: false,

  _observeAndCache: function(element, name, observer, useCapture) {
    if (!this.observers) this.observers = [];
    if (element.addEventListener) {
      this.observers.push([element, name, observer, useCapture]);
      element.addEventListener(name, observer, useCapture);
    } else if (element.attachEvent) {
      this.observers.push([element, name, observer, useCapture]);
      element.attachEvent('on' + name, observer);
    }
  },

  unloadCache: function() {
    if (!Event.observers) return;
    for (var i = 0, length = Event.observers.length; i < length; i++) {
      Event.stopObserving.apply(this, Event.observers[i]);
      Event.observers[i][0] = null;
    }
    Event.observers = false;
  },

  observe: function(element, name, observer, useCapture) {
    element = $(element);
    useCapture = useCapture || false;

    if (name == 'keypress' &&
        (navigator.appVersion.match(/Konqueror|Safari|KHTML/)
        || element.attachEvent))
      name = 'keydown';

    Event._observeAndCache(element, name, observer, useCapture);
  },

  stopObserving: function(element, name, observer, useCapture) {
    element = $(element);
    useCapture = useCapture || false;

    if (name == 'keypress' &&
        (navigator.appVersion.match(/Konqueror|Safari|KHTML/)
        || element.detachEvent))
      name = 'keydown';

    if (element.removeEventListener) {
      element.removeEventListener(name, observer, useCapture);
    } else if (element.detachEvent) {
      try {
        element.detachEvent('on' + name, observer);
      } catch (e) {}
    }
  }
});

/* prevent memory leaks in IE */
if (navigator.appVersion.match(/\bMSIE\b/))
  Event.observe(window, 'unload', Event.unloadCache, false);
var Position = {
  // set to true if needed, warning: firefox performance problems
  // NOT neeeded for page scrolling, only if draggable contained in
  // scrollable elements
  includeScrollOffsets: false,

  // must be called before calling withinIncludingScrolloffset, every time the
  // page is scrolled
  prepare: function() {
    this.deltaX =  window.pageXOffset
                || document.documentElement.scrollLeft
                || document.body.scrollLeft
                || 0;
    this.deltaY =  window.pageYOffset
                || document.documentElement.scrollTop
                || document.body.scrollTop
                || 0;
  },

  realOffset: function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.scrollTop  || 0;
      valueL += element.scrollLeft || 0;
      element = element.parentNode;
    } while (element);
    return [valueL, valueT];
  },

  cumulativeOffset: function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      element = element.offsetParent;
    } while (element);
    return [valueL, valueT];
  },

  positionedOffset: function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      element = element.offsetParent;
      if (element) {
        if(element.tagName=='BODY') break;
        var p = Element.getStyle(element, 'position');
        if (p == 'relative' || p == 'absolute') break;
      }
    } while (element);
    return [valueL, valueT];
  },

  offsetParent: function(element) {
    if (element.offsetParent) return element.offsetParent;
    if (element == document.body) return element;

    while ((element = element.parentNode) && element != document.body)
      if (Element.getStyle(element, 'position') != 'static')
        return element;

    return document.body;
  },

  // caches x/y coordinate pair to use with overlap
  within: function(element, x, y) {
    if (this.includeScrollOffsets)
      return this.withinIncludingScrolloffsets(element, x, y);
    this.xcomp = x;
    this.ycomp = y;
    this.offset = this.cumulativeOffset(element);

    return (y >= this.offset[1] &&
            y <  this.offset[1] + element.offsetHeight &&
            x >= this.offset[0] &&
            x <  this.offset[0] + element.offsetWidth);
  },

  withinIncludingScrolloffsets: function(element, x, y) {
    var offsetcache = this.realOffset(element);

    this.xcomp = x + offsetcache[0] - this.deltaX;
    this.ycomp = y + offsetcache[1] - this.deltaY;
    this.offset = this.cumulativeOffset(element);

    return (this.ycomp >= this.offset[1] &&
            this.ycomp <  this.offset[1] + element.offsetHeight &&
            this.xcomp >= this.offset[0] &&
            this.xcomp <  this.offset[0] + element.offsetWidth);
  },

  // within must be called directly before
  overlap: function(mode, element) {
    if (!mode) return 0;
    if (mode == 'vertical')
      return ((this.offset[1] + element.offsetHeight) - this.ycomp) /
        element.offsetHeight;
    if (mode == 'horizontal')
      return ((this.offset[0] + element.offsetWidth) - this.xcomp) /
        element.offsetWidth;
  },

  page: function(forElement) {
    var valueT = 0, valueL = 0;

    var element = forElement;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;

      // Safari fix
      if (element.offsetParent==document.body)
        if (Element.getStyle(element,'position')=='absolute') break;

    } while (element = element.offsetParent);

    element = forElement;
    do {
      if (!window.opera || element.tagName=='BODY') {
        valueT -= element.scrollTop  || 0;
        valueL -= element.scrollLeft || 0;
      }
    } while (element = element.parentNode);

    return [valueL, valueT];
  },

  clone: function(source, target) {
    var options = Object.extend({
      setLeft:    true,
      setTop:     true,
      setWidth:   true,
      setHeight:  true,
      offsetTop:  0,
      offsetLeft: 0
    }, arguments[2] || {})

    // find page position of source
    source = $(source);
    var p = Position.page(source);

    // find coordinate system to use
    target = $(target);
    var delta = [0, 0];
    var parent = null;
    // delta [0,0] will do fine with position: fixed elements,
    // position:absolute needs offsetParent deltas
    if (Element.getStyle(target,'position') == 'absolute') {
      parent = Position.offsetParent(target);
      delta = Position.page(parent);
    }

    // correct by body offsets (fixes Safari)
    if (parent == document.body) {
      delta[0] -= document.body.offsetLeft;
      delta[1] -= document.body.offsetTop;
    }

    // set position
    if(options.setLeft)   target.style.left  = (p[0] - delta[0] + options.offsetLeft) + 'px';
    if(options.setTop)    target.style.top   = (p[1] - delta[1] + options.offsetTop) + 'px';
    if(options.setWidth)  target.style.width = source.offsetWidth + 'px';
    if(options.setHeight) target.style.height = source.offsetHeight + 'px';
  },

  absolutize: function(element) {
    element = $(element);
    if (element.style.position == 'absolute') return;
    Position.prepare();

    var offsets = Position.positionedOffset(element);
    var top     = offsets[1];
    var left    = offsets[0];
    var width   = element.clientWidth;
    var height  = element.clientHeight;

    element._originalLeft   = left - parseFloat(element.style.left  || 0);
    element._originalTop    = top  - parseFloat(element.style.top || 0);
    element._originalWidth  = element.style.width;
    element._originalHeight = element.style.height;

    element.style.position = 'absolute';
    element.style.top    = top + 'px';
    element.style.left   = left + 'px';
    element.style.width  = width + 'px';
    element.style.height = height + 'px';
  },

  relativize: function(element) {
    element = $(element);
    if (element.style.position == 'relative') return;
    Position.prepare();

    element.style.position = 'relative';
    var top  = parseFloat(element.style.top  || 0) - (element._originalTop || 0);
    var left = parseFloat(element.style.left || 0) - (element._originalLeft || 0);

    element.style.top    = top + 'px';
    element.style.left   = left + 'px';
    element.style.height = element._originalHeight;
    element.style.width  = element._originalWidth;
  }
}

// Safari returns margins on body which is incorrect if the child is absolutely
// positioned.  For performance reasons, redefine Position.cumulativeOffset for
// KHTML/WebKit only.
if (/Konqueror|Safari|KHTML/.test(navigator.userAgent)) {
  Position.cumulativeOffset = function(element) {
    var valueT = 0, valueL = 0;
    do {
      valueT += element.offsetTop  || 0;
      valueL += element.offsetLeft || 0;
      if (element.offsetParent == document.body)
        if (Element.getStyle(element, 'position') == 'absolute') break;

      element = element.offsetParent;
    } while (element);

    return [valueL, valueT];
  }
}

Element.addMethods();
-->
</script>

<script type="text/javascript">
ddaccordion.init({
	headerclass: "expandable", //Shared CSS class name of headers group
	contentclass: "submenu", //Shared CSS class name of contents group
	collapseprev: true, //Collapse previous content (so only one open at any time)? true/false 
	defaultexpanded: [], //index of content(s) open by default [index1, index2, etc] [] denotes no content
	animatedefault: false, //Should contents open by default be animated into view?
	persiststate: false, //persist state of opened contents within browser session?
	toggleclass: ["", "openheader"], //Two CSS classes to be applied to the header when it's collapsed and expanded, respectively ["class1", "class2"]
	togglehtml: ["suffix", "", ""], //Additional HTML added to the header when it's collapsed and expanded, respectively  ["position", "html1", "html2"] (see docs)
	animatespeed: "normal" //speed of animation: "fast", "normal", or "slow"
})

oldload = window.onload;
function expandableExpandItem(){};
function docmanExpandTree(){};
window.onload=function(){oldload();convertTrees();window.setTimeout('expandableExpandItem()',100);docmanExpandTree();}
</script>

</head>

<body>

<script>
	function getPos(obj, direction) {	/*		direction == 0 ---> Top		direction != 0 ---> Left	*/
		var cur = 0;
		if (obj.offsetParent) {
			do {
				if (direction == 0)
					cur += obj.offsetTop;
				else
					cur += obj.offsetLeft;
			} while (obj = obj.offsetParent);
		}
		return cur;
	}
	function expandFloatingMenu(id, icon) {
		var menu = document.getElementById(id);
		var icon = document.getElementById(icon);		
		var t = getPos(icon, 0);
		var l = getPos(icon, 1);
		menu.style.top = ((t + parseInt(icon.height)) + "px");
		menu.style.left = (l + "px");
		if (menu.style.visibility == "visible")
			menu.style.visibility = "hidden";
		else
			menu.style.visibility = "visible";
	}
	
	function SearchByIDMenu()
	{
		var menu = document.getElementById("SearchByIDMenu");
		var icon = document.getElementById("SearchByIDIcon");
		var othermenu = document.getElementById("quickJumpMenu");
		if (othermenu)
			othermenu.style.visibility = "hidden";
		var t = getPos(icon, 0);
		var l = getPos(icon, 1);
		menu.style.top = ((t + parseInt(icon.height)) + "px");
		menu.style.left = (l + "px");
		if (menu.style.visibility == "visible")
			menu.style.visibility = "hidden";
		else
			menu.style.visibility = "visible";
	}
</script>


<div id="SearchByIDMenu" class="SearchByIDMenu" style="visibility: hidden; position:absolute; z-index:2; max-height: 25%; overflow:auto;">
	<form id="searchbyid" name="searchbyid" class="SearchByIDMenu" action="/gf/search/?action=SearchById" method="POST">
	<table class="SearchByIDMenu" summary="">
		<tr><td class="SearchByIDMenu">
		<select name="searchtype" class="SearchByIDMenu">
			<option value="forummessage">Forum Message</option><option value="trackeritem" selected>Tracker Item</option><option value="frsrelease">FRS Release</option>		</select>
		</td></tr>
		<tr><td class="SearchByIDMenu">
		<strong>Item Id:&nbsp;</strong><input type="text" size="4" name="searchid" value="" />
		</td></tr>
		<tr><td class="SearchByIDMenu">
		<a class='button' onclick="document.getElementById('searchbyidsubmit').click()"><span>Search</span></a><span style="display:none;" class='button'><input type='submit' class='' value='Search' name='searchbyidsubmit' id='searchbyidsubmit' onclick=""/></span>		</td></tr>
	</table>
	</form>
</div>

<div id="header" style="min-width:803px;">
<script type="text/javascript">
	function quickJumpMenuLoad() {

		if (document.getElementById('quickJumpMenu').innerHTML == "") {
			new Ajax.Request('/gf/ajax/handler.php?action=GetQuickJumpMenu',
			  {
			    method:'get',
			    onSuccess: function(transport){
			      var response = transport.responseText || "couldn't get response from server";
			      document.getElementById('quickJumpMenu').innerHTML = response;
			      quickJumpMenu();
			      //alert("Success! \n\n" + response);
			    },
			    onFailure: function(){ alert('ajax call failed') }
			  });	
		} else {
			quickJumpMenu();
		}
	}
</script>
	

	<h1 id="logo"><a href="/">MyGforge Home</a></h1>
	<ul id="mainNav"><li class="start"></li>
				<li><a  href="/gf/">Home</a></li>
				<li><a  href="/gf/my/">My Stuff</a></li>
				<li><a  href="/gf/search/">Search</a></li>
				<li class="selected"><a class="selected" href="/gf/project/">Projects</a></li><li class="selectedBar"><img src="/themes/gforge5/images/clear.png" width="1" height="1" alt="clear" /></li>
				<li class="end"><a  href="/gf/snippet/">Snippets</a></li>
	</ul><img title='Search by ID' alt='Search by ID' class='SearchByIDMenu' id='SearchByIDIcon' src='/themes/gforge5/images/blue/searchbyid_off.gif' style='float:left; position:relative; top:0px;' onclick='SearchByIDMenu();' onmouseover='this.src="/themes/gforge5/images/blue/searchbyid_on.gif";' onmouseout='this.src="/themes/gforge5/images/blue/searchbyid_off.gif";'/><a href="http://gforgegroup.com/es/help.php?section=project" target="_blank" style='float:left; position:relative; top:0px;'><img title='Help' alt='Help' class='HelpMenu' id='helpIcon' src='/themes/gforge5/images/blue/help_off.gif' style='float:left; position:relative; top:0px;' onmouseover='this.src="/themes/gforge5/images/blue/help_on.gif";' onmouseout='this.src="/themes/gforge5/images/blue/help_off.gif";'/></a>		<div id="login" nowrap="nowrap"><a href="/gf/account/?action=Login&amp;redirect=%2Fgf%2Fproject%2Fsocs%2F">Log in</a> | <a href="/gf/account/?action=UserAdd">Register new account</a>		</div>
		<div class="clear"></div>
</div>
<div id="container">
	<div id="left">
		
<h1 class='navLabel'>SOCS</h1>
<div class='expandableMenu' ><a class="menuitem selected"  href="/gf/project/socs/">Summary</a>
<a class="menuitem regular"  href="/gf/project/socs/reporting/">Reporting</a>
<a class="menuitem regular"  href="/gf/project/socs/search/">Search</a>
<a class="menuitem regular"  href="/gf/project/socs/forum/">Forums</a>
<a class="menuitem regular"  href="/gf/project/socs/tracker/">Tracker</a>
<a class="menuitem regular"  href="/gf/project/socs/docman/">Docs and Data</a>
<a class="menuitem regular"  href="/gf/project/socs/news/">News</a>
<a class="menuitem regular"  href="/gf/project/socs/frs/">Files</a>
<a class="menuitem regular"  href="/gf/project/socs/mailman/">Lists</a>
<a class="menuitem regular"  href="/gf/project/socs/scmsvn/">SVN</a>
<h1 class="navLabel_bottom">&nbsp;</h1></div>		<div class="clear"></div>
	</div>
	<div id="right">
	                <div class="contentNav">
			<p id="crumbs"><a href="/">Home</a> » <a href="/gf/project/">Projects</a> » <a href="/gf/project/socs/">SOCS</a> » Home</p>
                        <div class="clear"></div>
                </div>
		<div class="main">
<table width="100%" border="0">
	<tr>
		<td width="70%" valign="top">
			<div><h1><span style="font-family: Arial">SOCS</span></h1>
<p><span style="font-size: small"><span style="font-family: Arial"><span class="Apple-style-span" style="color: rgb(54,60,27)">SOCS is a reference-based, ungapped alignment tool designed for mapping both standard </span></span></span><span style="font-size: x-small"><span class="Apple-style-span" style="color: rgb(54,60,27); font-family: arial"><span style="font-size: small"><span style="font-family: Arial"><span style="font-size: small">SOLiD</span></span></span></span></span><span style="font-size: small"><span class="Apple-style-span" style="color: rgb(54,60,27); font-family: arial"><span style="font-family: Arial">&nbsp;</span></span><span style="font-family: Arial"><span class="Apple-style-span" style="color: rgb(54,60,27)">data and bisulfite transformed SOLiD data.</span></span></span></p>
<p><span class="Apple-style-span" style="font-family: Arial; font-size: small; color: rgb(54, 60, 27); ">For usage instructions, see&nbsp;<em>Usage.html</em>, which is included in the package and posted in&nbsp;<em>Docs and Data</em>. &nbsp;Standard sample data are available at GEO, accession&nbsp;<a href="http://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE13543">GSE13543</a>. &nbsp;Bisulfite sample data are available <a href="http://solidsoftwaretools.com/gf/project/bisulfite/">from Applied Biosystems</a>.</span></p>
<p><span style="font-size: small; "><span style="font-family: Arial; ">OS: MacOSX/Unix/Linux</span></span></p>
<p><span style="font-family: Arial; "><span style="font-size: small; ">SOCS was developed at the Georgia Institute of Technology and the National Biodefense Analysis &amp; Countermeasures Center with assistance from Life Technologies.</span></span></p>
<p><span style="font-size: small; ">SOCS is licensed by the </span><a href="http://www.gnu.org/licenses/gpl.html"><span style="font-size: small; ">GNU General Public License</span></a><span style="font-size: small; ">.</span></p>
<p>&nbsp;</p>
<h3><span style="font-size: medium; ">Features</span></h3>
<table style="width: 606px; height: 113px" cellspacing="1" cellpadding="1" width="606" border="1">
    <tbody>
        <tr>
            <td><strong>Bisulfite capability</strong></td>
            <td>For methylation studies utilizing bisulfite sequencing, alignments can be tolerant of any bisulfite-induced nucleotide substitutions, while remaining tolerant to an additional&nbsp;user-specified number of color-space errors.&nbsp; Although runtimes will be significantly longer in this mode, it will be free of the bias caused by aligning to reference sequences with simulated conversion. &nbsp;See <em>Variant mode</em> in the <em>Options</em> section of <em>Usage.html</em></td>
        </tr>
        <tr>
            <td><strong>Short variant detection</strong></td>
            <td>Short sequence-space variants of a user-specified length (typically 1, for SNPs) can be inferred from valid color-space variants.&nbsp;&nbsp;See <em>Variant mode</em> in the <em>Options</em> section of <em>Usage.html</em></td>
        </tr>
        <tr>
            <td><strong>Census function</strong></td>
            <td>&nbsp;SOCS can optionally compute read coverage depth per nucleotide of the reference. &nbsp;Census of short variants and bisulfite transformations can also be computed.</td>
        </tr>
        <tr>
            <td>&nbsp;<strong>Multiple reference files</strong></td>
            <td>Multiple reference files can be provided, each with multiple sequences. &nbsp;The files can be in FASTA or 2bit format and can be mixed in a single alignment. &nbsp;SOCS will find the optimal alignment for each read across all reference files provided.</td>
        </tr>
    </tbody>
</table>
<p>&nbsp;</p>
<h2><span class="Apple-style-span" style="font-family: Arial; font-size: medium; ">Publications</span></h2>
<p><span style="font-size: small"><span style="font-family: Arial"><span class="Apple-style-span" style="color: rgb(54,60,27)">Ondov BD, Varadarajan A, Passalacqua KD, Bergman NH. Efficient mapping of ABI SOLiD sequence data to a reference genome for functional genomic applications. Bioinformatics</span></span></span><span style="font-family: Arial; "><span class="Apple-style-span" style="color: rgb(54, 60, 27); ">&nbsp; <span class="Apple-style-span" style="color: rgb(0, 0, 0); font-family: arial, helvetica, sans-serif; line-height: 15px; ">2008 Dec 1;24(23):2776-7</span></span></span><span style="font-size: small"><span style="font-family: Arial"><span class="Apple-style-span" style="color: rgb(54,60,27)">.&nbsp;</span></span></span><span class="Apple-style-span" style="font-size: 14px; color: rgb(54,60,27); font-family: arial"><u><a style="color: rgb(96,39,46)" target="_blank" href="http://bioinformatics.oxfordjournals.org/cgi/reprint/btn512"><span style="font-size: small"><span style="font-family: Arial">Full text</span></span></a></u></span></p>
<p><span style="font-family: Arial"><span style="font-size: small">Ondov BD, Cochran C, Landers M, Meredith GD, Dudas M, Bergman NH. &nbsp;An alignment algorithm for bisulfite sequencing using the Applied Biosystems SOLiD System. &nbsp;Bio</span>informatics&nbsp; <span class="Apple-style-span" style="font-family: arial, helvetica, sans-serif; line-height: 15px; ">2010 Aug 1;26(15):1901-2.</span><span style="font-size: small">&nbsp;<a href="http://bioinformatics.oxfordjournals.org/cgi/reprint/btq291">Full text</a></span></span></p>
<p><span style="font-size: small">&nbsp;</span></p>
<h3><span style="font-size: small"><span style="font-size: medium"><span style="font-family: Arial">Contact</span></span></span></h3>
<p><span style="font-family: Arial"><span style="font-size: small">Please contact Nicholas Bergman, PhD at the National Biodefense Analysis &amp; Countermeasures Center with any questions, problems, or suggestions.</span></span></p>
<p><span style="font-family: Arial"><span style="font-size: small">bergmann@nbacc.net</span></span></p>
<p>&nbsp;</p>
<p><span class="Apple-style-span" style="font-size: small; font-family: Arial">
		<p>
		<table width="100%" class="tabular" summary="" cellpadding="5" cellspacing="1" >
			<tr class="th">
				<th nowrap="nowrap">Recent News</th></tr>
			<tr class="l"  ><td  valign="top"><strong><a href="/gf/project/socs/news/?action=NewsThreadView&amp;id=40">Version 2.0</a></strong><br /><a href="/gf/user/nickbergman/">Nicholas Bergman</a><br />2010-03-05<p>Version 2.0 is now available.  Major updates include:<br />
<br />
- bisulfite mode<br />
- multi-sequence fasta and 2bit support<br />
- 64bit-aware<br />
<br />
A complete description of changes can be found in Version_2_guide.html under Docs and Data.</p></td>
			</tr>
			<tr class="d"  ><td  valign="top"><strong><a href="/gf/project/socs/news/?action=NewsThreadView&amp;id=36">Crashes with SOLiD 3 data</a></strong><br /><a href="/gf/user/nickbergman/">Nicholas Bergman</a><br />2009-10-08<p>Several users have encountered crashes that were traced to uncalled colors, which appear as &quot;.&quot; in the csfasta file.  A read filtering script has been posted with 1.2.1, and it is recommended that this script is run on any SOLiD 3 data before running SOCS.<br />
<br />
Scripts and usage information are available in scripts.tar.</p></td>
			</tr>
			<tr class="l"  ><td  valign="top"><strong><a href="/gf/project/socs/news/?action=NewsThreadView&amp;id=27">User feedback for version 2</a></strong><br /><a href="/gf/user/nickbergman/">Nicholas Bergman</a><br />2009-04-09<p>We are currently working on version 2 of SOCS and would like to hear how it can be improved.  Let us know what kinds of features you would like to see or what kinds of bottlenecks SOCS causes in your workflow.<br />
<br />
Here are some features we are already working on:<br />
- bisulfite mode<br />
- multiple contig support<br />
- 64-bit version<br />
<br />
To leave feedback, email socs@biology.gatech.edu or post on the thread ...</p></td>
			</tr>
			<tr class="d"  ><td  valign="top"><strong><a href="/gf/project/socs/news/?action=NewsThreadView&amp;id=22">Version 1.2.1 - Important fix</a></strong><br /><a href="/gf/user/nickbergman/">Nicholas Bergman</a><br />2009-01-21<p>Previous versions contained a bug that affected best match files (.best.txt) for mappings that took more than one round.  The read number column restarted at 0 for each round (instead of representing the absolute order in the csfasta file).<br />
<br />
Score files (.map, .amb, .imm) were not affected.<br />
<br />
.imm files have also been renamed to .vmm (valid mismatch).</p></td>
			</tr>
			<tr class="l"  ><td  valign="top"><strong><a href="/gf/project/socs/news/?action=NewsThreadView&amp;id=15">Version 1.2</a></strong><br /><a href="/gf/user/nickbergman/">Nicholas Bergman</a><br />2008-11-21<p>Version 1.2 adds detection of contiguous sequence-space variants longer than 1 base (up to one less than the mismatch tolerance).  Bugs reporting the number of color space mismatches for mapped reads have also been fixed.</p></td>
			</tr><tr style="margin-top:0; margin-bottom:0; padding-top:0; padding-bottom:0"><td style="margin-top:0; margin-bottom:0; padding-top:0; padding-bottom:0" class="tFooter" valign="top" colspan="1" align="right">&nbsp;</td></tr></table>
		</p>
</span></p>
<p><span class="Apple-style-span" style="font-family: Arial; font-size: small; ">&nbsp;</span></p>
<p>
		<p>
		<table width="100%" class="tabular" summary="" cellpadding="5" cellspacing="1" >
			<tr class="th">
				<th nowrap="nowrap">Time</th>
				<th nowrap="nowrap">Activity Type</th>
				<th nowrap="nowrap">By</th></tr>
			<tr class="l">
				<td colspan="3">2009-Oct-09</td>
			</tr>
			<tr class="d"  ><td  valign="top">&nbsp;&nbsp;&nbsp;15:53:47</td><td  valign="top"><a href="/gf/project/socs/forum/?action=ForumBrowse&amp;_forum_action=MessageReply&amp;message_id=149">Forum post: socs output to SOLiD gff v0.2?  to .ma file?</a></td><td  valign="top"><a href="/gf/user/mitzi/">Mitzi Morris</a></td>
			</tr><tr style="margin-top:0; margin-bottom:0; padding-top:0; padding-bottom:0"><td style="margin-top:0; margin-bottom:0; padding-top:0; padding-bottom:0" class="tFooter" valign="top" colspan="3" align="right">&nbsp;</td></tr></table>
		</p>
</p><br /></div>		</td>
		<td>&nbsp;</td>
		<td nowrap="nowrap" valign="top" width="30%" rowspan="2">
			
		<!-- Box Top Start -->
<table width="100%" class="tabular" cellpadding="5" cellspacing="1" summary="">
                        <tr class="th">
                                <th nowrap="nowrap">Join Project</th>
			</tr>
			<tr class="d">
				<td>
		<!-- Box Top end -->
		<br /> <del class='button'><span> Request to join project</span></del></center>
		<!-- Box Middle Start -->
				</td>
			</tr>
			<tr class="th">
				<th nowrap="nowrap">Description</th>
			</tr>
			<tr class="d">
				<td>

		<!-- Box Middle end -->
		Alignment tool with bisulfite<br />
functionality
		<!-- Box Middle Start -->
				</td>
			</tr>
			<tr class="th">
				<th nowrap="nowrap">Developer Info</th>
			</tr>
			<tr class="d">
				<td>

		<!-- Box Middle end -->
		<a href="/gf/user/nickbergman/">Nicholas Bergman</a><br /><a href="/gf/user/msalit/">Marc Salit</a><br />
		<!-- Box Middle Start -->
				</td>
			</tr>
			<tr class="th">
				<th nowrap="nowrap">Trove Categorization</th>
			</tr>
			<tr class="d">
				<td>

		<!-- Box Middle end -->
		<ul><li>Development Status: 5 - Production/Stable</li>
<li>Intended Audience: End Users/Desktop</li>
<li>License: Not Applicable</li>
<li>Operating System: MacOS</li>
<li>Programming Language: C++</li>
<li>Spoken Language: English</li>
<li>Topic: Bio-Informatics</li>
</ul>
		<!-- Box Bottom Start -->
				</td>
			</tr>
		</table>
		<!-- Box Bottom End -->		</td>
	</tr>
</table>
	<center>
		<br /><br /><a href="http://gforge.org/"><img src="/themes/gforge5/images/gforge-as-logo-large.png" height="43" width="130" alt="Powered By GForge&reg; Collaborative Development Environment" border="0" /></a><br /><br />
	</center>
		</div>
		<div class="clear"></div>
	</div>

</body>
</html>
