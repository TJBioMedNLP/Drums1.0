<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html>
<head>
    <title>BioCoder - Microsoft Research</title>
    <style type="text/css">
        /* Remove margins from the 'html' and 'body' tags, and ensure the page takes up full screen height */
        html, body
        {
            height: 100%;
            margin: 0;
            padding: 0;
        }
        body
        {
            font-family: Calibri, sans-serif;
        }
        /* Set the position and dimensions of the background image. */
        #page-background
        {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }
        /* Specify the position and layering for the content that needs to appear in front of the background image. Must have a higher z-index value than the background image. Also add some padding to compensate for removing the margin from the 'html' and 'body' tags. */
        #content
        {
            position: relative;
            z-index: 1;
            padding: 10px;
        }
    </style>
    <!-- The above code doesn't work in Internet Explorer 6. To address this, we use a conditional comment to specify an alternative style sheet for IE 6 -->
    <!--[if IE 6]>
<style type="text/css">
html {overflow-y:hidden;}
body {overflow-y:auto;}
#page-background {position:absolute; z-index:-1;}
#content {position:static;padding:10px;}
</style>
<![endif]-->
</head>
<body>
    <div id="page-background">
        <img src="images/background.jpg" width="100%" height="100%" alt=""></div>
    <div id="content">
        <div>
            <a href="http://research.microsoft.com/" onClick="stc(this, 1)">
                <img src="images/logo_msr.png" border="0" style="width: 107px; height: 30px; position: absolute;
                    top: 10px; right: 10px;">
            </a>
        </div>
        <h1>
            BioCoder: A Programming Language for Biology Protocols</h1>
        <p align="justify">
            For decades, biologists have relied on written descriptions of protocols to guide
            their experiments in the laboratory. However, due to recent technology trends, the
            practice of describing protocols with free-flowing English-language text is quickly
            becoming inadequate and obsolete. First, we are witnessing immense advances in laboratory
            automation systems. Microfluidic chips have been evolving at a pace faster than
            Moore’s Law, with the number of valves per chip doubling every four months. In order
            to leverage such technologies for biological experimentation, it will be necessary
            to express the protocols in a format that is not only comprehensible by humans,
            but also by machines. Second, the complexity of biology protocols is increasing
            dramatically. As we attempt to synthesize living systems as a composition of many
            parts, we will need to execute lengthy protocols with great precision. We are developing
            a high-level programming language that enables standardization and automation of
            biology protocols. Our vision is to change the way that experimental methods are
            communicated: rather than publishing a written account of the protocols used, researchers
            will simply publish the code. As microfluidic devices mature, one could automatically
            replicate a colleague’s experiment – or call it as a subroutine – by downloading
            the code to your own microfluidic chip. In the meantime, the code can be automatically
            converted to human-readable steps for manual execution in the laboratory. When written
            as a computer program, biology protocols can be parameterized to facilitate reuse
            in different contexts. They can also be mapped automatically to the setup of a given
            laboratory, taking into account the equipment and reagents that are available.</p>
        <p align="center">
            <img src="images/schematic.png" alt="BioCoder Schematic" style="width: 600px; height: 200px;
                position: relative;"></p>
        <p align="center">
            <i>BioCoder schematic</i></p>
        <p align="justify">
            As a step towards this vision, we are defining and implementing the BioCoder language
            for molecular biology protocols. Our current focus is expanding the language capabilities
            to encompass a broad and useful range of protocols. To date, we have expressed 53
            protocols in the language, with protocols sourced from textbooks, classes, and published
            papers. In the process of formalizing these protocols, we discovered and fixed several
            errors in the original descriptions. We have also implemented a C++ library that
            converts BioCoder code to a human-readable format.</p>
        <h2>Publications:</h2>

            For more information on BioCoder, please see our <a href="http://www.jbioleng.org/content/4/1/13"
                target="_blank" onClick="stc(this, 2)">paper</a> in the Journal of Biological Engineering.

	    <p>Previously, we gave a <a href="IWBDA presentation.pdf" target="_blank" onClick="stc(this, 3)">presentation</a>
            on BioCoder at the International Workshop on BioDesign Automation (2009).</p>


        <h2>
            Download:</h2>
        <p>
            BioCoder is available for download <a href="http://research.microsoft.com/en-us/downloads/4f38cf96-3978-443d-ba23-105fb53d1caf/"
                target="_blank" onClick="stc(this, 4)">here</a>.</p>
        <h2>
            Documentation:</h2>
        <p>
            You can browse through the BioCoder Documentation <a href="documentation/index.html" target="_blank" onClick="stc(this, 5)">
                here</a>. (The documentation has also been included in the download file)</p>
        <h2>
            Tutorial:</h2>
        <p>
            For a beginner's guide to using BioCoder, please click <a href="tutorial/index.html"
                target="_blank" onClick="stc(this, 6)">here</a>.</p>
        <h2>
            People:</h2>
        <ul>
            <li><a href="http://research.microsoft.com/en-us/um/people/thies/" target="_blank" onClick="stc(this, 7)">William
                Thies</a></li>
            <li>Vaishnavi Ananthanarayanan</li></ul>
        <h2>
            Feedback:</h2>
        <p>
            Please send questions and comments to <a href="mailto:ananthan@mpi-cbg.de" onClick="stc(this, 8)">Vaishnavi
                Ananthanarayanan</a>.</p>
    </div>
    <!-- Start of StatCounter Code -->

    <script type="text/javascript">
var sc_project=5708382; 
var sc_invisible=1; 
var sc_partition=71; 
var sc_click_stat=1; 
var sc_security="c7bf9b37"; 
    </script>

    <script type="text/javascript" src="http://www.statcounter.com/counter/counter.js"></script>

    <noscript>
        <div class="statcounter">
            <a title="hit counter for blogger" href="http://www.statcounter.com/blogger/" target="_blank" onClick="stc(this, 9)">
                <img class="statcounter" src="http://c.statcounter.com/5708382/0/c7bf9b37/1/" alt="hit counter for blogger"></a></div>
    </noscript>
    <!-- End of StatCounter Code -->
<script type="text/javascript">
function stc(e,linkIndex){if(document.images){var linkText;if(navigator.appName.toLowerCase()=="microsoft internet explorer"){linkText=e.innerText}else{linkText=e.textContent}if(linkText==""){if(e.firstChild){var firstChild=e.firstChild.nodeName.toUpperCase();if(firstChild=="IMG"){linkText="Image: "+getName(e.firstChild.getAttribute('src'))}}else{var nodeName=e.nodeName.toUpperCase();if(nodeName=="AREA"){linkText="ImageMap: "+e.href}}}if(linkText==""){linkText=e.href}(new Image()).src="/a/i/stg.gif?f="+escape(document.location.href)+"&t="+escape(e.href)+"&i="+linkIndex+"&n="+escape(trimString(linkText))}}function getName(s){if(s.lastIndexOf('/')>=0){return(s.substring(s.lastIndexOf('/')+1,s.length))}else{return(s)}}function trimString(s){return(s.replace(/^\s*/,"").replace(/\s*$/,""))}
</script>
</body>
</html>
