<html>

<head>
<meta http-equiv="Content-Language" content="en-us">
<meta http-equiv="Content-Type" content="text/html; charset=windows-1252">
<title>SimCell - Home</title>
<script language="JavaScript">
<!--
function FP_swapImg() {//v1.0
 var doc=document,args=arguments,elm,n; doc.$imgSwaps=new Array(); for(n=2; n<args.length;
 n+=2) { elm=FP_getObjectByID(args[n]); if(elm) { doc.$imgSwaps[doc.$imgSwaps.length]=elm;
 elm.$src=elm.src; elm.src=args[n+1]; } }
}

function FP_preloadImgs() {//v1.0
 var d=document,a=arguments; if(!d.FP_imgs) d.FP_imgs=new Array();
 for(var i=0; i<a.length; i++) { d.FP_imgs[i]=new Image; d.FP_imgs[i].src=a[i]; }
}

function FP_getObjectByID(id,o) {//v1.0
 var c,el,els,f,m,n; if(!o)o=document; if(o.getElementById) el=o.getElementById(id);
 else if(o.layers) c=o.layers; else if(o.all) el=o.all[id]; if(el) return el;
 if(o.id==id || o.name==id) return o; if(o.childNodes) c=o.childNodes; if(c)
 for(n=0; n<c.length; n++) { el=FP_getObjectByID(id,c[n]); if(el) return el; }
 f=o.forms; if(f) for(n=0; n<f.length; n++) { els=f[n].elements;
 for(m=0; m<els.length; m++){ el=FP_getObjectByID(id,els[n]); if(el) return el; } }
 return null;
}
// -->
</script>
</head>

<body onload="FP_preloadImgs(/*url*/'button2.jpg', /*url*/'button3.jpg', /*url*/'button10.jpg', /*url*/'button11.jpg', /*url*/'button13.jpg', /*url*/'button14.jpg', /*url*/'button16.jpg', /*url*/'button17.jpg', /*url*/'button19.jpg', /*url*/'button1A.jpg')">

<table border="2" width="100%" id="table1" bordercolorlight="#000000" bordercolordark="#000000" bgcolor="#0099CC" cellspacing="1">
	<tr>
		<td><hr color="#000000">
		<p align="center">
		<img border="0" src="SplashScreen.jpg" width="400" height="164"></p>
		<hr color="#000000">
		<p align="center">
		<a href="index.html">
		<img border="0" id="img1" src="button1.jpg" height="35" width="125" alt="Home" fp-style="fp-btn: Corporate 9; fp-proportional: 0" fp-title="Home" onmouseover="FP_swapImg(1,0,/*id*/'img1',/*url*/'button2.jpg')" onmouseout="FP_swapImg(0,0,/*id*/'img1',/*url*/'button1.jpg')" onmousedown="FP_swapImg(1,0,/*id*/'img1',/*url*/'button3.jpg')" onmouseup="FP_swapImg(0,0,/*id*/'img1',/*url*/'button2.jpg')"></a>&nbsp;&nbsp;&nbsp;&nbsp;
		<a href="Screenshots.html">
		<img border="0" id="img2" src="buttonF.jpg" height="35" width="125" alt="Screenshots" fp-style="fp-btn: Corporate 9; fp-proportional: 0" fp-title="Screenshots" onmouseover="FP_swapImg(1,0,/*id*/'img2',/*url*/'button10.jpg')" onmouseout="FP_swapImg(0,0,/*id*/'img2',/*url*/'buttonF.jpg')" onmousedown="FP_swapImg(1,0,/*id*/'img2',/*url*/'button11.jpg')" onmouseup="FP_swapImg(0,0,/*id*/'img2',/*url*/'button10.jpg')"></a>&nbsp;&nbsp;&nbsp;&nbsp;
		<a href="Downloads.html">
		<img border="0" id="img3" src="button12.jpg" height="35" width="125" alt="Downloads" fp-style="fp-btn: Corporate 9; fp-proportional: 0" fp-title="Downloads" onmouseover="FP_swapImg(1,0,/*id*/'img3',/*url*/'button13.jpg')" onmouseout="FP_swapImg(0,0,/*id*/'img3',/*url*/'button12.jpg')" onmousedown="FP_swapImg(1,0,/*id*/'img3',/*url*/'button14.jpg')" onmouseup="FP_swapImg(0,0,/*id*/'img3',/*url*/'button13.jpg')"></a>&nbsp;&nbsp; &nbsp;
		<a href="Help.html">
		<img border="0" id="img4" src="button15.jpg" height="35" width="125" alt="Help Manual" fp-style="fp-btn: Corporate 9; fp-proportional: 0" fp-title="Help Manual" onmouseover="FP_swapImg(1,0,/*id*/'img4',/*url*/'button16.jpg')" onmouseout="FP_swapImg(0,0,/*id*/'img4',/*url*/'button15.jpg')" onmousedown="FP_swapImg(1,0,/*id*/'img4',/*url*/'button17.jpg')" onmouseup="FP_swapImg(0,0,/*id*/'img4',/*url*/'button16.jpg')"></a>&nbsp;&nbsp;&nbsp;&nbsp;
		<a href="Contact.html">
		<img border="0" id="img5" src="button18.jpg" height="35" width="125" alt="Contact" onmouseover="FP_swapImg(1,0,/*id*/'img5',/*url*/'button19.jpg')" onmouseout="FP_swapImg(0,0,/*id*/'img5',/*url*/'button18.jpg')" onmousedown="FP_swapImg(1,0,/*id*/'img5',/*url*/'button1A.jpg')" onmouseup="FP_swapImg(0,0,/*id*/'img5',/*url*/'button19.jpg')" fp-style="fp-btn: Corporate 9; fp-proportional: 0" fp-title="Contact"></a></td>
	</tr>
</table>

<p align="left">&nbsp;</p>
<table border="1" width="100%" id="table2" bgcolor="#D7D7D7" bordercolorlight="#000000" bordercolordark="#000000">
	<tr>
		<td><img border="0" src="separator.jpg" width=100% height="18"><p><b>
		<font size="5" face="Arial">Overview</font></b></p>
		<p><font face="Arial" size="4">SimCell 
		is a DCA Cell simulator used to simulate cellular and biochemical 
		processes, calculated by a DCA algorithm. The user, through the use of 
		the SimCell Interface may create:&nbsp;&nbsp;&nbsp; </font></p>
		<p><font face="Arial" size="4"><br>
		1) Small molecules</font></p>
		<p><font face="Arial" size="4">2) Membrane </font></p>
		<p><font face="Arial" size="4">3) Membrane proteins (which can only 
		exist in Membranes)</font></p>
		<p><font face="Arial" size="4">4) Protein/RNA molecules</font></p>
		<p><font face="Arial" size="4">5) DNA molecules (which are non-mobile), 
		and </font></p>
		<p><font face="Arial" size="4">6) Genes (which can only exist in 
		Membranes).</font></p>
		<p><font size="4" face="Arial">These cellular components can then 
		interaction amongst themselves to create fascinating new processes. <br>
		These Interactions include:</font></p>
		<p><font size="4" face="Arial">1) Bind and Stick, 2) Touch and Go, 3) 
		Transport.</font></p>
		<p><font face="Arial" size="4">After creating the components on the 
		scratch pad/draw pad, the SimCell simulator will then model the 
		processes illustrated on the user interface and simulate. Each 
		simulation iteration represents a SimCell millisecond. In each 
		iteration, based on a random seed, the movable components have the 
		random ability to move in 8 different directions, these include: North, 
		Northeast, East, Southeast, South, Southwest, West and Northwest. Also 
		along with movement, these components are subjected to user defined 
		creation states and decay states, which is also based on the random 
		generator seed.</font></p>
		<p><font face="Arial" size="4"><br>
		Along with being able to simulate, the user will also be able to output 
		their results in the form of a graph or a series of screenshots, 
		identical to simulation graphics itself. These results can then be 
		either used to run an animation with the built-in animation viewer or 
		used for personal purposes.<br>
&nbsp;</font></td>
	</tr>
</table>
<p>&nbsp;</p>
<table border="1" width="100%" id="table3" bordercolorlight="#000000" bordercolordark="#000000" bgcolor="#D7D7D7">
	<tr>
		<td><img border="0" src="separator.jpg" width=100% height="18"><p><b>
		<font face="Arial" size="5">Publication</font></b></p>
		<p><a href="http://www.bioinfo.de/isb/2004/05/0015/"><font face="Arial" size="4">
		David S. Wishart, Robert Yang, David 
		Arndt, Joseph Cruz and Peter Tang. Dynamic cellular automata: a simple 
		but powerful approach to cellular simulation. In Silico Biology.</font>
		</a>
		<br>
&nbsp;</td>
	</tr>
</table>

</body>

</html>